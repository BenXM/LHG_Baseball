'----------------------------------------
'          SCHEDULE Subroutine
'----------------------------------------
'This subroutine gives the user several
'options for interfacing with the Scheduler
'and also user boxscores generated by 
'auto-played games
Sub SCHEDULE ()

    Dim scheduleFile$
    ReDim menuChoices$(1 To 8)

    Shared NS%
    Shared scheduleAP%(), scheduleNG%()

    _Title "Full Count Baseball - Scheduler"

    scheduleNG%(0, 8) = 0
    scheduleNG%(0, 3) = 1
    scheduleNG%(0, 7) = 0
    scheduleNG%(0, 2) = 1
    scheduleNG%(0, 14) = 4

    Do

        Color 7, 0
        Cls

        Call TITLE_SCHEDULER
        Locate 19
        Color 2
        Print "GENERATING A STANDARD SEASON SCHEDULE IS TO BE USED IN CONJUNCTION"
        Print "WITH THE STANDINGS AND LEAGUE LEADERS OPTIONS. YOU MUST ALREADY HAVE"
        Print "CREATED AN APPROPRIATE LEAGUE FOR THIS OPTION TO PROPERLY FUNCTION."

        menuChoices$(1) = "ENTER A NEW SCHEDULE                             "
        menuChoices$(2) = "RETRIEVE/EDIT/PLAY AN EXISTING SCHEDULE          "
        menuChoices$(3) = "EXTRACT ONE TEAM'S SCHEDULE FROM LEAGUE SCHEDULE "
        menuChoices$(4) = "CHANGE THE MODE OF PLAY FOR A TEAM IN A SCHEDULE "
        menuChoices$(5) = "MAKE GLOBAL CHANGES TO A SCHEDULE                "
        menuChoices$(6) = "GENERATE A STANDARD SEASON SCHEDULE              "
        menuChoices$(7) = "BOXSCORE MAINTENANCE / SAVE BOXSCORE PARAMETERS  "
        menuChoices$(8) = "EXIT AUTO SCHEDULER TO FULL COUNT MENU           "
        Selection% = 1
        Count% = 8
        Start% = 1
        ExitCode% = 8
        FileFGColr% = 15: FileBGColr% = 1
        HiLiteFGColr% = 0: HiLiteBGColr% = 7
        Spacing% = 1
        Row% = 8
        Column% = 16

        Call box0(7, 15, 16, 65, 2, 15, 1)

        _MouseShow "DEFAULT"
        MMenuVert menuChoices$(), Selection%, Start%, ExitCode%, FileFGColr%, FileBGColr%, HiLiteFGColr%, HiLiteBGColr%, Count%, Row%, Column%
        _MouseHide

        Color , 0

        If ExitCode% <> 27 Then

            Select Case Selection%
            
                Case 1:
                    'number of games in schedule
                    scheduleAP%(0) = 0
                    NS% = 0

                    Do
                        'Get name of new schedule
                        Color 15, 0
                        Cls

                        JJ = 7

                        Locate 6, 8
                        Color 15, 1

                        'Print box top
                        Print " " + Chr$(214); String$(61, 196); Chr$(183) + " ";

                        'Print box sides
                        For II = 1 To JJ
                            Locate 6 + II, 8
                            Print " " + Chr$(186); String$(61, 32); Chr$(186) + " ";
                        Next

                        'Print box bottom
                        Locate 7 + JJ, 8
                        Print " " + Chr$(211); String$(61, 196); Chr$(189) + " ";

                        Locate 7, 32
                        Locate , 12: Print "ENTER NAME FOR SCHEDULE: ": Print
                        Locate , 12: Print "THE NAME SHOULD HAVE NO PERIODS OR SPECIAL CHARACTERS"
                        Locate , 12: Print "DO NOT ADD A FILE EXTENSION; THE PROGRAM"
                        Locate , 12: Print "WILL AUTOMATICALLY ADD .SCD"
                        Locate , 12: Print "SAMPLE NAMES ARE ARKANSAS, LSU-68, IU76, ETC."
                        Locate 7, 37: Input scheduleFile$

                        If scheduleFile$ <> "" Then

                            Do
                                Locate 13, 12: Print "ANY CHANGE? (Y/N) "
                                I$ = GetKeyPress$
                            Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

                        End If

                    Loop Until UCase$(I$) = "N" And scheduleFile$ <> ""

                    Color 15, 0

                    Call NewSchedule(scheduleFile$)

                Case 2 To 5:

                    scheduleFile$ = ChooseFile$ (diskPaths$(0) + "*.SCD", "SCHEDULE", ExitCode%)

                    If ExitCode% <> 27 And ExitCode% <> 0 Then

                        Call LoadScheduleInfo (scheduleFile$)

                        Cls

                        'Extract / Change / Global
                        If Selection% >= 3 And Selection% <= 5 Then
                            Call ExtractSchedule(Selection%, scheduleFile$)
                            If Selection% >= 4 Then Call SaveScheduleFile(scheduleFile$)
                        Else
                            'Retrieve / Edit / Play Schedule
                            Color 15, 0
                            Call NewSchedule(scheduleFile$)
                        End If

                    End If

                Case 6:
                    'Generate schedule
                    Call CreateSeasonSchedule

                Case 7:
                    Call BoxscoreMaintenance

                Case 8: 
                    Cls

            End Select

        End If

    Loop Until Selection% = 8 Or ExitCode% = 27

End Sub


'----------------------------------------
'       NewSchedule SubRoutine
'----------------------------------------
'This subroutine facilitates the user 
'creation of a schedule. It provides all 
'options required and displays the schedule 
'while editing
Sub NewSchedule (scheduleFile$)

    Shared BS%, NS%
    Shared N$

    Shared homeScores(), visitorScores()
    Shared scheduleAP%(), scheduleNG%()
    Shared scheduleH$(), scheduleV$()
    Shared scheduleYN$()

    Shared modeAbbrev$(), yesNo$()

    Do

        Cls
        Locate 23, 1: Color , 1: Print Tab(80);
        
        Locate 23, 1
        Color 13: Print "MA";: Color 14: Print "-MODE OF PLAY  ";
        Color 13: Print "WEA";: Color 14: Print "-USE WEATHER";
        Color 11: Print " G";: Color 14: Print "-GOTO GAME";
        Color 11: Print " B";: Color 14: Print "-BOXSCORE OPTIONS"

        Locate 24, 1: Color , 1: Print Tab(80);: Locate 24, 1
        Color 11: Print "C";: Color 14: Print "-SAVE AND CONTINUE  ";
        Color 11: Print "A";: Color 14: Print "-ADD A GAME  ";
        Color 11: Print "D";: Color 14: Print "-DELETE A GAME  ";
        Color 11: Print "E";: Color 14: Print "-EDIT A GAME  ";
        Color 11: Print "PGUP  PGDN";

        Locate 25, 1: Color , 1: Print Tab(80);: Locate 25, 1
        Color 11: Print "S";: Color 14: Print "-SORT GAMES  ";
        Color 11: Print "P";: Color 14: Print "-PLAY GAMES   ";
        Color 11: Print "X";: Color 14: Print "-SAVE AND EXIT  ";
        Color 11: Print "Q";: Color 14: Print "-QUIT  ";
        Color 11: Print "R";: Color 14: Print "-RESET SCORES";

        Locate 1, 1: Print Tab(80);
        Locate 1, 1: Print scheduleFile$
        Locate 1, 33: Color 14: Print "AUTO SCHEDULER"

        Color 15, 0

        Locate 2, 1
        Color 14
        Print "GAME  DATE      TIME    VISITING TEAM        HOME TEAM            MA  DH  WEA"
        Color 15

        'Show 20 schedule entries on the screen at once
        For X = 1 To 20

            Locate X + 2, 1

            If X + NS% * 20 <= scheduleAP%(0) Then

                T1 = scheduleNG%(X + NS% * 20, 0)
                YN$ = scheduleYN$(X + NS% * 20, 0)
                Call ReadTeam (YN$, N$, T1)
                scheduleV$(X) = N$

                T1 = scheduleNG%(X + NS% * 20, 1)
                YN$ = scheduleYN$(X + NS% * 20, 1)
                Call ReadTeam (YN$, N$, T1)
                scheduleH$(X) = N$

                'Game number
                Print Using "####  "; X + NS% * 20;

                'Date
                Print Using "##/##/##"; scheduleNG%(X + NS% * 20, 17); scheduleNG%(X + NS% * 20, 16); scheduleNG%(X + NS% * 20, 18);

                'Time
                Locate , 17
                I$ = "A"
                HR% = scheduleNG%(X + NS% * 20, 15) / 100
                MIN% = scheduleNG%(X + NS% * 20, 15) - HR% * 100

                If HR% = 12 Then I$ = "P"
                If HR% > 12 Then HR% = HR% - 12: I$ = "P"

                TM$ = Right$(Str$(HR%), 2) + ":"

                If MIN% < 10 Then TM$ = TM$ + "0" + Right$(Str$(MIN%), 1)
                If MIN% >= 10 Then TM$ = TM$ + Right$(Str$(MIN%), 2)

                'Time
                TM$ = TM$ + I$
                Print TM$;

                'Visiting Team
                Locate , 25: Print scheduleV$(X); " ";
                If scheduleNG%(X + NS% * 20, 13) = 1 Then Print Using "###"; visitorScores(X + NS% * 20);

                'Home Team
                Locate , 46: Print scheduleH$(X); " ";
                If scheduleNG%(X + NS% * 20, 13) = 1 Then Print Using "###"; homeScores(X + NS% * 20);

                'Mode of Play
                Locate , 67: Print modeAbbrev$(scheduleNG%(X + NS% * 20, 8));

                'DH
                Locate , 72: If scheduleNG%(X + NS% * 20, 3) = 1 Then Print "Y";: Else Print "N";

                'Weather
                Locate , 75: Print yesNo$(1 - scheduleNG%(X + NS% * 20, 5))
            End If

        Next

        I$ = GetKeyPress$

        Select Case UCase$(I$)
        
            Case "A":
                ' *** ADD A GAME TO THE SCHEDULE ***
                V$ = ""
                H$ = ""

                'number of games in schedule
                scheduleAP%(0) = scheduleAP%(0) + 1
                targetGame% = scheduleAP%(0)

                BS% = Int((targetGame% - 1) / 20)
                If NS% < BS% Then NS% = BS%

                For X = 0 To 18
                    If X <> 13 Then
                        scheduleNG%(targetGame%, X) = scheduleNG%(targetGame% - 1, X)
                    End If
                Next

                For X = 0 To 1: 
                    scheduleYN$(targetGame%, X) = scheduleYN$(targetGame% - 1, X)
                Next

                DT$ = "04-04-93"
                TM$ = "07:30P"
                Call NewGame(V$, H$, YN$, NTMS, targetGame%)

            Case "E"
                Call EditGame

            Case "B":
                'ReDim array$(500) 'holds the main editor string array
                'Do
                '   Locate 23, 1: Print "ENTER GAME # TO GO TO        "
                '   Locate 23, 1: Input "ENTER GAME # TO GO TO "; targetGame%
                'Loop Until targetGame% >= 1 And targetGame% <= scheduleAP%(0)
                'NS% = Int((targetGame% - 1) / 20)
                'BN$ = diskPaths$(1) + "box" + Mid$(Str$(targetGame%, 2, Len(Str$(targetGame%))
                'Call EditBoxscore (BN$)

            Case "D":
                ' *** DELETE A GAME FROM THE SCHEDULE ***
                Do
                    Locate 24, 1: Input "ENTER GAME # TO DELETE "; targetGame%
                Loop Until targetGame% >= 1 And targetGame% <= scheduleAP%(0)

                For X = targetGame% To scheduleAP%(0) - 1
                    For X1 = 0 To 18
                        scheduleNG%(X, X1) = scheduleNG%(X + 1, X1)
                    Next
                    
                    visitorScores(X) = visitorScores(X + 1)
                    homeScores(X) = homeScores(X + 1)
                    
                    For X1 = 0 To 1
                        scheduleYN$(X, X1) = scheduleYN$(X + 1, X1)
                    Next
                Next

                scheduleAP%(0) = scheduleAP%(0) - 1
                BS% = Int((scheduleAP%(0) - 1) / 20)
                If NS% > BS% Then NS% = BS%

            Case "G":
                'GOTO A SPECIFIC PAGE
                Do
                    Locate 23, 1: Print "ENTER GAME # TO GO TO        "
                    Locate 23, 1: Input "ENTER GAME # TO GO TO "; targetGame%
                Loop Until targetGame% >= 1 And targetGame% <= scheduleAP%(0)

                NS% = Int((targetGame% - 1) / 20)

            Case "S":
                Call SortSchedule

            Case "C", "X":
                Call SaveScheduleFile(scheduleFile$)

            Case "Q", Chr$(27): '

            Case "P":
                Call SaveScheduleFile(scheduleFile$)

                ' *** PLAY GAMES ***
                Color , 0
                Cls

                JJ = 8

                Locate 6, 8: Color 15, 4

                'Print box top
                Print " " + Chr$(214); String$(61, 196); Chr$(183) + " ";

                'Print box sides
                For II = 1 To JJ
                    Locate 6 + II, 8
                    Print " " + Chr$(186); String$(61, 32); Chr$(186) + " ";
                Next

                'Print box bottom
                Locate 7 + JJ, 8
                Print " " + Chr$(211); String$(61, 196); Chr$(189) + " ";

                Do
                    'Locate 7, 32

                    Locate 8, 12: Print "TOTAL GAMES ="; scheduleAP%(0)
                    Locate 9, 12: Print "SELECT GAME # TO START AND END WITH": Print
                    Locate 10, 12: Input "ENTER START GAME #: "; SG%: Print
                    Locate 11, 12: Input "ENTER END GAME #:"; EG%: Print

                    Do
                        Locate 13, 12: Print "ANY CHANGE? (Y/N)"
                        I$ = GetKeyPress$
                    Loop Until UCase$(I$) = "N" Or UCase$(I$) = "Y"

                Loop Until UCase$(I$) = "N"

                If SG% <= 0 Then SG% = 1
                If EG% > scheduleAP%(0) Then EG% = scheduleAP%(0)

                Open "GAME82" For Output As #2
                Print #2, scheduleFile$ + ".SCD"
                Print #2, SG% 'Start Game
                Print #2, EG% 'End Game
                Print #2, 0
                Close 2

                For I = 1 To scheduleAP%(0)
                    HR% = Int(scheduleNG%(I, 15) / 100)
                    MIN% = scheduleNG%(I, 15) - HR% * 100
                    TM% = HR% * 60 + MIN%
                    scheduleNG%(I, 12) = Int(TM% / 30) - 18
                Next

                Open "TICKER" For Output As #2
                For I = 1 To 32: 
                    For I1 = 0 To 1: 
                        For I2 = 1 To 14
                            Print #2, -1
                        Next
                    Next
                Next

                For I = 1 To 32: 
                    For I1 = 0 To 1: 
                        Print #2, "XXX"
                    Next
                Next

                For I = SG% To SG% + 31
                    Print #2, scheduleNG%(I, 12)
                Next

                Close 2

                Call LOADER

                Call LoadScheduleInfo (scheduleFile$)

            Case "R":
                ' *** RESET GAMES ***
                For I = 1 To scheduleAP%(0)
                    scheduleNG%(I, 13) = 0
                Next

            Case Chr$(0) + "Q":
                ' *** PAGE DOWN ***
                If NS% >= BS% Then
                    NS% = BS%
                Else
                    NS% = NS% + 1
                End If

            Case Chr$(0) + "I":
                ' *** PAGE UP ***
                If NS% <> 0 Then
                    NS% = NS% - 1
                End If

        End Select

    Loop Until UCase$(I$) = "Q" Or UCase$(I$) = "X"

End Sub


'----------------------------------------
'          EditGame SubRoutine
'----------------------------------------
'This subroutine gives the user an inter-
'face for choosing games to edit, then
'calls the NewGame routine to essentially
'display the existing parameters and allow
'them to be modified
Sub EditGame ()

    Shared scheduleAP%()
    Shared scheduleH$(), scheduleV$()
    Shared scheduleYN$()
    Shared scheduleNG%()

    Dim DT$, TM$

    ' *** EDIT A GAME ***
    Do
        Locate 23, 1: Print "ENTER GAME # TO EDIT        "
        Locate 23, 1: Input "ENTER GAME # TO EDIT "; targetGame%
    Loop Until targetGame% >= 1 And targetGame% <= scheduleAP%(0)

    If targetGame% - Int(targetGame% / 20) * 20 = 0 Then 
        V$ = scheduleV$(20)
        H$ = scheduleH$(20)
        YN$ = scheduleYN$(20, 0)
    Else
        V$ = scheduleV$(targetGame% - Int(targetGame% / 20) * 20)
        H$ = scheduleH$(targetGame% - Int(targetGame% / 20) * 20)
        YN$ = scheduleYN$(targetGame% - Int(targetGame% / 20) * 20, 0)
    End If

    I$ = "A"
    HR% = Int(scheduleNG%(targetGame%, 15) / 100)
    MIN% = scheduleNG%(targetGame%, 15) - HR% * 100

    If HR% = 12 Then I$ = "P"
    If HR% > 12 Then HR% = HR% - 12: I$ = "P"
    TM$ = Right$(Str$(HR%), 2) + ":"

    If MIN% < 10 Then 
        TM$ = TM$ + "0" + Right$(Str$(MIN%), 1)
    Else
        TM$ = TM$ + Right$(Str$(MIN%), 2)
    End If

    TM$ = TM$ + I$
    DT$ = Right$(Str$(scheduleNG%(targetGame%, 17)), 2) + "/"
    DYMO% = Val(Right$(Str$(scheduleNG%(targetGame%, 16)), 2))

    If DYMO% < 10 Then 
        DYMO$ = "0" + Right$(Str$(scheduleNG%(targetGame%, 16)), 1)
    Else
        DYMO$ = Right$(Str$(scheduleNG%(targetGame%, 16)), 2)
    End If

    DT$ = DT$ + DYMO$ + "/" + Right$(Str$(scheduleNG%(targetGame%, 18)), 2)

    Call NewGame(V$, H$, YN$, NTMS, targetGame%)

End Sub


'----------------------------------------
'           NewGame SubRoutine
'----------------------------------------
'This subroutine gives the user an interface
'for editing and choosing options for the
'specified game in the schedule
Sub NewGame (visitor$, home$, YN$, NTMS, gameIndex%)

    Dim displayPause!

    Shared N$
    Shared scheduleH$(), scheduleV$()
    Shared scheduleYN$()

    Shared scheduleNG%()
    
    Shared playMode$(), pitcherEra$(), yesNo$()

    Do

        ' ** Enter New Game **
        Cls
        Color 2: Print Tab(29); "SELECT GAME OPTIONS"
        Print

        Locate 2, 2: Color 14: Print "(1) ";: Color 15: Print playMode$(scheduleNG%(gameIndex%, 8))
        Locate 3, 2: Color 14: Print "(2) ";: Color 15: Print "VISITING TEAM: "; visitor$
        Locate 4, 2: Color 14: Print "(3) ";: Color 15: Print "HOME TEAM: "; home$
        Locate 5, 2: Color 14: Print "(4) ";: Color 15: Print "DESIGNATED HITTER: "; yesNo$(scheduleNG%(gameIndex%, 3))
        Locate 6, 2: Color 14: Print "(5) ";: Color 15: Print Using "DISPLAY PAUSE IN SECONDS: ##.#  "; scheduleNG%(gameIndex%, 4) / 10
        Locate 7, 2: Color 14: Print "(6) ";: Color 15: Print "GAME DATE (XX-XX-XX) "; DT$; "   "
        Locate 8, 2: Color 14: Print "(7) ";: Color 15: Print "GAME TIME (XX:XXP) "; TM$; "   "
        Locate 9, 2: Color 14: Print "(8) ";: Color 15: Print "USE WEATHER EFFECTS: "; yesNo$(1 - scheduleNG%(gameIndex%, 5))
        Locate 10, 2: Color 14: Print "(9) ";: Color 15: Print "USE INJURIES "; yesNo$(1 - scheduleNG%(gameIndex%, 6))
        Locate 11, 2: Color 14: Print "(A) ";: Color 15: Print "USE LEFT/RIGHT SPLIT STATS "; yesNo$(1 - scheduleNG%(gameIndex%, 7))
        Locate 12, 2: Color 14: Print "(B) ";: Color 15: Print "USE DAYS REST DATA FOR PITCHERS "; yesNo$(1 - scheduleNG%(gameIndex%, 9))
        Locate 13, 2: Color 14: Print "(C) ";: Color 15: Print "USE MANAGER PROFILE, IF AVAILABLE "; yesNo$(1 - scheduleNG%(gameIndex%, 10))
        Locate 14, 2: Color 14: Print "(D) ";: Color 15: Print "USE VGA SCREENS, IF ABLE: "; yesNo$(1 - scheduleNG%(gameIndex%, 11))
        Locate 15, 2: Color 14: Print "(E) ";: Color 15: Print "PITCHER ERA : "; pitcherEra$(scheduleNG%(gameIndex%, 14))
        Locate 16, 2: Color 14: Print "(0) ";: Color 15: Print "ACCEPT SETTINGS"

        Do
            I$ = GetKeyPress$

            Select Case UCase$(I$)
                Case "A": I$ = "11"
                Case "B": I$ = "12"
                Case "C": I$ = "13"
                Case "D": I$ = "14"
                Case "E": I$ = "15"
            End Select

            setting = Val(I$)

            Select Case setting

                Case 1:
                    scheduleNG%(gameIndex%, 8) = scheduleNG%(gameIndex%, 8) + 1
                    If scheduleNG%(gameIndex%, 8) > 3 Then scheduleNG%(gameIndex%, 8) = 0

                Case 2, 3:

                    Call ChooseTeam (YN$, NTMS, teamNbr, team$)
                    
                    If teamNbr <> 0 Then

                        Color 15, 0
                        scheduleNG%(gameIndex%, setting - 2) = teamNbr
                        scheduleYN$(gameIndex%, setting - 2) = YN$

                        If setting = 2 Then
                            visitor$ = team$
                            scheduleV$(gameIndex% - Int(gameIndex% / 20) * 20) = team$
                        End If

                        If setting = 3 Then
                            home$ = team$
                            scheduleH$(gameIndex% - Int(gameIndex% / 20) * 20) = team$
                        End If

                    End If

                Case 4:
                    scheduleNG%(gameIndex%, 3) = 1 - scheduleNG%(gameIndex%, 3)

                Case 5:
                    Locate 7, 32: Input displayPause!
                    scheduleNG%(gameIndex%, 4) = displayPause! * 10

                Case 6:
                    Locate 11, 27: Input DT$

                Case 7:
                    Locate 12, 25: Input TM$

                Case 8:
                    scheduleNG%(gameIndex%, 5) = 1 - scheduleNG%(gameIndex%, 5)

                Case 9:
                    scheduleNG%(gameIndex%, 6) = 1 - scheduleNG%(gameIndex%, 6)

                Case 10: ' Back to beginning of loop

                Case 11:
                    scheduleNG%(gameIndex%, 7) = 1 - scheduleNG%(gameIndex%, 7)

                Case 12:
                    scheduleNG%(gameIndex%, 9) = 1 - scheduleNG%(gameIndex%, 9)

                Case 13:
                    scheduleNG%(gameIndex%, 10) = 1 - scheduleNG%(gameIndex%, 10)

                Case 14:
                    scheduleNG%(gameIndex%, 11) = 1 - scheduleNG%(gameIndex%, 11)

                Case 15:
                    scheduleNG%(gameIndex%, 14) = scheduleNG%(gameIndex%, 14) + 1
                    If scheduleNG%(gameIndex%, 14) > 8 Then scheduleNG%(gameIndex%, 14) = 0

            End Select

        Loop Until (setting >= 0 And setting <= 15)

        If visitor$ <> "" And home$ <> "" And TM$ <> "" And DT$ <> "" Then

            I$ = Right$(TM$, 1)
            TM$ = Left$(TM$, Len(TM$) - 1)
            MIN% = Val(Right$(TM$, 2))
            TM$ = Left$(TM$, Len(TM$) - 3)
            HR% = Val(TM$)

            If UCase$(I$) = "P" And HR% < 12 Then HR% = HR% + 12

            scheduleNG%(gameIndex%, 15) = HR% * 100 + MIN%
            scheduleNG%(gameIndex%, 17) = Val(Left$(DT$, 2))
            scheduleNG%(gameIndex%, 18) = Val(Mid$((DT$), 7, 2))
            scheduleNG%(gameIndex%, 16) = Val(Mid$((DT$), 4, 2))

        End If

    Loop Until setting = 0

End Sub

'----------------------------------------
'       ExtractSchedule SubRoutine
'----------------------------------------
'This is the core subroutine to leverage
'when mass changes are needing to be made 
'to a schedule. It essentially reads in
'the existing schedule parameters, prompts
'the user for the appropriate changes, and
'then writes the changes back to the orig-
'inal schedule file.
Sub ExtractSchedule (scheduleAction%, scheduleFile$)
    'scheduleAction% = 3: "EXTRACT ONE TEAM'S SCHEDULE FROM LEAGUE SCHEDULE
    'scheduleAction% = 4: "CHANGE THE MODE OF PLAY FOR A TEAM IN A SCHEDULE
    'scheduleAction% = 5: "MAKE GLOBAL CHANGES TO A SCHEDULE
    Dim displayPause!

    Shared N$

    Shared homeScores(), visitorScores()

    Shared scheduleAP%()
    Shared scheduleNG%()
    Shared scheduleYN$()

    Shared teamRatings%()
    Shared scheduleT%(), scheduleZ1%()

    Select Case scheduleAction%

        Case 5
            ' GLOBAL SETTINGS FOR A SCHEDULE
            Call ChangeGlobalSettings
            Call SaveScheduleFile(scheduleFile$)
            Call NewSchedule(scheduleFile$)

        Case 3, 4

            If scheduleAction% = 3 Then

                Color 15, 0
                Cls

                JJ = 7

                Locate 6, 8: Color 15, 1
                'Print box top
                Print " " + Chr$(214); String$(61, 196); Chr$(183) + " ";

                'Print box sides
                For II = 1 To JJ
                    Locate 6 + II, 8
                    Print " " + Chr$(186); String$(61, 32); Chr$(186) + " ";
                Next

                'Print box bottom
                Locate 7 + JJ, 8
                Print " " + Chr$(211); String$(61, 196); Chr$(189) + " ";

                Do
                    Locate 7, 32
                    Locate , 12: Print "ENTER NAME FOR SUB-SCHEDULE: ": Print
                    Locate , 12: Print "THE NAME SHOULD HAVE NO PERIODS OR SPECIAL CHARACTERS"
                    Locate , 12: Print "DO NOT ADD A FILE EXTENSION; THE PROGRAM"
                    Locate , 12: Print "WILL AUTOMATICALLY ADD .SCD"
                    Locate , 12: Print "SAMPLE NAMES ARE INDIANA, BOS68, CHI-76, ETC      "
                    Locate 7, 37: Input subSchedFile$

                    If subSchedFile$ <> "" Then

                        Do
                            Locate 13, 12
                            Print "ANY CHANGE? (Y/N) "
                            I$ = GetKeyPress$
                        Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N" Or I$ = Chr$(27)

                    End If

                Loop Until (UCase$(I$) = "N" And subSchedFile$ <> "") Or I$ = Chr$(27)

                If I$ <> Chr$(27) Then

                    Color 15, 0
                    Cls

                End If

            End If

            If I$ <> Chr$(27) Or scheduleAction% = 4 Then

                Call ChooseTeam (YN$, numberTeams, T1, N$)

                If T1 <> 0 Then

                    Color 15, 0
                    Cls

                    'Change mode of play
                    If scheduleAction% = 4 Then
                        Color teamRatings%(11), teamRatings%(12): Print N$;
                        Color 15, 0: Print " IS TO BE:"
                        Print
                        Print "(0) MANUALLY CONTROLLED": Print
                        Print "(1) COMPUTER CONTROLLED"

                        Do
                            C$ = GetKeyPress$
                            I1 = Val(C$)
                        Loop Until I1 = 0 Or I1 = 1

                        Input "ENTER DISPLAY PAUSE FOR THESE GAMES "; displayPause!

                    End If

                    For I = 1 To scheduleAP%(0)

                        scheduleYN$(I, 0) = RTrim$(scheduleYN$(I, 0))
                        scheduleYN$(I, 1) = RTrim$(scheduleYN$(I, 1))

                        If T1 = scheduleNG%(I, 0) And YN$ = scheduleYN$(I, 0) Or T1 = scheduleNG%(I, 1) And YN$ = scheduleYN$(I, 1) Then

                            ' CHANGE SETTINGS FOR A TEAM
                            If T1 = scheduleNG%(I, 0) And YN$ = scheduleYN$(I, 0) Then scheduleNG%(I, 8) = 2
                            If T1 = scheduleNG%(I, 1) And YN$ = scheduleYN$(I, 1) Then scheduleNG%(I, 8) = 1
                            If (T1 = scheduleNG%(I, 0) And YN$ = scheduleYN$(I, 0) Or T1 = scheduleNG%(I, 1) And YN$ = scheduleYN$(I, 1)) And I1 = 1 And scheduleAction% = 4 Then scheduleNG%(I, 8) = 3
                            scheduleNG%(I, 4) = displayPause! * 10

                            'Extract only
                            If Not (scheduleAction% = 4) Then
                                'Write matching games
                                Locate 1, 1: Print numberGames% + 1; " MATCHES"

                                Open diskPaths$(0) + subSchedFile$ + ".SCD" For Random As #1 Len = SCHEDULE_SIZE_BYTES
                                fileLength& = LOF(1)

                                numberGames% = fileLength& / SCHEDULE_SIZE_BYTES

                                For X = 0 To 18
                                    Field #1, X * 2 As X$, 2 As Q$(X + 1), SCHEDULE_SIZE_BYTES - 2 - 2 * X As X$
                                Next

                                Field #1, 38 As X$, 2 As Q$(22), 2 As Q$(23), 3 As Q$(20), 3 As Q$(21)

                                For X = 0 To 18: 
                                    LSet Q$(X + 1) = MKI$(scheduleNG%(I, X))
                                Next

                                For X = 0 To 1: 
                                    LSet Q$(20 + X) = scheduleYN$(I, X)
                                Next

                                LSet Q$(22) = MKI$(visitorScores(I)): LSet Q$(23) = MKI$(homeScores(I))

                                Put #1, numberGames% + 1

                                Close 1

                            End If 'Done checking schedule action

                        End If 'Done checking for matches

                    Next 'Done looping through games

                End If

            End If 'Done checking for ESC

    End Select

End Sub

'----------------------------------------
'       EditParameters SubRoutine
'----------------------------------------
'This subroutine gives the user an inter-
'face for editing the parameters by which
'"Special" boxscores are created / saved.
Sub EditParameters ()

    Dim E%(13)

    'EDIT THE PARAMETERS TO SAVE A SPECIAL EVENTS BOXSCORE
    If _FileExists("EVENTS.BOX") Then
        Open "EVENTS.BOX" For Input As #1
        For X = 1 To 13
            Input #1, E%(X)
        Next
        Close 1
    End If

    Cls
    Color 14
    Print "PARAMETERS FOR SAVING SPECIAL EVENTS BOXSCORES"

    X% = 2: Color 15

    Print " 1. IF INNINGS ARE OVER "; E%(1)
    Print " 2. A TEAM'S RUNS LESS THAN "; E%(2)
    Print " 3. A TEAM'S RUNS MORE THAN "; E%(3)
    Print " 4. A TEAM'S HITS LESS THAN "; E%(4)
    Print " 5. A TEAM'S HITS MORE THAN "; E%(5)
    Print " 6. BATTER'S HITS MORE THAN "; E%(6)
    Print " 7. BATTER'S RUNS MORE THAN "; E%(7)
    Print " 8. BATTER'S RBI'S MORE THAN "; E%(8)
    Print " 9. BATTER'S 2B'S MORE THAN "; E%(9)
    Print "10. BATTER'S 3B'S MORE THAN "; E%(10)
    Print "11. BATTER'S HR'S MORE THAN "; E%(11)
    Print "12. BATTER'S SB'S MORE THAN "; E%(12)
    Print "13. PITCHER'S K'S MORE THAN "; E%(13)

    C1 = 1

    Do

        Locate 23, 1: Print "SELECT # TO CHANGE 1-13 (0 TO CONTINUE) ";
        Input B9

        Select Case B9

            Case 1: Locate 2: Input " 1. IF INNINGS ARE OVER "; E%(1)
            Case 2: Locate 3: Input " 2. A TEAM'S RUNS LESS THAN "; E%(2)
            Case 3: Locate 4: Input " 3. A TEAM'S RUNS MORE THAN "; E%(3)
            Case 4: Locate 5: Input " 4. A TEAM'S HITS LESS THAN "; E%(4)
            Case 5: Locate 6: Input " 5. A TEAM'S HITS MORE THAN "; E%(5)
            Case 6: Locate 7: Input " 6. BATTER'S HITS MORE THAN "; E%(6)
            Case 7: Locate 8: Input " 7. BATTER'S RUNS MORE THAN "; E%(7)
            Case 8: Locate 9: Input " 8. BATTER'S RBI'S MORE THAN "; E%(8)
            Case 9: Locate 10: Input " 9. BATTER'S 2B'S MORE THAN "; E%(9)
            Case 10: Locate 11: Input "10. BATTER'S 3B'S MORE THAN "; E%(10)
            Case 11: Locate 12: Input "11. BATTER'S HR'S MORE THAN "; E%(11)
            Case 12: Locate 13: Input "12. BATTER'S SB'S MORE THAN "; E%(12)
            Case 13: Locate 14: Input "13. PITCHER'S K'S MORE THAN "; E%(13)

        End Select

    Loop Until B9 = 0 'ENTER also counts as 0

    'Save all changes
    Open "EVENTS.BOX" For Output As #1
    
    For X = 1 To 13
        Print #1, E%(X)
    Next

    Close 1

End Sub


'----------------------------------------
'    BoxscoreMaintenance SubRoutine
'----------------------------------------
'This subroutine gives the user a menu
'for several of the options available to
'manage and maintain boxscores.
Sub BoxscoreMaintenance ()

    ReDim menuChoices$(1 To 6)

    menuChoices$(1) = "SET PARAMETERS TO SAVE SPECIAL EVENTS BOXSCORES  "
    menuChoices$(2) = "ACCESS USER SAVED AND SPECIAL EVENTS BOXSCORES   "
    menuChoices$(3) = "DELETE ALL SCHEDULE GENERATED BOXSCORES          "
    menuChoices$(4) = "DELETE ALL USER SAVED, & SPECIAL BOXSCORES       "
    menuChoices$(5) = "DELETE ALL BOXSCORES (SCHEDULE, USER, &  SPECIAL)"
    menuChoices$(6) = "RETURN TO MAIN AUTO SCHEDULER MENU               "
    Selection% = 1
    Count% = 6
    Start% = 1
    ExitCode% = 6
    FileFGColr% = 15: FileBGColr% = 1
    HiLiteFGColr% = 0: HiLiteBGColr% = 7
    Spacing% = 1
    Row% = 8
    Column% = 16

    Do

        Color 15, 0

        Call TITLE_SCHEDULER

        Call box0(7, 15, 14, 65, 2, 15, 1)
        
        _MouseShow "DEFAULT"
        MMenuVert menuChoices$(), Selection%, Start%, ExitCode%, FileFGColr%, FileBGColr%, HiLiteFGColr%, HiLiteBGColr%, Count%, Row%, Column%
        _MouseHide

        If ExitCode% <> 27 Then

            Select Case Selection%

                Case 1:
                    Call EditParameters

                Case 2:
                    boxscoreFile$ = ChooseFile$ (diskPaths$(1) + "*.SPC", "BOXSCORE", ExitCode%)
                    
                    If ExitCode% <> 27 And ExitCode% <> 0 Then
                        boxName$ = diskPaths$(1) + boxscoreFile$
                        'ReDim array$(500) 'holds the main editor string array
                    End If

                Case 3
                    Spec$ = diskPaths$(1) + "BOX*."
                    Call DeleteBoxscores(Selection%, Spec$)

                Case 4
                    Spec$ = diskPaths$(1) + "*.SPC"
                    Call DeleteBoxscores(Selection%, Spec$)

                Case 5:
                    Spec$ = diskPaths$(1) + "*.SPC"
                    Call DeleteBoxscores(Selection%, Spec$)

                    Spec$ = diskPaths$(1) + "BOX*."
                    Call DeleteBoxscores(Selection%, Spec$)

                Case 6:
                    Cls

            End Select

        End If 'Done checking for ESC

    Loop Until Selection% = 6 Or ExitCode% = 27

End Sub


'----------------------------------------
'       SaveScheduleFile SubRoutine
'----------------------------------------
'This subroutine writes all scheduled data,
'as stored in the relevant arrays, back to
'the target schedule file.
Sub SaveScheduleFile (saveFile$)

    Shared homeScores(), visitorScores()
    Shared scheduleAP%(), scheduleNG%()
    Shared scheduleYN$()

    If _FileExists(diskPaths$(0) + saveFile$ + ".SCD") Then Kill diskPaths$(0) + saveFile$ + ".SCD"

    Open diskPaths$(0) + saveFile$ + ".SCD" For Random As #1 Len = SCHEDULE_SIZE_BYTES

    For X = 0 To 18
        Field #1, X * 2 As X$, 2 As Q$(X + 1), SCHEDULE_SIZE_BYTES - 2 - 2 * X As X$
    Next

    Field #1, 38 As X$, 2 As Q$(22), 2 As Q$(23), 3 As Q$(20), 3 As Q$(21)

    For I = 1 To scheduleAP%(0)

        For X = 0 To 18: 
            LSet Q$(X + 1) = MKI$(scheduleNG%(I, X))
        Next

        For X = 0 To 1: 
            LSet Q$(20 + X) = RTrim$(scheduleYN$(I, X))
        Next

        LSet Q$(22) = MKI$(visitorScores(I))
        LSet Q$(23) = MKI$(homeScores(I))

        Put #1, I

    Next

    Close 1

End Sub


'----------------------------------------
'       SortSchedule SubRoutine
'----------------------------------------
'This subroutine is used to automatically 
'sort all games in the schedule by their
'date / time.
Sub SortSchedule ()

    Dim schedDates&(MAX_GAMES)
    Dim D&, M&, Y&

    Shared homeScores(), visitorScores()
    Shared scheduleAP%(), scheduleNG%()
    Shared scheduleYN$()

    For I = 1 To scheduleAP%(0)
        HR% = Int(scheduleNG%(I, 15) / 100)
        MIN% = scheduleNG%(I, 15) - HR% * 100
        TM% = HR% * 60 + MIN%
        scheduleNG%(I, 12) = Int(TM% / 30 - 18)
        D& = (scheduleNG%(I, 18) - 1)
        D& = D& * 365
        M& = (scheduleNG%(I, 17) - 1)
        M& = M& * 31
        Y& = scheduleNG%(I, 16)
        schedDates&(I) = (D& + M& + Y&) * 24 * 60 + TM%
    Next

    For Z = 1 To scheduleAP%(0) - 1
        For Z1 = Z + 1 To scheduleAP%(0)
            Locate 1, 1: Print Z, Z1
            If scheduleNG%(Z, 12) > scheduleNG%(Z1, 12) Then
                For I = 0 To 18: Swap scheduleNG%(Z, I), scheduleNG%(Z1, I): Next
                For I = 0 To 1: Swap scheduleYN$(Z, I), scheduleYN$(Z1, I): Next
                Swap schedDates&(Z), schedDates&(Z1)
                Swap visitorScores(Z), visitorScores(Z1)
                Swap homeScores(Z), homeScores(Z1)
            End If
        Next Z1
    Next Z

    For Z = 1 To scheduleAP%(0) - 1
        For Z1 = Z + 1 To scheduleAP%(0)
            If schedDates&(Z) > schedDates&(Z1) Then
                For I = 0 To 18: Swap scheduleNG%(Z, I), scheduleNG%(Z1, I): Next
                For I = 0 To 1: Swap scheduleYN$(Z, I), scheduleYN$(Z1, I): Next
                Swap schedDates&(Z), schedDates&(Z1)
                Swap visitorScores(Z), visitorScores(Z1)
                Swap homeScores(Z), homeScores(Z1)
            End If
        Next Z1
    Next Z

End Sub


'----------------------------------------
'    ChangeGlobalSettings SubRoutine
'----------------------------------------
'This subroutine presents the end user a 
'variety of game options that can be changed
'or applied to all games in the schedule file.
'These would be game-specific options, as
'opposed to teams / dates / times.
Sub ChangeGlobalSettings ()

    Shared scheduleAP%(), scheduleNG%()

    Shared playMode$(), pitcherEra$()
    Shared yesNo$()

    Dim displayPause!

    DT$ = "04-04-93"
    TM$ = "07:30P"

    ' GLOBAL SETTINGS FOR A SCHEDULE
    Do
        Color 15, 0
        Cls
        Print Tab(30); "GLOBAL SETTINGS FOR SCHEDULE"

        '-- Missing option for mode of play
        Locate 3, 2: Color 14: Print "(1) ";: Color 15: Print "TYPE OF GAME: "; playMode$(U5%)
        Locate 4, 2: Color 14: Print "(2) ";: Color 15: Print "DESIGNATED HITTER: "; yesNo$(DH%)
        Locate 5, 2: Color 14: Print "(3) ";: Color 15: Print Using "DISPLAY PAUSE IN SECONDS: ##.#  "; displayPause! ' / 10
        Locate 6, 2: Color 14: Print "(4) ";: Color 15: Print "USE WEATHER EFFECTS: "; yesNo$(1 - WE%)
        Locate 7, 2: Color 14: Print "(5) ";: Color 15: Print "USE INJURIES "; yesNo$(1 - IJ%)
        Locate 8, 2: Color 14: Print "(6) ";: Color 15: Print "USE LEFT/RIGHT SPLIT STATS "; yesNo$(1 - LR%)
        Locate 9, 2: Color 14: Print "(7) ";: Color 15: Print "USE DAYS REST DATA FOR PITCHERS "; yesNo$(1 - DR%)
        Locate 10, 2: Color 14: Print "(8) ";: Color 15: Print "USE MANAGER PROFILE, IF AVAILABLE "; yesNo$(1 - MP%)
        Locate 11, 2: Color 14: Print "(9) ";: Color 15: Print "USE VGA SCREENS, IF ABLE: "; yesNo$(1 - VG%)
        Locate 12, 2: Color 14: Print "(A) ";: Color 15: Print "PITCHER ERA: "; pitcherEra$(PE%)
        Locate 13, 2: Color 14: Print "(0) ";: Color 15: Print "ACCEPT GLOBAL SETTINGS"

        Do
            I$ = GetKeyPress$
            I = Val(I$)
            If UCase$(I$) = "A" Then I = 10
        Loop Until I >= 0 And I <= 10

        Select Case I

            Case 1:
                U5% = U5% + 1
                If U5% > 3 Then U5% = 0

            Case 2:
                DH% = 1 - DH%

            Case 3:
                Input "DISPLAY VARIABLE "; displayPause!

            Case 4:
                WE% = 1 - WE%

            Case 5:
                IJ% = 1 - IJ%

            Case 6:
                LR% = 1 - LR%

            Case 7:
                DR% = 1 - DR%

            Case 8:
                MP% = 1 - MP%

            Case 9:
                VG% = 1 - VG%

            Case 10:
                PE% = PE% + 1
                If PE% > 8 Then PE% = 0

            Case 0: '

        End Select

    Loop Until I = 0

    For I = 1 To scheduleAP%(0)
        scheduleNG%(I, 3) = DH%
        scheduleNG%(I, 4) = displayPause! * 10
        scheduleNG%(I, 5) = WE%
        scheduleNG%(I, 6) = IJ%
        scheduleNG%(I, 7) = LR%
        scheduleNG%(I, 8) = U5%
        scheduleNG%(I, 9) = DR%
        scheduleNG%(I, 10) = MP%
        scheduleNG%(I, 11) = VG%
        scheduleNG%(I, 14) = PE%
    Next

End Sub


'----------------------------------------
'       DeleteBoxscores SubRoutine
'----------------------------------------
'This subroutine prompts for confirmation
'of and proceeds to delete the specified
'types of boxscores. This is called by
'BoxScore maintenance routine.
Sub DeleteBoxscores (fileChoice%, fileSpec$)

    Spec$ = diskPaths$(0) + fileSpec$
    Count% = FileCount%(Spec$)

    If Count% = 0 Then

        Select Case fileChoice%

            Case 3:
                MsgText$ = "NO BOXSCORES WERE FOUND PRESS ANY KEY TO RETURN TO MENU"

            Case 4:
                MsgText$ = "NO SPECIAL EVENTS BOXSCORES WERE FOUND PRESS ANY KEY TO RETURN TO MENU"

            Case 5:
                ' Exit Sub

        End Select

        BoxWidth = 24
        BoxHeight = (Len(MsgText$) / BoxWidth) + 3 'top and box lines + 1 extra
        Locate ((25 - BoxHeight) / 2), (80 - ((BoxWidth + 2) / 2))
        Call CSMsgBox(MsgText$, BoxWidth, Pass)
        I$ = GetKeyPress$
        Call CSMsgBox("", 0, Pass)

    Else

        ReDim boxFiles$(0 To Count%)

        For X = 1 To Count%
            boxFiles$(X) = Space$(12)
        Next

        boxFiles$(0) = fileSpec$
        Call ReadFile(boxFiles$())

        For X = 1 To Count%
            Kill (diskPaths$(1) + boxFiles$(X))
            Locate 12, 34: Print "DELETING "; boxFiles$(X)
        Next

        MsgText$ = "ALL BOXSCORE FILES HAVE BEEN DELETED. PRESS ANY KEY TO RETURN TO MAIN MENU"
        BoxWidth = 20
        BoxHeight = (Len(MsgText$) / BoxWidth) + 3 'top and box lines + 1 extra
        Locate ((25 - BoxHeight) / 2), (80 - ((BoxWidth + 2) / 2))
        Call CSMsgBox(MsgText$, BoxWidth, Pass)
        I$ = GetKeyPress$
        Call CSMsgBox("", 0, Pass)

    End If

End Sub


'----------------------------------------
'      LoadScheduleInfo SubRoutine
'----------------------------------------
'This subroutine opens the target SCHEDULE
'file and reads the data into corresponding
'arrays for use in the scheduler
Sub LoadScheduleInfo (targetFile$)

    Shared BS%, NS%

    Shared scheduleAP%(), scheduleNG%()
    Shared homeScores(), visitorScores()
    Shared scheduleYN$()

    Open diskPaths$(0) + targetFile$ + ".SCD" For Random As #1 Len = SCHEDULE_SIZE_BYTES
    fileLength& = LOF(1)

    scheduleAP%(0) = fileLength& / SCHEDULE_SIZE_BYTES
    BS% = Int((scheduleAP%(0) - 1) / 20)

    For X = 0 To 18
        Field #1, X * 2 As X$, 2 As Q$(X + 1), SCHEDULE_SIZE_BYTES - 2 - 2 * X As X$
    Next

    Field #1, 38 As X$, 2 As Q$(22), 2 As Q$(23), 3 As Q$(20), 3 As Q$(21)

    For I = 1 To scheduleAP%(0)
        Get #1, I

        For X = 0 To 18
            scheduleNG%(I, X) = CVI(Q$(X + 1))
        Next

        If scheduleNG%(I, 14) > 8 Then scheduleNG%(I, 14) = 0

        For X = 0 To 1
            scheduleYN$(I, X) = RTrim$(Q$(20 + X))
        Next

        visitorScores(I) = CVI(Q$(22))
        homeScores(I) = CVI(Q$(23))

        If scheduleNG%(I, 6) > 1 Then scheduleNG%(I, 6) = 1
        If scheduleNG%(I, 7) > 1 Then scheduleNG%(I, 7) = 1
        If scheduleNG%(I, 9) > 1 Then scheduleNG%(I, 9) = 1
        If scheduleNG%(I, 10) > 1 Then scheduleNG%(I, 10) = 1
        If scheduleNG%(I, 11) > 1 Then scheduleNG%(I, 11) = 1

    Next

    Close 1
    
    NS% = 0

End Sub


'----------------------------------------
'      CreateSeasonSchedule SubRoutine
'----------------------------------------
'This subroutine gives the user an inter-
'face by which they can create a standard
'season schedule for a Baseball league.
'It is currently NOT a working routine, and
'from my experience with the original game
'it may not have been a fully formed feature.
Sub CreateSeasonSchedule ()

    Shared BS%

    Shared scheduleAP%(), homeScores(), visitorScores()
    Shared scheduleNG%(), scheduleZ1%()
    Shared scheduleYN$(), Z1$(), Z2$()

    Call TITLE_SCHEDULER

    Color 15: Print "(0) ";
    Color 14: Print "8 TEAM, 154 GAME SCHEDULE"
    Print
    Color 15: Print "(1) ";
    Color 14: Print "10 TEAM, 162 GAME SCHEDULE"
    Print
    Color 15: Print "(2) ";
    Color 14: Print "12 TEAM, 2 DIVISION, 162 GAME SCHEDULE"
    Print
    Color 15: Print "(3) ";
    Color 14: Print "14 TEAM, 2 DIVISION, 162 GAME SCHEDULE"
    Print
    Color 15: Print "(4) ";
    Color 14: Print "RETURN TO FULL COUNT MAIN MENU"

    Do
        I$ = GetKeyPress$
        choice% = Val(I$)+1
        If I$ = Chr$(27) Then choice% = 5
    Loop Until choice% >= 1 And choice% <= 5

    If choice% <> 4 Then

        leagueFile$ = ChooseFile$ (diskPaths$(2) + "*.LIB", "LEAGUE", ExitCode%)

        If ExitCode% <> 27 And ExitCode% <> 0 Then

            Open diskPaths$(2) + leagueFile$ + ".LIB" For Input As #2

            Input #2, league$
            Input #2, D1$
            Input #2, D2$
            Input #2, D3$
            Input #2, D4$

            For X = 1 To 40
                Input #2, Z1$(X)
                Input #2, scheduleZ1%(X)
                Input #2, Z2$(X)
            Next

            Close 2

            Select Case choice%
                Case 0: scxFile$ = "154TEMP.SCX"
                Case 1: scxFile$ = "162TENTM.SCX"
                Case 2: scxFile$ = "16212TM.SCX"
                Case 3: scxFile$ = "16214TM.SCX"
            End Select

            Open scxFile$ For Random As #1 Len = SCHEDULE_SIZE_BYTES
            fileLength& = LOF(1)
            scheduleAP%(0) = fileLength& / SCHEDULE_SIZE_BYTES

            BS% = Int((scheduleAP%(0) - 1) / 20)

            For X = 0 To 18
                Field #1, X * 2 As X$, 2 As Q$(X + 1), SCHEDULE_SIZE_BYTES - 2 - 2 * X As X$
            Next

            Field #1, 38 As X$, 2 As Q$(22), 2 As Q$(23), 3 As Q$(20), 3 As Q$(21)

            For I = 1 To scheduleAP%(0)

                Get #1, I

                For X = 0 To 18: 
                    scheduleNG%(I, X) = CVI(Q$(X + 1))
                Next

                For X = 0 To 1: 
                    scheduleYN$(I, X) = RTrim$(Q$(20 + X))
                Next

                visitorScores(I) = CVI(Q$(22))
                homeScores(I) = CVI(Q$(23))

                If scheduleNG%(I, 14) > 8 Then scheduleNG%(I, 14) = 0
                If scheduleNG%(I, 6) > 1 Then scheduleNG%(I, 6) = 1
                If scheduleNG%(I, 7) > 1 Then scheduleNG%(I, 7) = 1
                If scheduleNG%(I, 9) > 1 Then scheduleNG%(I, 9) = 1
                If scheduleNG%(I, 10) > 1 Then scheduleNG%(I, 10) = 1
                If scheduleNG%(I, 11) > 1 Then scheduleNG%(I, 11) = 1

            Next

            Close 1

            Call ChangeGlobalSettings

            Do
                Color 15, 0
                Cls

                JJ = 7

                Locate 6, 8: Color 15, 1

                'Print box top
                Print " " + Chr$(214); String$(61, 196); Chr$(183) + " ";

                'Print box sides
                For II = 1 To JJ
                    Locate 6 + II, 8
                    Print " " + Chr$(186); String$(61, 32); Chr$(186) + " ";
                Next

                'Print box bottom
                Locate 7 + JJ, 8
                Print " " + Chr$(211); String$(61, 196); Chr$(189) + " ";

                Locate 7, 32
                Locate , 12: Print "ENTER NAME FOR SCHEDULE: ": Print
                Locate , 12: Print "THE NAME SHOULD HAVE NO PERIODS OR SPECIAL CHARACTERS"
                Locate , 12: Print "DO NOT ADD A FILE EXTENSION; THE PROGRAM"
                Locate , 12: Print "WILL AUTOMATICALLY ADD .SCD"
                Locate , 12: Print "SAMPLE NAMES ARE MONTREAL, STL68, NY76, CIN90, ETC"
                Locate 7, 37: Input scxFile$

                If scxFile$ <> "" Then

                    Do
                        Locate 13, 12
                        Print "ANY CHANGE? (Y/N) "
                        I$ = GetKeyPress$
                    Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

                End If

            Loop Until UCase$(I$) = "N" And scxFile$ <> ""

            Color 15, 0

            For I = 1 To 20
                Print scheduleZ1%(I), Z2$(I)
            Next

            For I = 1 To scheduleAP%(0)

                Print "GAME"; I
                Print scheduleNG%(I, 0), scheduleYN$(I, 0)
                Print scheduleNG%(I, 1), scheduleYN$(I, 1)

                Select Case choice%

                    Case 0 To 1:
                        X = scheduleNG%(I, 0)
                        scheduleNG%(I, 0) = scheduleZ1%(X)
                        scheduleYN$(I, 0) = Z2$(X)
                        X = scheduleNG%(I, 1)
                        scheduleNG%(I, 1) = scheduleZ1%(X)
                        scheduleYN$(I, 1) = Z2$(X)

                    Case 2:
                        If scheduleNG%(I, 0) <= 6 Then
                            X = scheduleNG%(I, 0)
                            Print X
                            scheduleNG%(I, 0) = scheduleZ1%(X)
                            scheduleYN$(I, 0) = Z2$(X)
                        Else
                            X = scheduleNG%(I, 0)
                            Print X
                            scheduleNG%(I, 0) = scheduleZ1%(X + 4)
                            scheduleYN$(I, 0) = Z2$(X + 4)
                        End If

                        If scheduleNG%(I, 1) <= 6 Then
                            X = scheduleNG%(I, 1)
                            Print X
                            scheduleNG%(I, 1) = scheduleZ1%(X)
                            scheduleYN$(I, 1) = Z2$(X)
                        Else
                            X = scheduleNG%(I, 1)
                            Print X
                            scheduleNG%(I, 1) = scheduleZ1%(X + 4)
                            scheduleYN$(I, 1) = Z2$(X + 4)
                        End If

                    Case 3:
                        If scheduleNG%(I, 0) <= 7 Then
                            X = scheduleNG%(I, 0)
                            scheduleNG%(I, 0) = scheduleZ1%(X)
                            scheduleYN$(I, 0) = Z2$(X)
                        Else
                            X = scheduleNG%(I, 0)
                            scheduleNG%(I, 0) = scheduleZ1%(X + 3)
                            scheduleYN$(I, 0) = Z2$(X + 3)
                        End If

                        If scheduleNG%(I, 1) <= 7 Then
                            X = scheduleNG%(I, 1)
                            scheduleNG%(I, 1) = scheduleZ1%(X)
                            scheduleYN$(I, 1) = Z2$(X)
                        Else
                            X = scheduleNG%(I, 1)
                            scheduleNG%(I, 1) = scheduleZ1%(X + 3)
                            scheduleYN$(I, 1) = Z2$(X + 3)
                        End If

                End Select

                Print "GAME"; I
                Print scheduleNG%(I, 0), scheduleYN$(I, 0)
                Print scheduleNG%(I, 1), scheduleYN$(I, 1)

            Next 'done looping through games

            Call SaveScheduleFile(scxFile$)

        End If 'Done checking for ESC

    End If 'Done checking for count = 0

End Sub


'----------------------------------------
'       EditBoxscore SubRoutine
'----------------------------------------
'This subroutine is designed to facilitate
'the user's ability to edit, in-realtime,
'a boxscore that has been previously created
'by the game. It is essentially a DOS-based
'text editing routine, which was written in
'x86 asm. Therefore, the corresponding code
'is no longer available or useful. It is
'recommended that users simply edit their
'boxscores in their favorite text editor.
Sub EditBoxscore (boxName$)

    F2$ = Chr$(0) + Chr$(60) 'extended code for the F2 function key
    F3$ = Chr$(0) + Chr$(61) 'extended code for the F3 function key

    If Not _FileExists(boxName$) Then
    
        MsgText$ = "BOXSCORE DOES NOT EXIST PRESS ANY KEY TO RETURN TO MAIN MENU"
        BoxWidth = 24
        BoxHeight = (Len(MsgText$) / BoxWidth) + 3 'top and box lines + 1 extra
        Locate ((25 - BoxHeight) / 2), (80 - ((BoxWidth + 2) / 2))
        Call CSMsgBox(MsgText$, BoxWidth, Pass)
        I$ = GetKeyPress$
        Call CSMsgBox("", 0, Pass)

    Else

        Open boxName$ For Input As #1
        CURLINE = 1
        While Not EOF(1)
            Line Input #1, array$(CURLINE)
            CURLINE = CURLINE + 1
        Wend
        Close #1

        Cls '  show how QEdit saves the screen

        Color 15, 0 'print instructions on bottom of screen
        Locate 25, 1
        Print " ESC - Quit    F1 - Help    F2 - Print Boxscore   F3 - Save Boxscore"; Tab(79);

        '----- fill in editing parameters
        Select Case Monitor% 'determine the monitor type
            Case 3, 5, 7, 9, 10, 12 'CGA, EGA, VGA monitors
                Ed.AColor = 23 'white on blue
            Case Else 'all other monitors
                Ed.AColor = 7 'white on black
        End Select
        Ed.Wrap = 0 'word wrap at column 65 (use 0 for to disable word wrap)
        Ed.Frame = 0 'frame code (1 = show ruler line & scroll bars, 0 = don't)
        Ed.Rows = 24 'number of text lines to display on the screen (3 - 25)
        Ed.Wide = 80 'width of the active screen (10 - 80)
        Ed.HTab = 4 'set tab stops to 4 spaces
        Locate 1, 1 'locate the upper left corner of the edit window frame
        Action = 1 'Action 1 to save underlying screen and
        '  display text, operate in polled mode

        '----- main loop for editing
        Do
            '----- call QEdit in polled mode
            'CALL QEdit(array$(), Ky$, Action, Ed)
            '----- F2 function key pressed? - change margin
            If Ky$ = F2$ Then: For I = 1 To CURLINE - 1: LPrint array$(I): Next
            If Ky$ = F3$ Then
                Open BN$ For Output As #1
                For I = 1 To CURLINE - 1
                    Print #1, array$(I)
                Next
                Close 1

                MsgText$ = "REVISED BOXSCORE HAS BEEN SAVED... PRESS ANY KEY TO CONTINUE"
                BoxWidth = 18
                BoxHeight = (Len(MsgText$) / BoxWidth) + 3 'top and box lines + 1 extra
                Locate ((25 - BoxHeight) / 2), (80 - ((BoxWidth + 2) / 2))
                Call CSMsgBox(MsgText$, BoxWidth, Pass)
                I$ = GetKeyPress$
                Call CSMsgBox("", 0, Pass)

            End If

        Loop Until Ky$ = Chr$(27) 'keep calling QEdit until Esc is pressed

        '----- call QEdit again with an Action flag of 5 to restore the screen
        'CALL QEdit(array$(), Ky$, 5, Ed)

    End If

End Sub
