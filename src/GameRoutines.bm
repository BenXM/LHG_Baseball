'------------------------------
'   INFO Subroutine
'------------------------------
' ...explanation...
Sub INFO ()

    Cls

    Color , 1
    Locate 1, 1
    Print Tab(80);

    Locate , 33: Color 14
    Print "GAME OPTIONS MENU"

    Locate 24, 1
    Print Tab(80);
    Locate , 1
    Print "(C) LANCE HAFFNER 1986-2000"; Tab(70); Left$(Time$, 5);
    Locate 3, 1: Color , 0

End Sub


'----------------------------------------
'           InitVar Subroutine
'----------------------------------------
' Initializes variables for the game
' Does not process any that will be read
' in from file or assigned elsewhere
Sub InitVar ()

    Shared scheduleFile$

    Shared DB, HR, TR, SB
    Shared E!

    Shared BP(), F()
    Shared BB%(), MF%(), SP%(), T1%()
    Shared U%()

    Shared dayNight$(), DH$(), DL$()
    Shared LGT$(), month$(), pitcherEra$()
    Shared MO$(), PT$(), UMP$()
    Shared VI$(), WE$()

    normalFinish% = 0

    'Graphics co-ordinates originally were for a
    'routine that operated as if the screen were
    'still just 80 column width; so 80x8 = 640
    FontColAdj% = 8

    MON = 12 'Monitor%

    VI$(0) = "VISITING TEAM"
    VI$(1) = "HOME TEAM"

    'temp$(1) = "HOT"
    'temp$(2) = "WARM"
    'temp$(3) = "COOL"
    'temp$(4) = "COLD"

    PT$(0) = "RIGHT"
    PT$(1) = "LEFT "

    WD$(2) = "LEFT TO RIGHT AT"
    WD$(3) = "RIGHT TO LEFT AT"
    WD$(4) = "BLOWING IN FROM LEFT AT"
    WD$(5) = "BLOWING IN FROM CENTER AT"
    WD$(6) = "BLOWING IN FROM RIGHT AT"
    WD$(7) = "BLOWING OUT TO LEFT AT"
    WD$(8) = "BLOWING OUT TO CENTER AT"
    WD$(9) = "BLOWING OUT TO RIGHT AT"

    SC$(1) = "CLEAR"
    SC$(2) = "PARTLY CLOUDY"
    SC$(3) = "OVERCAST"
    SC$(4) = "DOME"

    PC$(1) = "THUNDERSTORMS"
    PC$(2) = "SHOWERS"
    PC$(3) = "DRIZZLE"
    PC$(4) = "NONE"

    LGT$(0) = "AL GAME         "
    LGT$(1) = "NL GAME         "
    LGT$(2) = "INTERLEAGUE GAME"

    DH$(0) = "NO DH "
    DH$(1) = "USE DH"

    UMP$(0) = "AL"
    UMP$(1) = "NL"
    UMP$(2) = "NL"

    WE$(0) = "YES"
    WE$(1) = "NO "

    DL$(0) = "LEAGUE GAME    "
    DL$(1) = "EXHIBITION GAME"

    month$(4) = "APRIL"
    month$(5) = "MAY"
    month$(6) = "JUNE"
    month$(7) = "JULY"
    month$(8) = "AUGUST"
    month$(9) = "SEPTEMBER"
    month$(10) = "OCTOBER"
    MO% = 4

    dayNight$(0) = "AFTERNOON"
    dayNight$(1) = "NIGHT"

    B1$(0) = "LP"
    B1$(1) = "L"
    B1$(2) = "S"
    B1$(3) = "R"
    B1$(4) = "RP"

    H$(1) = "1b"
    H$(2) = "2b"
    H$(3) = "3b"
    H$(4) = "home"

    H0$(0) = " "
    H0$(1) = "H"

    P = 1

    'For I = 0 To 1: For I1 = 0 To 4: NB%(I, I1) = -1: Next: Next
    For I = 0 To 1: P1%(I) = -1: P6%(I) = -1: Next

    SP%(0) = -1
    SP%(1) = -1

    For I = 0 To 1
        For J = 1 To 9
            M%(J) = 0
            B7%(I, J) = -1
            B3%(I, J) = -1
        Next
    Next

    AP% = 0
    CGERA% = 0
    DH% = 0
    DR% = 0
    EJ% = 0
    H6% = 0
    IJ% = 0
    IJL% = 0
    Inotloop% = 0
    INNING% = 1
    LYN% = 0
    NLF% = 0
    PB% = 0
    PC% = 0
    SC% = 0
    TA% = 0
    TP% = 0
    W% = 0
    WS% = 0

    D = 0
    DB = 0
    endGame = 1
    endAllGames = 1
    HR = 0
    P = 0
    RD = 0
    RE = 0
    SB = 0
    statSpecial = 0
    TR = 0
    U6 = 0
    U9 = 0
    usingGfx = 0

    E! = 0
    pbpDelay! = 0
    WF! = 0

    actualAttendance& = 0
    avgAttendance& = 0

    F$ = ""
    gameTime$ = ""
    L$ = ""
    PARK$ = ""
    scheduleFile$ = ""
    S$ = ""
    W$ = ""
    WI$ = ""
    Y$ = ""
    YY$ = ""

    Erase BP, F
    Erase MON, VV, VV1

    'Erase AP%
    Erase A5%, B%, B0%
    Erase B1%, B2%, B3%, B4%

    Erase B5%, B7%, B8%, B9%, BT%
    Erase BB%, MF%, SP%, T1%
    Erase CSS%, D0%, D3%, DP%, GK%, H0%
    Erase INJ%
    Erase L%, L0%, M%, MG%, NG%, O%
    Erase P%, P1%, P2%, P3%, P4%, P5%, P6%, P8%
    Erase PR%
    Erase inningScore%, S1%, S6%, S8%
    Erase SA%, SU%
    Erase T%, T3%, TS%, VA%, X0%

    Erase B1!, K9!

    Erase A$, B$
    Erase DB$, E$, EJ$
    Erase G$, HR$
    Erase IJ$, M$, N$, NN$
    Erase P$, PARK$, player$
    Erase Q3$, S$, SB$, TR$
    Erase U$, YN$

    For P9 = 0 To 1
        For I3 = 0 To 21
            If P%(P9, I3, 15) <> 99 Then P%(P9, I3, 15) = 0
        Next
    Next

    For I = 0 To 1
        For I1 = 0 To 23
            X0%(I, 0, I1) = -1
            X0%(I, 2, I1) = 100
        Next I1
    Next I

    For I = 0 To 1
        For I1 = 0 To 22
            If B%(I, I1, 21) <> 99 Then B%(I, I1, 21) = 0
        Next
    Next

End Sub


'------------------------------
'      TEAMBOX Subroutine
'------------------------------
' Draws a box using team colors
' Box starts at row 6 and is
'   approx. 60 char's wide
' Leaves cursor at first printable
' row / column.
Sub TEAMBOX (boxHeight, teamIdx)

    Locate 6, 8
    Color L%(teamIdx, 11), L%(teamIdx, 12)

    'Print box top
    Print " " + Chr$(214); String$(61, 196); Chr$(183) + " ";

    'Print box sides
    For II = 1 To boxHeight
        Locate 6 + II, 8
        Print " " + Chr$(186); String$(61, 32); Chr$(186) + " ";
    Next

    'Print box bottom
    Locate 7 + boxHeight, 8
    Print " " + Chr$(211); String$(61, 196); Chr$(189) + " ";

    Locate 7, 11

End Sub


'------------------------------
'    FRAMEOPTION Subroutine
'------------------------------
' Draws a box using team colors
' Box starts at row 8 and is
'   approx. 60 char's wide
' Leaves cursor at first printable
' row / column.
Sub FRAMEOPTION (boxHeight, teamIdx)

    Locate 8, 8
    Color L%(teamIdx, 11), L%(teamIdx, 12)

    'Print box top
    Print " " + Chr$(214); String$(61, 196); Chr$(183) + " ";

    'Print box sides
    For II = 1 To boxHeight
        Locate 8 + II, 8
        Print " " + Chr$(186); String$(61, 32); Chr$(186) + " ";
    Next

    'Print box bottom
    Locate 9 + boxHeight, 8
    Print " " + Chr$(211); String$(61, 196); Chr$(189) + " ";

    Locate 9, 12

End Sub


'------------------------------
'   PitchingStarter routine
'------------------------------
' ...explanation...
Sub PitchingStarter (idx%)

    Shared SP%()

    Do

        Locate 19, 58: Print "SELECT STARTER"

        If SP%(idx%) <> -1 Then
            I1 = SP%(idx%)
        Else

            Do
                I$ = GetKeyPress$
                Call LetterToNumber(I$)
                I1 = Val(I$)
            Loop Until I1 <= 21 And P%(idx%, I1, 15) <= 0

        End If

        Locate 20, 58
        Print P$(idx%, I1); " "; B1$(P%(idx%, I1, 0) + 2)

        Print

        If Not (AP% = 1 And (U6 = 2 Or U6 = 1 And U9 = idx%)) Then

            Do
                Locate 21, 58: Print "ANY CHANGE (YN)"
                I$ = GetKeyPress$
            Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

            If UCase$(I$) = "Y" Then
                Locate 20, 58: SP%(idx%) = -1: Print Space$(16)
            End If

        Else

            I$ = "N"

        End If

    Loop Until UCase$(I$) = "N"

    P1%(idx%) = I1
    P6%(idx%) = 1
    P%(idx%, I1, 15) = P6%(idx%)

    S8%(idx%, 0) = Int(((P%(idx%, P1%(idx%), 8) + P%(idx%, P1%(idx%), 7)) / P%(idx%, P1%(idx%), 4)) + .5)
    S8%(idx%, 1) = 3

    If P6%(idx%) > 1 Then S8%(idx%, 1) = 0

End Sub

'------------------------------
'      ADDPIT Subroutine
'------------------------------
' ...explanation...
Sub ADDPIT (D, I5, I6)

    P8%(D, I5, I6) = P8%(D, I5, I6) + 1

    P5%(D, I5, I6) = P5%(D, I5, I6) + 1

End Sub

'------------------------------
'      ADDSTTS Subroutine
'------------------------------
' ...explanation...
Sub ADDSTTS (P, D)

    If B7%(P, B1!(P)) = 1 Then
        I5 = P1%(P)
        I6 = 23
        Call INCPITOFF(P, I5, I6)
    Else
        I5 = B3%(P, B1!(P))
        I6 = 0
        Call INCBATOFF(P, I5, I6)
    End If

    I5 = P1%(D)
    I6 = 0
    Call ADDPIT(D, I5, I6)

End Sub

'------------------------------
'    ADJRUNNERS Subroutine
'------------------------------
' ...explanation...
Sub ADJRUNNERS (S2%, P)

    For idx = 1 To 3
        If S2% = 13 And A5%(idx) = 11 And B1%(idx, 0) = 0 Then A5%(0) = 11
    Next idx

    If Not (B1%(3, 0) = 0 Or A5%(3) = 0) Then
        idx = 3
        If A5%(3) = 10 Then I3 = 3: Call CLEARBASE(idx)
        If A5%(3) >= 1 And A5%(3) <= 4 Then Call CHARGERUN(D, idx)
        If A5%(3) = 11 Then I3 = 4: Call CLEARBASE(idx)
    End If

    If Not (B1%(2, 0) = 0 Or A5%(2) = 0) Then
        idx = 2
        If A5%(2) = 10 Then I3 = 2: Call CLEARBASE(idx)
        If A5%(2) = 11 Then I3 = 3: Call CLEARBASE(idx)
        If A5%(2) = 12 And B1%(3, 0) = 0 Then I3 = 4: Call CLEARBASE(idx)
        If A5%(2) = 1 And B1%(3, 0) = 0 Then Call BATTER1(idx)
        If A5%(2) >= 2 And A5%(2) <= 4 And B1%(3, 0) = 0 Then Call CHARGERUN(D, idx)
    End If

    If Not (B1%(1, 0) = 0 Or A5%(1) = 0) Then
        idx = 1
        If A5%(1) = 8 And B1%(2, 0) = 0 Then Call BATTER1(idx)
        If A5%(1) = 10 Then I3 = 1: Call CLEARBASE(idx)
        If A5%(1) = 11 Then I3 = 2: Call CLEARBASE(idx)
        If A5%(1) = 12 And B1%(3, 0) = 0 And B1%(2, 0) = 0 Then I3 = 3: Call CLEARBASE(idx)
        If A5%(1) = 13 And B1%(3, 0) = 0 And B1%(2, 0) = 0 Then I3 = 4: Call CLEARBASE(idx)
        If A5%(1) = 1 And B1%(2, 0) = 0 Then Call BATTER1(idx)
        If A5%(1) = 2 And B1%(2, 0) = 0 And B1%(3, 0) = 0 Then Call BATTER2(idx)
        If A5%(1) >= 3 And A5%(1) <= 4 And B1%(2, 0) = 0 And B1%(3, 0) = 0 Then Call CHARGERUN(D, idx)
    End If

    idx = 0
    B1%(0, 0) = B1!(P)
    B1%(0, 1) = P1%(D)

    If A5%(0) <> 0 Then
        If A5%(0) > 0 And A5%(0) < 4 Then I3 = A5%(0): Call BATTER3(I3, P, D)
        If A5%(0) = 4 Then I3 = A5%(0): Call CHARGERUN(D, idx)
        If A5%(0) = 11 Then I3 = 1: Call CLEARBASE(idx)
        If A5%(0) = 12 Then I3 = 2: Call CLEARBASE(idx)
        If A5%(0) = 13 Then I3 = 3: Call CLEARBASE(idx)
        If A5%(0) = 14 Then I3 = 4: Call CLEARBASE(idx)
    End If

End Sub


'------------------------------
'   ADV1BASE Subroutine
'------------------------------
' ...explanation...
Sub ADV1BASE (i)

    For I4 = 0 To 2
        B0%(i + 1, I4) = B0%(i, I4)
        B0%(i + 1, 2) = 0
        B0%(i, I4) = 0
    Next I4

    player$(i + 1) = player$(i)
    player$(i) = ""

End Sub

'------------------------------
'   ADV2BASES Subroutine
'------------------------------
' ...explanation...
Sub ADV2BASES (i)
    For I4 = 0 To 2
        B0%(i + 2, I4) = B0%(i, I4)
        B0%(i + 1, 2) = 0
        B0%(i, I4) = 0
    Next I4

    player$(i + 2) = player$(i)
    player$(i) = ""

End Sub

'------------------------------
'   ADV3BASES Subroutine
'------------------------------
' ...explanation...
Sub ADV3BASES (I3, P, D)

    B0%(I3, 0) = B1!(P)
    B0%(I3, 1) = P1%(D)

    player$(I3) = player$(0)

    B0%(I3, 2) = 0
    B0%(0, 0) = 0

End Sub

'------------------------------
'   ADVANCEMENT Subroutine
'------------------------------
' ...explanation...
Sub ADVANCEMENT (P, D, S2%, F%, I3)

    If B0%(3, 0) <> 0 And A5%(3) <> 0 Then
        i = 3
        If A5%(3) >= 1 And A5%(3) <= 4 Then Call RecordRun(sah%, i, D, F%, PQ, S2%, W%, INFPOS%)

        'nothing happens for values 5-9? or are they not possible?

        If A5%(3) = 10 Then I3 = 3: Call RecordOut(i, I3)
        If A5%(3) = 11 Then I3 = 4: Call RecordOut(i, I3)
    End If

    If B0%(2, 0) <> 0 And A5%(2) <> 0 Then
        i = 2
        If A5%(2) = 1 And B0%(3, 0) = 0 Then Call ADV1BASE(i)
        If A5%(2) >= 2 And A5%(2) <= 4 And B0%(3, 0) = 0 Then Call RecordRun(sah%, i, D, F%, PQ, S2%, W%, INFPOS%)

        'nothing happens for values 5-9? or are they not possible?

        If A5%(2) = 10 Then I3 = 2: Call RecordOut(i, I3)
        If A5%(2) = 11 Then I3 = 3: Call RecordOut(i, I3)
        If A5%(2) = 12 And B0%(3, 0) = 0 Then I3 = 4: Call RecordOut(i, I3)
    End If

    If B0%(1, 0) <> 0 And A5%(1) <> 0 Then
        i = 1
        If A5%(1) = 1 And B0%(2, 0) = 0 Then Call ADV1BASE(i)
        If A5%(1) = 2 And B0%(2, 0) = 0 And B0%(3, 0) = 0 Then Call ADV2BASES(i)
        If A5%(1) >= 3 And A5%(1) <= 4 And B0%(2, 0) = 0 And B0%(3, 0) = 0 Then Call RecordRun(sah%, i, D, F%, PQ, S2%, W%, INFPOS%)

        'nothing happens for values 5, 6, 7, 9? or are they not possible?

        If A5%(1) = 8 And B0%(2, 0) = 0 Then Call ADV1BASE(i)
        If A5%(1) = 10 Then I3 = 1: Call RecordOut(i, I3)
        If A5%(1) = 11 Then I3 = 2: Call RecordOut(i, I3)
        If A5%(1) = 12 And B0%(3, 0) = 0 And B0%(2, 0) = 0 Then I3 = 3: Call RecordOut(i, I3)
        If A5%(1) = 13 And B0%(2, 0) = 0 And B0%(3, 0) = 0 Then I3 = 4: Call RecordOut(i, I3)
    End If

    i = 0
    B0%(0, 0) = B1!(P)
    B0%(0, 1) = P1%(D)

    If A5%(0) <> 0 Then
        'values 1 to 3
        If A5%(0) > 0 And A5%(0) < 4 Then I3 = A5%(0): Call ADV3BASES(I3, P, D)
        If A5%(0) = 4 Then I3 = A5%(0): Call RecordRun(sah%, i, D, F%, PQ, S2%, W%, INFPOS%)

        'nothing happens for values 5-10 ? or are they not possible?

        If A5%(0) = 11 Then I3 = 1: Call RecordOut(i, I3)
        If A5%(0) = 12 Then I3 = 2: Call RecordOut(i, I3)
        If A5%(0) = 13 Then I3 = 3: Call RecordOut(i, I3)
        If A5%(0) = 14 Then I3 = 4: Call RecordOut(i, I3)
    End If

    If F% = 0 And O%(1) < 3 Then Call ADJRUNNERS(S2%, P)

    For idx = 0 To 3:
        A5%(idx) = 0
    Next idx

End Sub

'------------------------------
'   DisplayBatter_Lineup Subroutine
'------------------------------
' ...explanation...
Sub DisplayBatter_Lineup (PG, P9)

    Locate 1, 1

    Color 14: Print "#";
    Color L%(P9, 11), L%(P9, 12): Print A$(P9);

    Color 14, 0

    Locate , 16: Print "B   POS    G  AB 2B 3B HR RBI  BB  SO SRAB  SB CS G%  BA"

    For lIdx = 2 To 13: Locate lIdx, 1: Print String$(78, 32): Next

    Locate 2, 1

    If PG = 0 Then AA = 0: BB = 12
    If PG = 1 Then AA = 13: BB = 22

    For idx = AA To BB:
        Locate , 1

        If B%(P9, idx, 21) = 0 Then

            Color 2, 0

            If idx < 10 Then Print Using "#"; idx;
            If idx > 9 Then Print X$(idx - 10);

            Color 15, 0

            Print Tab(3); B$(P9, idx); Tab(17); B1$(B%(P9, idx, 0) + 2);

            For xx = 20 To 23
                Print Tab(xx);: If B%(P9, idx, xx + 2) <> -1 Then Print Using "#"; B%(P9, idx, xx + 2);
            Next

            Print Tab(24);
            Print Using " ### ### ## ## ## ### ### ### #"; B%(P9, idx, 3); B%(P9, idx, 4); B%(P9, idx, 7); B%(P9, idx, 8); B%(P9, idx, 9); B%(P9, idx, 10); B%(P9, idx, 11); B%(P9, idx, 12); B%(P9, idx, 16);
            Print Using "#"; B%(P9, idx, 17);
            Print Using "#"; B%(P9, idx, 15);
            Print Using "# "; B%(P9, idx, 30);
            Print Using "### ## ## "; B%(P9, idx, 13); B%(P9, idx, 14); B%(P9, idx, 18);
            Print Tab(69); ".";

            'BA
            If B%(P9, idx, 4) <> 0 Then
                bAvg! = B%(P9, idx, 6) / B%(P9, idx, 4)
                Print Using "###"; Int(((bAvg!) + .0005) * 1000);
            Else
                Print
            End If

        End If

    Next idx

End Sub

'------------------------------
'   BATOFF Subroutine
'------------------------------
' ...explanation...
Sub BATOFF (P, I5, I6)

    B8%(P, I5, I6) = B8%(P, I5, I6) - 1
    B5%(P, I5, I6) = B5%(P, I5, I6) - 1

    If Not (I6 > 8 Or I6 = 2 Or I6 = 3) Then

        If P%(1 - P, P1%(1 - P), 0) <> 1 Then

            If I6 >= 4 Then
                CSS%(P, I5, I6 - 2) = CSS%(P, I5, I6 - 2) - 1
            Else
                CSS%(P, I5, I6) = CSS%(P, I5, I6) - 1
            End If

        End If

    End If

End Sub

'------------------------------
'   BATTER1 Subroutine
'------------------------------
' ...explanation...
Sub BATTER1 (i)

    For I4 = 0 To 1
        B1%(i + 1, I4) = B1%(i, I4)
        B1%(i, I4) = 0
    Next I4

End Sub

'------------------------------
'   BATTER2 Subroutine
'------------------------------
' ...explanation...
Sub BATTER2 (i)

    For I4 = 0 To 1
        B1%(i + 2, I4) = B1%(i, I4)
        B1%(i, I4) = 0
    Next I4

End Sub

'------------------------------
'   BATTER3 Subroutine
'------------------------------
' ...explanation...
Sub BATTER3 (I3, P, D)

    B1%(I3, 0) = B1!(P)
    B1%(I3, 1) = P1%(D)

End Sub

'------------------------------
'   CAUGHTFLY Subroutine
'------------------------------
' ...explanation...
Sub CAUGHTFLY (i, S2%, D)

    Call d100(RN)

    Select Case RN

        Case 1 To 96
            i = 1

            If S2% <> 17 Then
                Call GETRPBP(60, 1230, Y$, D)
                Call STRIPRPBP(60, 1230, Y$, D)
                Call PBP(player$(4) + " " + Y$)
            Else
                If L%(1, 13) = 37 Then Call PBP("he climbs the terrace")
                Call GETRPBP(20, 1290, Y$, D)
                Call STRIPRPBP(20, 1290, Y$, D)
                Call PBP(Y$)
            End If

        Case 97
            i = 2
            Call PBP(player$(4) + " makes a sliding catch")
            Call PBP("What a play!!!")

        Case 98
            i = 3
            Call PBP(player$(4) + " makes a leaping grab")
            Call PBP("What a catch!!!")

        Case 99
            i = 4
            Call PBP(player$(4) + " makes a diving catch!!!")

        Case 100
            i = 6
            Call PBP(player$(4) + " makes an incredible catch!!")

    End Select

End Sub

'------------------------------
'   CHANGELINEUP Subroutine
'------------------------------
' ...explanation...
Sub CHANGELINEUP (P9, P)

    Locate 14, 1
    Color 2: Print " # LINEUP       PS  FA  OB"
    Color 15

    For lIdx = 1 To 9:

        Locate , 1
        If B1!(P9) = lIdx Then Print "*";

        Locate , 2: Print Using "#"; lIdx;
        Locate , 4

        If B7%(P9, lIdx) = 1 Then Print P$(P9, P1%(P9));
        If B7%(P9, lIdx) <> 1 Then Print B$(P9, B3%(P9, lIdx));
        If B7%(P9, lIdx) <> 0 And B7%(P9, lIdx) < 10 Then Locate , 20: Print B%(P9, B3%(P9, lIdx), 19);

        Locate , 17: Print C$(B7%(P9, lIdx));
        Locate , 25

        For I1 = 1 To 3
            If B0%(I1, 0) = lIdx And P9 = P Then Color 3: Print I1;: Color 15
        Next I1

        Print " "

    Next lIdx

End Sub

'------------------------------
'   CHARGERUN Subroutine
'------------------------------
' ...explanation...
Sub CHARGERUN (D, i)

    If O%(1) >= 3 Then
        Call CLEARBASE(i)
    Else
        I5 = B1%(i, 1)
        I6 = 3
        Call ADDPIT(D, I5, I6)
        Call CLEARBASE(i)
    End If

End Sub

'------------------------------
'   CHECKSAVE Subroutine
'------------------------------
' ...explanation...
Sub CHECKSAVE (D, P, S4%)

    I3 = S6%(D, 0) - S6%(P, 0)
    S1%(D) = -1

    If I3 >= 1 Then
        If S4% = 0 And I3 <= 2 Then S1%(D) = P1%(D)
        If S4% > 0 And S4% < 4 And I3 <= 3 Then S1%(D) = P1%(D)
        If S4% > 3 And S4% < 7 And I3 <= 4 Then S1%(D) = P1%(D)
        If S4% = 7 And I3 <= 5 Then S1%(D) = P1%(D)
        If S4% = 0 And O%(0) = 0 And I3 <= 3 Then S1%(D) = P1%(D)
        If INNING% > 5 And I3 > 0 And INNING% < 8 Then S1%(D) = P1%(D)
    End If

    RI = 0

    If S4% <> 0 Then
        If S4% = 1 Or S4% = 2 Or S4% = 3 Then RI = 1
        If S4% = 4 Or S4% = 5 Or S4% = 6 Then RI = 2
        If S4% = 7 Then RI = 3
        P5%(D, P1%(D), 17) = P5%(D, P1%(D), 17) + RI
        P8%(D, P1%(D), 17) = P8%(D, P1%(D), 17) + RI
    End If

End Sub

'------------------------------
'   CLEARBASE Subroutine
'------------------------------
' ...explanation...
Sub CLEARBASE (i)

    B1%(i, 0) = 0
    B1%(i, 1) = 0

End Sub

'------------------------------
'   CREDITASSIST Subroutine
'------------------------------
' ...explanation...
Sub CREDITASSIST (W%, D)

    If W% = 1 Then
        I5 = P1%(D)
        I6 = 39
        Call ADDPIT(D, I5, I6)
    Else
        I5 = B9%(D, W%)
        I6 = 17
        Call INCBATDF(D, I5, I6)
    End If

End Sub

'------------------------------
'   CREDITPUTOUT Subroutine
'------------------------------
' ...explanation...
Sub CREDITPUTOUT (I3, FB2P%, AST%, D)

    ' *** CREDIT INFIELD PUTOUTS ***

    If I3 > 4 Then I3 = 1

    po% = I3 + 2: ' 1=1st 2=2nd 3=3rd 4=home

    If po% = 6 Then

        po% = 2
		AST% = 0
		I5 = B9%(D, po%)
		I6 = 16
		Call INCBATDF(D, I5, I6)

    Else

        If po% = 3 And FB2P% = 1 Then

            FB2P% = 0
            po% = 1
            If po% = 1 Then 
				I5 = P1%(D)
				I6 = 38
				Call ADDPIT(D, I5, I6)
			End If

        Else

            If po% = 4 Then 
				If AST% = 4 Then
					po% = 6
				Else
					If AST% = 6 Then
						po% = 4
					End If
				End If
            End If

        End If

		AST% = 0
		I5 = B9%(D, po%)
		I6 = 16
		Call INCBATDF(D, I5, I6)

    End If

End Sub

'------------------------------
'   CREDITREGPO Subroutine
'------------------------------
' ...explanation...
Sub CREDITREGPO (W%, D)

    ' *** CREDIT REGULAR PUTOUT  ***

    If W% = 1 Then
        I5 = P1%(D)
        I6 = 38
        Call ADDPIT(D, I5, I6)
    Else
        I5 = B9%(D, W%)
        I6 = 16
        Call INCBATDF(D, I5, I6)
    End If

End Sub

'------------------------------
'   DELAY Subroutine
'------------------------------
' ...explanation...
Sub DELAY ()

    _Delay pbpDelay!

End Sub

'------------------------------
'   DELIVERY Subroutine
'------------------------------
' ...explanation...
Sub DELIVERY (D)

    ' *** setup the delivery ***
    Call d100(RN)

    If RN <= 20 Then
        pbpIdx% = Int(Rnd(1) * 20) + 50
        Call GETRPBP(20, 50, Y$, D)
        Call STRIPRPBP(20, 50, Y$, D)
        Call PBP(Y$)
    End If

    Call GETRPBP(46, 1, Y$, D)
    Call STRIPRPBP(46, 1, Y$, D)
    Call PBP(Y$)

End Sub

'------------------------------
'   DisplayFielding_Lineup Subroutine
'------------------------------
' ...explanation...
Sub DisplayFielding_Lineup (PG, P9, TG)

    Locate 1, 16
    Color 14: Print "P1 FAVG A R   P2 FAVG A R   P3 FAVG A R   P4 FAVG A R      "

    For lIdx = 2 To 13: Locate lIdx, 1: Print String$(78, 32): Next

    Locate 2

    If PG = 0 Then AA = 0: BB = 12
    If PG = 1 Then AA = 13: BB = 22

    For lIdx = AA To BB:

        If B%(P9, lIdx, 21) = 0 Then
            Color 2
            If lIdx < 10 Then Print Using "#"; lIdx;
            If lIdx > 9 Then Print X$(lIdx - 10);

            Color 15, 0
            Print Tab(3); B$(P9, lIdx);

            Locate , 17: If B%(P9, lIdx, 22) <> -1 Then Print Using "# #### # #"; B%(P9, lIdx, 22); B%(P9, lIdx, 26); B%(P9, lIdx, 33); B%(P9, lIdx, 34);
            Locate , 31: If B%(P9, lIdx, 23) <> -1 Then Print Using "# #### # #"; B%(P9, lIdx, 23); B%(P9, lIdx, 27); B%(P9, lIdx, 35); B%(P9, lIdx, 36);
            Locate , 45: If B%(P9, lIdx, 24) <> -1 Then Print Using "# #### # #"; B%(P9, lIdx, 24); B%(P9, lIdx, 28); B%(P9, lIdx, 37); B%(P9, lIdx, 38);
            Locate , 59: If B%(P9, lIdx, 25) <> -1 Then Print Using "# #### # #"; B%(P9, lIdx, 25); B%(P9, lIdx, 29); B%(P9, lIdx, 39); B%(P9, lIdx, 40);

            Print

        End If

    Next lIdx

    TG = TG + 1

End Sub

'------------------------------
'   DisplayRun Subroutine
'------------------------------
' ...explanation...
Sub DisplayRun (I2, P, X)

    J = B0%(I2, 0)

    If J <> 0 Then

        Color L%(P, 11), L%(P, 12)

        If B7%(P, J) = 1 And P%(P, P1%(P), 11) <> 999 Then

            Print Left$(P$(P, P1%(P)), 10)
            Color 15, 2
            Locate , X: Print "1/  0"

        Else
            If B7%(P, J) = 1 Then
                Print Left$(P$(P, P1%(P)), 10)
                Locate , X
                Color 15, 2: Print Using "#"; P%(P, P1%(P), 31);
                Print "/";: Print Using "###"; P%(P, P1%(P), 29)
            Else
                Print Left$(B$(P, B3%(P, J)), 10)
                Locate , X
                Color 15, 2: Print Using "#"; B%(P, B3%(P, J), 16);
                Print "/";: Print Using "###"; B%(P, B3%(P, J), 13)
            End If

        End If

    End If

    Color 15, 0

End Sub

'------------------------------
'   DPPBP Subroutine
'------------------------------
' ...explanation...
Sub DPPBP ()

    Call d100(RN)

    Select Case RN
        Case 1 To 19: F$ = "may be a double play ball"
        Case 20 To 40: F$ = "they might turn two"
        Case 41 To 60: F$ = "they could get two"
        Case 61 To 80: F$ = "could be two"
        Case 81 To 100: F$ = "could be a double play"
    End Select

    Call PBP(F$)

End Sub

'------------------------------
'   DPPIVOT Subroutine
'------------------------------
' ...explanation...
Sub DPPIVOT (W%, D)

    ' *** double play pivot ***
    If W% = 4 Then ww% = 6
    If W% = 6 Then ww% = 4
    If W% = 3 Then ww% = 1

    Call GETRPBP(20, 1910, Y$, D)
    Call STRIPRPBP(20, 1910, Y$, D)
    Call PBP(Y$ + " " + B$(D, B9%(D, ww%)))

End Sub

'------------------------------
'   DPRELAY Subroutine
'------------------------------
' ...explanation...
Sub DPRELAY ()

    If A5%(0) = 11 Then
        Call d100(RN)

        If RN <= 10 Then
            Call PBP("Give me the Hoover!")
        Else

            Call d100(RN)

            Select Case RN
                Case 1 To 8: F$ = "over to 1st..."
                Case 9 To 16: F$ = "throw to 1st..."
                Case 17 To 24: F$ = "on to first..."
                Case 25 To 30: F$ = player$(4) + " pivots and throws"
                Case 31 To 36: F$ = player$(4) + " gets the throw off"
                Case 37 To 44: F$ = player$(4) + " is hit as he throws"
                Case 45 To 50: F$ = player$(4) + " leaps and throws"
                Case 51 To 56: F$ = player$(4) + " jumps over the sliding " + player$(1)
                Case 57 To 64: F$ = "the relay to first..."
                Case 65 To 72: F$ = "quick turn by " + player$(4)
                Case 73 To 80: F$ = "relay to 1st..."
                Case 81 To 88: F$ = "to 1st..."
                Case 89 To 100: If A5%(0) = 11 Then F$ = "over to 1st..."
            End Select

            Call PBP(F$)

        End If

    Else

        Call DELAY

    End If

End Sub

'------------------------------
'   DPSAFE routine
'------------------------------
' ...explanation...
Sub DPSAFE ()

    Call d100(RN)

    F$ = ""

    Select Case RN
        Case 1 To 8: F$ = "over to 1st..."
        Case 9 To 16: F$ = "throw to 1st..."
        Case 17 To 24: F$ = "on to first..."
        Case 25 To 30: F$ = "pivot to first"
        Case 31 To 36: F$ = "the throw to first"
        Case 37 To 44: F$ = "relay to first"
        Case 45 To 50: F$ = "quick turn to 1st"
        Case 51 To 56: F$ = "on to first..."
        Case 57 To 64: F$ = "the relay to first..."
        Case 65 To 72: F$ = "quick turn"
        Case 73 To 80: F$ = "relay to 1st..."
        Case 81 To 88: F$ = "to 1st..."
        Case 89 To 100: If A5%(0) = 11 Then F$ = "over to 1st..."
    End Select

    Call PBP(F$)

    Call GETRPBP(20, 1890, Y$, D)
    Call STRIPRPBP(20, 1890, Y$, D)
    Call PBP(Y$)

End Sub


'------------------------------
'   EJECTINC Subroutine
'------------------------------
' ...explanation...
Sub EJECTINC (EJ%, X$)

    EJ% = EJ% + 1

    EJ$(EJ%) = X$

End Sub

'------------------------------
'   EJECTIONINJURY Subroutine
'------------------------------
' ...explanation...
Sub EJECTIONINJURY (U6, P, U9, D, po%, P9, W5, W6)
    ' *** Defensive Player Ejected/Injured ***

    If Not (U6 = 2 Or U6 = 1 And P <> U9) Then
        F$ = "You must replace " + B$(D, B9%(D, po%))
        Call PBP(F$)
    Else

        For I2 = 1 To 9
            If B7%(D, I2) = po% Then Exit For
        Next

        For idx = 0 To 22

            If B%(D, idx, 21) <= 0 And B$(D, idx) <> "XXX" Then

                If B7%(D, I2) = B%(D, idx, 22) Or B7%(D, I2) = B%(D, idx, 23) Or B7%(D, I2) = B%(D, idx, 24) Or B7%(D, I2) = B%(D, idx, 25) Then

                    2707 '
                    F$ = B$(D, B9%(D, po%)) + " will be replaced by " + B$(D, idx)
                    Call PBP(F$)

                    D0%(D) = D0%(D) + 1
                    X0%(D, 0, D0%(D)) = idx
                    X0%(D, 1, D0%(D)) = B7%(D, I2)
                    X0%(D, 2, D0%(D)) = (I2 * 10) + (D0%(D) - 9)
                    B%(D, idx, 21) = 1
                    B3%(D, I2) = idx
                    I7% = D
                    I8% = I2
                    i9% = idx

                    Call REPLACEMENTS(I7%, I8%, i9%)

                    B9%(D, B7%(D, I2)) = idx
                    P9 = D
                    W5 = P9
                    W6 = P9
                    VV(P9) = 1
                    VV1(P9) = 9

                    Exit Sub

                End If

            End If

        Next idx

    End If

End Sub

'------------------------------
'   FLDAVG Subroutine
'------------------------------
' ...explanation...
Sub FLDAVG (D, W%, I3)

    If B%(D, B9%(D, W%), 19) >= 999 Then

        I3 = 999

    Else

        If W% >= 7 Then
            I3 = B%(D, B9%(D, W%), 19)
        Else
            If W% = 3 Or W% = 2 Then I3 = (B%(D, B9%(D, W%), 19)) * .96
        End If

    End If

    I4 = B%(D, B9%(D, W%), 22)
    I5 = B%(D, B9%(D, W%), 23)
    I6 = B%(D, B9%(D, W%), 24)
    I7 = B%(D, B9%(D, W%), 25)

    If W% <> I4 And W% <> I5 And W% <> I6 And W% <> I7 Then
        If W% = 4 Or W% > 6 Then I3 = 982
        If W% = 2 Then I3 = 987
        If W% = 3 Then I3 = 980
        If W% = 6 Or W% = 5 Then I3 = 964

        If W% >= 7 Then
            I3 = I3 - 10
        Else
            I3 = I3 - 20
        End If

        If W% = 2 Or W% >= 4 And W% <= 6 Then I3 = I3 - 80: Exit Sub

    End If

    4462 '
    If W% = 4 Or W% = 6 Then I3 = (B%(D, B9%(D, W%), 19)) * .995
    If W% = 5 Then I3 = (B%(D, B9%(D, W%), 19)) * .985

End Sub

'------------------------------
'   DisplayBallField Subroutine
'------------------------------
' ...explanation...
Sub DisplayBallField (BC%, P, U%, D)

    Color , 0
    Cls

    For X = 5 To 25
        Locate X, 46
        Color , 2
        Print String$(34, 32);
    Next

    Color , 0
    Locate 1, 1

    inningStart% = 1: inningEnd% = 9

    If INNING% > 9 Then inningStart% = 10: inningEnd% = 18
    If INNING% > 18 Then inningStart% = 19: inningEnd% = 27
    Print Tab(10);

    'Innings / 1st row of stats
    For X1% = 0 To 2
        Print Using "## ## ##  "; inningStart% + 3 * X1%; inningStart% + 3 * X1% + 1; inningStart% + 3 * X1% + 2;
    Next

    Print " R  H  E ";
    Color 1: Print Chr$(179);
    Color 15: Print " BALL:  ";
    Color 14: Print BC%;
    Color 1: Print Chr$(179);
    Color 15: Print "WIND: ";
    Color 14: Print WI$

    'Team Score / Rows 2-3 of display
    For team = 0 To 1:

        Locate team + 2: Print Left$(A$(team), 3); NN$(team);

        For I2 = inningStart% To inningEnd%
            If P = 0 And team = 0 And I2 > INNING% - 1 And inningScore%(team, INNING%) = 0 Or P = 0 And team = 0 And I2 > INNING% And inningScore%(team, INNING%) > 0 Or P = 1 And I2 > INNING% And team = 0 Then Exit For
            If P = 0 And team = 1 And I2 > INNING% - 1 Or P = 1 And team = 1 And inningScore%(team, INNING%) = 0 And I2 > INNING% - 1 Or P = 1 And team = 1 And inningScore%(team, INNING%) > 0 And I2 > INNING% Then Exit For
            Call INNDISP(I2, team)
        Next I2

        Locate , 40: Print Using "## ## ## "; S6%(team, 0); S6%(team, 1); S6%(team, 2);
        Color 1: Print Chr$(179);
        Color 15

        If team = 0 Then Print " STRIKE:";: Color 14: Print U%;: Color 1: Print Chr$(179);: Color 15: Print "SKY:  ";: Color 14: Print SC$(SC%)
        If team = 1 Then Print " OUT:   ";: Color 14: Print O%(0);: Color 1: Print Chr$(179);: Color 15: Print "TEMP:";: Color 14: Print TP%

    Next team

    Color 1

    'Graphics / Lines
    Print String$(20, 196); Chr$(194); String$(23, 196); Chr$(194); String$(3, 196); Chr$(193); String$(11, 196); Chr$(193); String$(19, 196)
    For X = 5 To 12: Locate X, 21: Print Chr$(179);: Next
    For X = 5 To 25: Locate X, 45: Print Chr$(179);: Next

    'CF Name
    Color L%(D, 11), L%(D, 12)
    Locate 5, 58: Print Left$(B$(D, B9%(D, 8)), 10)

    'CF Stats
    Color 15, 2
    Locate 6, 59: Print Using "A:# R:#"; B%(D, B9%(D, 8), 15); B%(D, B9%(D, 8), 17)
    If B%(D, B9%(D, 8), 19) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(B%(D, B9%(D, 8), 19)), "###", 1)
    End If
    Locate 7, 59: Print "FA:" + fldPct$

    'RF / LF Names
    Color L%(D, 11), L%(D, 12)
    Locate 6, 46: Print Left$(B$(D, B9%(D, 7)), 10);
    Locate , 70: Print Left$(B$(D, B9%(D, 9)), 10)

    'RF / LF Stats
    Color 15, 2
    Locate 7, 47: Print Using "A:# R:#"; B%(D, B9%(D, 7), 15); B%(D, B9%(D, 7), 17);
    Locate , 71: Print Using "A:# R:#"; B%(D, B9%(D, 9), 15); B%(D, B9%(D, 9), 17)

    If B%(D, B9%(D, 7), 19) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(B%(D, B9%(D, 7), 19)), "###", 1)
    End If
    Locate 8, 47: Print "FA:" + fldPct$

    If B%(D, B9%(D, 9), 19) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(B%(D, B9%(D, 9), 19)), "###", 1)
    End If
    Locate 8, 71: Print "FA:" + fldPct$

    'SS / 2B Names
    Color L%(D, 11), L%(D, 12)
    Locate 10, 49: Print Left$(B$(D, B9%(D, 6)), 10);
    Locate , 68: Print Left$(B$(D, B9%(D, 4)), 10)

    'SS / 2B Stats
    Color 15, 2
    Locate 11, 50: Print Using "R:#"; B%(D, B9%(D, 6), 17);
    Locate 11, 69: Print Using "R:#"; B%(D, B9%(D, 4), 17)

    If B%(D, B9%(D, 6), 19) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(B%(D, B9%(D, 6), 19)), "###", 1)
    End If
    Locate 12, 50: Print "FA:" + fldPct$

    If B%(D, B9%(D, 4), 19) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(B%(D, B9%(D, 4), 19)), "###", 1)
    End If
    Locate 12, 69: Print "FA:" + fldPct$

    '2nd Base "Graphic"
    Locate 12, 62: Print Chr$(219);

    '1B / 3B Names
    Color L%(D, 11), L%(D, 12)
    Locate 14, 46: Print Left$(B$(D, B9%(D, 5)), 10);
    Locate , 70: Print Left$(B$(D, B9%(D, 3)), 10)

    '1B / 3B Stats
    Color 15, 2
    Locate 15, 47: Print Using "R:#"; B%(D, B9%(D, 5), 17);
    Locate 15, 71: Print Using "R:#"; B%(D, B9%(D, 3), 17)

    If B%(D, B9%(D, 5), 19) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(B%(D, B9%(D, 5), 19)), "###", 1)
    End If
    Locate 16, 47: Print "FA:" + fldPct$

    If B%(D, B9%(D, 3), 19) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(B%(D, B9%(D, 3), 19)), "###", 1)
    End If
    Locate 16, 71: Print "FA:" + fldPct$

    '1st / 3rd Base "Graphic"
    Locate 17, 49: Print Chr$(219);
    Locate 17, 78: Print Chr$(219);

    'Pitcher Name
    Locate 17, 55: Print "["; B1$(P%(D, P1%(D), 0) + 2); "] "; Left$(P$(D, P1%(D)), 10)

    'Pitcher Stats
    Color 15, 2
    Locate 18, 59: Print Using "H:#"; P%(D, P1%(D), 18)
    If P%(D, P1%(D), 17) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(P%(D, P1%(D), 17)), "###", 1)
    End If
    Locate 19, 59: Print "FA:" + fldPct$

    'Home Plate "Graphic
    Locate 21, 62: Print Chr$(219)

    'Catcher Name
    Color L%(D, 11), L%(D, 12):
    Locate 23, 58: Print Left$(B$(D, B9%(D, 2)), 10)

    'Catcher Stats
    Color 15, 2
    Locate 24, 59: Print Using "   A:#"; B%(D, B9%(D, 2), 15);

    If B%(D, B9%(D, 2), 19) = 1000 Then
        fldPct$ = "1.000"
    Else
        fldPct$ = "." + FUsing$(Str$(B%(D, B9%(D, 2), 19)), "###", 1)
    End If
    Locate 25, 59: Print "FA:" + fldPct$;

    'Graphics / Lines
    Color 7, 0
    For X = 5 To 25: Locate X, 1: Print String$(44, 32);: Next

    Color 1
    Locate 4, 1: Print String$(20, 196); Chr$(194); String$(23, 196); Chr$(194)
    Locate 14, 1: Print String$(20, 196); Chr$(193); String$(23, 196); Chr$(180)

End Sub

'------------------------------
'   FLDERR Subroutine
'------------------------------
' ...explanation...
Sub FLDERR (F%, W%, D, I3, SB%, S2%, P)

    F% = 0

    If W% = 1 Then
        If SB% = 1 Then
            I3 = 995
        Else
            I3 = P%(D, P1%(D), 17) + 30
        End If
    Else
        Call FLDAVG(D, W%, I3)
    End If

    If I3 >= 999 Then
        '-- I6 is used in other routines
        I6 = 1
    Else
        If S2% >= 12 And S2% <= 15 Then I6 = 1009 - I3
        If S2% >= 7 And S2% <= 9 Then I6 = 1006 - I3
        If S2% = 16 Or S2% >= 22 Then I6 = 1000 - I3
        If S2% >= 17 And S2% <= 21 Then I6 = (1000 - I3) * .05

    End If

    If W% = 7 Then I6 = I6 - 4
    If W% = 8 Then I6 = I6 - 10
    If W% = 9 Then I6 = I6 - 15
    If W% = 5 Then I6 = I6 - 15

    H6% = Int(Rnd(1) * 1000) + 1

    If H6% <= I6 Then

        F% = 1
        rand = Int(Rnd(1) * 2) + 1
        I1 = 2

        If W% = 1 Then I5 = P1%(D): I6 = 34: Call ADDPIT(D, I5, I6)
        If W% <> 1 Then I5 = B9%(D, W%): I6 = 11: Call INCBATDF(D, I5, I6)

        If S2% = 12 Then

            Call PBP(player$(0) + " beats out an infield single")
            If B7%(P, B1!(P)) <> 1 Then
                I5 = B3%(P, B1!(P))
                I6 = 0
                Call INCBATOFF(P, I5, I6)
                I6 = 1
                Call INCBATOFF(P, I5, I6)
            End If

            I5 = P1%(D)
            I6 = 1
            Call ADDPIT(D, I5, I6)

            If B7%(P, B1!(P)) = 1 Then
                I5 = P1%(P)
                I6 = 23
                Call INCPITOFF(P, I5, I6)
                I6 = 24
                Call INCPITOFF(P, I5, I6)
            End If

        End If

        If S2% >= 17 And S2% <= 21 Then I1 = 3
        If S2% >= 17 And S2% <= 20 Then Call OUTFIELDERR
        If S2% = 8 Or S2% = 9 Or S2% >= 22 Or S2% = 16 Then I1 = 1
        If S2% >= 12 And S2% <= 14 And rand = 1 Or S2% = 15 Then I1 = 1

        Call d100(RN)

        If I1 = 1 And W% = 1 And S2% = 16 Then F$ = "*** WILD PICK OFF THROW BY" + " " + player$(4) + " ***"
        If I1 = 1 And RN <= 50 Then F$ = "*** THROWING ERROR ON" + " " + player$(4) + " ***"
        If I1 = 1 And RN > 50 And RN <= 55 Then F$ = "*** BALL KICKED BY" + " " + player$(4) + " ***"
        If I1 = 1 Then F$ = "*** " + player$(4) + " THROWS IT AWAY ***"

        If I1 = 2 And RN <= 30 Then F$ = "*** FIELDING ERROR ON" + " " + player$(4) + " ***"
        If I1 = 2 And RN > 30 And RN <= 50 Then F$ = "*** OFF THE GLOVE OF" + " " + player$(4) + " ***"
        If I1 = 2 And RN > 50 And RN <= 75 Then F$ = "*** BALL IS BOOTED BY" + " " + player$(4) + " ***"
        If I1 = 2 And RN > 75 And RN <= 95 Then F$ = "*** BALL IS BOBBLED BY" + " " + player$(4) + " ***"
        If I1 = 2 And RN > 95 Then F$ = "*** BALL IS THROUGH THE LEGS OF" + " " + player$(4) + " ***"

        If I1 = 3 And RN <= 33 Then F$ = "*** BALL DROPPED BY" + " " + player$(4) + " ***"
        If I1 = 3 And RN > 33 And RN <= 66 Then F$ = "*** OFF THE GLOVE OF" + " " + player$(4) + " ***"
        If I1 = 3 Then F$ = "*** BALL IS MISPLAYED BY" + " " + player$(4) + " ***"

        Call PBP(F$)

        If S2% = 16 Or S2% = 22 Then

            I8! = Int(Rnd(1) * 10) + 1

            If I8! < 5 Then
                A5%(0) = 2
                A5%(1) = 2
                A5%(2) = 2
                A5%(3) = 1
                Call DELAY
            End If

        Else

            Call d100(RN)
            A5%(0) = 1
            A5%(1) = 1
            A5%(2) = 1
            A5%(3) = 1

            If Not (S2% > 17 Or S2% <= 20) Then

                If RN <= 17 And S2% <> 8 Or S2% = 12 Then
                    A5%(0) = 2
                    A5%(1) = 2
                    A5%(2) = 2
                End If
            End If

        End If

        If S2% >= 17 And S2% <= 20 And O%(0) = 2 Or S2% >= 23 Or S2% = 16 And W% = 2 Then
            A5%(3) = 1
            A5%(2) = 2
            A5%(1) = 2
            A5%(0) = 2
        End If

        If S2% >= 17 And S2% <= 19 And RN <= 33 And O%(0) < 2 And B0%(1, 0) = 0 Then A5%(0) = 2

        If S2% = 16 Or S2% = 22 Then A5%(0) = 0

        If I1 > 0 And S2% <> 7 And S2% <> 8 And S2% <> 9 And S2% <> 16 And S2% <> 22 Then O%(1) = O%(1) + 1

        If S2% = 16 Or S2% = 7 Or S2% = 8 Or S2% = 9 Or S2% = 22 Then

            A5%(0) = 0

            '-- I8 gets a value here only if S2% is 16 or 22
            '-- for values 7,8,9 it will be 0
            If I8! > 4 And W% <> 2 Then
                A5%(1) = 1
                A5%(2) = 1
                A5%(3) = 1
            End If

        End If

        S6%(D, 2) = S6%(D, 2) + 1

        Call ADVANCEMENT(P, D, S2%, F%, I3)

    End If

End Sub

'------------------------------
'   GETFIELDER Subroutine
'------------------------------
' ...explanation...
Sub GETFIELDER (W%, P, I1, D)

    W% = 0

    If B7%(P, B1!(P)) <> 1 Then

        If B%(P, B3%(P, B1!(P)), 0) < 0 Then I1 = -1

        If B%(P, B3%(P, B1!(P)), 0) > 0 Then I1 = 1

        If B%(P, B3%(P, B1!(P)), 0) = 0 Then I1 = -1 * P%(D, P1%(D), 0)

    Else

        I1 = P%(P, P1%(P), 0)

    End If

End Sub

'------------------------------
'   GETFIELDNAME Subroutine
'------------------------------
' ...explanation...
Sub GETFIELDNAME (W%, D)

    If W% <> 1 Then
        player$(4) = B$(D, B9%(D, W%))
    Else
        player$(4) = P$(D, P1%(D))
    End If

End Sub

'------------------------------
'   GETINFIELDER Subroutine
'------------------------------
' ...explanation...
Sub GETINFIELDER (W%, P, I1, D, S2%, P2)

    Call GETFIELDER(W%, P, I1, D)

    Call d100(RN)

    If I1 = 1 Then W% = 3
    If I1 = 1 And RN <= 92 Then W% = 4
    If I1 = 1 And RN <= 72 Then W% = 6
    If I1 = 1 And RN <= 32 Then W% = 5
    If I1 = -1 Then W% = 5
    If I1 = -1 And RN <= 88 Then W% = 6
    If I1 = -1 And RN <= 68 Then W% = 4
    If I1 = -1 And RN <= 28 Then W% = 3
    If RN <= 12 And S2% <> 20 Then W% = 1
    If RN <= 4 Or RN <= 12 And S2% = 20 Then W% = 2
    If S2% = 21 And W% = 2 Then W% = 1
    If P2 = 4 And W% = 6 Then W% = 1
    If P2 = 4 And W% = 4 Or S2% = 20 And W% = 1 Then W% = 2

    Call GETFIELDNAME(W%, D)

End Sub

'------------------------------
'   GETOUTFIELDER Subroutine
'------------------------------
' ...explanation...
Sub GETOUTFIELDER (W%, P, I1, D)

    Call GETFIELDER(W%, P, I1, D)

    Call d100(RN)

    If I1 = 1 Then W% = 7
    If I1 = 1 And RN <= 50 Then W% = 9
    If I1 = -1 Then W% = 9
    If I1 = -1 And RN <= 50 Then W% = 7
    If RN <= 30 Then W% = 8

    player$(4) = B$(D, B9%(D, W%))

End Sub

'------------------------------
'   GROUNDERPBP Subroutine
'------------------------------
' ...explanation...
Sub GROUNDERPBP (W%, D)

    If W% <> 2 Then

        Call d100(RN)

        range = 140
        min = 1930

        If RN > 35 Then
            If W% = 1 Then range = 160: min = 2070
            If W% = 3 Then range = 150: min = 2230
            If W% = 4 Then range = 160: min = 2380
            If W% = 6 Then range = 160: min = 2540
            If W% = 5 Then range = 150: min = 2700
        End If

        Call GETRPBP(range, min, Y$, D)
        Call STRIPRPBP(range, min, Y$, D)
        F$ = Y$ + " "

    Else

		' *** in front of plate ***
        Call GETRPBP(25, 2870, Y$, D)
        Call STRIPRPBP(25, 2870, Y$, D)
        Call PBP(Y$)

    End If

End Sub

'------------------------------
'   GROUNDERS Subroutine
'------------------------------
' ...explanation...
Sub GROUNDERS (W%, D)

    ' *** grounders to infielders ***
    X$ = player$(4)

    If W% <> 2 Then
        Call GETRPBP(120, 1420, Y$, D)
        Call STRIPRPBP(120, 1420, Y$, D)
        Call PBP(X$ + " " + Y$)
    Else

        ' field grounders in front of the plate
        Call GETRPBP(13, 2850, Y$, D)
        Call STRIPRPBP(13, 2850, Y$, D)
        If Left$(Y$, 2) = "QQ" Then Y$ = X$ + Right$(Y$, Len(Y$) - 2)
        Call PBP(Y$)
    End If

End Sub

'------------------------------
'   HITS2GAP Subroutine
'------------------------------
' ...explanation...
Sub HITS2GAP (W%, P, I1, D)

    Call GETFIELDER(W%, P, I1, D)

    Call d100(RN)

    If I1 = 1 Then
        'should be 6 to 15 ?
        If RN <= 15 Then
            W% = 9
        Else
            W% = 7
        End If
    End If

    If I1 = -1 Then
        'should be 6 to 15 ?
        If RN <= 15 Then
            W% = 7
        Else
            W% = 9
        End If
    End If

    If RN <= 5 Then W% = 8

    player$(4) = B$(D, B9%(D, W%))

End Sub

'------------------------------
'   HOLDSTATUS Subroutine
'------------------------------
' ...explanation...
Sub HOLDSTATUS (H0%)

    Locate 17, 77

    Color 15, 2

    Print H0$(H0%)

    Color , 0

End Sub

'------------------------------
'   INCBATDF Subroutine
'------------------------------
' ...explanation...
Sub INCBATDF (D, I5, I6)

    B8%(D, I5, I6) = B8%(D, I5, I6) + 1

    B5%(D, I5, I6) = B5%(D, I5, I6) + 1

End Sub

'------------------------------
'   INCBATOFF Subroutine
'------------------------------
' ...explanation...
Sub INCBATOFF (P, I5, I6)

    B8%(P, I5, I6) = B8%(P, I5, I6) + 1

    B5%(P, I5, I6) = B5%(P, I5, I6) + 1

    If I6 >= 4 And I6 <= 8 And I6 <> 1 And P%(1 - P, P1%(1 - P), 0) <> 1 Then

        If I6 >= 4 Then
            CSS%(P, I5, I6 - 2) = CSS%(P, I5, I6 - 2) + 1
        Else
            CSS%(P, I5, I6) = CSS%(P, I5, I6) + 1
        End If

    End If

End Sub

'------------------------------
'   INCPITOFF Subroutine
'------------------------------
' ...explanation...
Sub INCPITOFF (P, I5, I6)

    P8%(P, I5, I6) = P8%(P, I5, I6) + 1

    P5%(P, I5, I6) = P5%(P, I5, I6) + 1

End Sub

'------------------------------
'   INCREMENTHIT Subroutine
'------------------------------
' ...explanation...
Sub INCREMENTHIT (P, D, MO)

    If B7%(P, B1!(P)) <> 1 Then
        I5 = B3%(P, B1!(P))
        I6 = 15
        Call INCBATOFF(P, I5, I6)
    Else
        I5 = P1%(P)
        I6 = 37
        Call INCPITOFF(P, I5, I6)
    End If

    I5 = P1%(D)
    I6 = 13
    Call ADDPIT(D, I5, I6)

    If MO > 0 Then MO = MO - 1

End Sub

'------------------------------
'   INJPIT Subroutine
'------------------------------
' ...explanation...
Sub INJPIT (P, D, IP%, PPH)

    ' *** Defensive Pitcher Ejected/Injured ***
    If U6 = 2 Or U6 = 1 And P <> U9 Then
        IP% = 1
        Call RELIEVERS(PPH, pz)
    Else
        Call PBP("You must replace " + P$(D, P1%(D)))
    End If

End Sub

'------------------------------
'   INJURYLENGTH Subroutine
'------------------------------
' ...explanation...
Sub INJURYLENGTH (IJL%, D, po%, U6, P, U9, P9, W5, W6)

    doneLength = 0

    IJL% = IJL% + 1

    IJ$(IJL%) = B$(D, B9%(D, po%))

    F$ = B$(D, B9%(D, po%)) + " is injured!"
    Call PBP(F$)

    F$ = "He may be out for "
    ' *** Determine Injury Length ***
    il = 0

    If B%(D, B9%(D, po%), 3) = 162 Then

        F$ = F$ + " the rest of the game"

    Else

        ct = 0

        For I = 0 To 22

            For I1 = 22 To 25
                If B%(D, I, I1) = po% And B%(D, I, 32) = 0 And I <> B9%(D, po%) Then ct = ct + 1
                If ct > 3 Then
                    il = 1
                    doneLength = 1
                    Exit For
                End If
            Next

        Next

        If doneLength = 0 Then
            F$ = F$ + " the rest of the game"
            il = 0
        Else
            If il <> 0 Then

                If B%(D, B9%(D, po%), 3) = 161 Then
                    F$ = F$ + " this game and next game"
                    il = 1
                Else
                    il = Int(Rnd(1) * (162 - B%(D, B9%(D, po%), 3))) + 1
                    F$ = F$ + Str$(il) + " games"
                End If

            End If

        End If

    End If

    Call PBP(F$)
    B%(D, B9%(D, po%), 32) = B%(D, B9%(D, po%), 32) + il

    Call DELAY
    Call DELAY
    Call EJECTIONINJURY(U6, P, U9, D, po%, P9, W5, W6)

End Sub

'------------------------------
'   INNDISP Subroutine
'------------------------------
' ...explanation...
Sub INNDISP (currInning, teamLine)

    If currInning < 4 Then Locate , 3 * currInning + 7
    If currInning > 3 And currInning < 7 Then Locate , 3 * currInning + 8
    If currInning > 6 And currInning < 10 Then Locate , 3 * currInning + 9
    If currInning > 9 And currInning < 13 Then Locate , 3 * (currInning - 9) + 7
    If currInning > 12 And currInning < 16 Then Locate , 3 * (currInning - 9) + 8
    If currInning > 15 And currInning < 19 Then Locate , 3 * (currInning - 9) + 9
    If currInning > 18 And currInning < 22 Then Locate , 3 * (currInning - 18) + 7
    If currInning > 21 And currInning < 25 Then Locate , 3 * (currInning - 18) + 8
    If currInning > 24 And currInning < 28 Then Locate , 3 * (currInning - 18) + 9

    Print Using "##"; inningScore%(teamLine, currInning);

End Sub

'------------------------------
'   LDRIVE Subroutine
'------------------------------
' ...explanation...
Sub LDRIVE (X$)

    Call d100(RN)

    Select Case RN
        Case 1 To 20: X$ = "rips"
        Case 21 To 40: X$ = "hammers"
        Case 41 To 60: X$ = "lashes"
        Case 61 To 80: X$ = "lines"
        Case 81 To 100: X$ = "drives"
    End Select

End Sub

'------------------------------
'   LONGFLY Subroutine
'------------------------------
' ...explanation...
Sub LONGFLY (D, W%)

    Call GETRPBP(60, 1310, Y$, D)
    Call STRIPRPBP(60, 1310, Y$, D)
    Call PBP(Y$ + " " + C$(W%))

    If WF < 1 And Rnd(1) > WF Then

        Call PBP("The wind is bringing it back..."):

    Else
        If WF > 1 And Rnd(1) <= 1 - WF Then Call PBP("It's carrying well in the breeze...")

        Call GETRPBP(50, 1370, Y$, D)
        Call STRIPRPBP(50, 1370, Y$, D)
        Call PBP(Y$)

        Call d100(RN)

        If Not ((L%(1, 13) = 21 Or L%(1, 13) = 27) And W% = 7) Then

            Select Case RN
                Case 1 To 5: Call PBP(player$(4) + " leaps")
                Case 6 To 10: Call PBP(player$(4) + " against the wall")
                Case 11 To 20: Call PBP(player$(4) + " jumps at the wall")
                Case 21 To 30: Call PBP(player$(4) + " climbs the wall")
            End Select

        End If

    End If

End Sub

'------------------------------
'   MAINSCREEN Subroutine
'------------------------------
' ...explanation...
Sub MAINSCREEN (D, P, BC%, U%, MO)

    For I5 = 5 To 13
        Locate I5, 1
        Print Space$(44);
    Next I5

    Locate 5, 1
    Locate 21, 48

    Color 15, 2: Print Tab(62); Chr$(219); Tab(79);

    '--- is this necessary?
    'Color 7, 0

    Locate 10, 1

    Color L%(D, 11), L%(D, 12)
    Print P$(D, P1%(D)); " "; B1$(P%(D, P1%(D), 0) + 2)

    Color 15, 0

    Call DISPBAVG(D)

    Color 1

    For X = 5 To 13: Locate X, 21: Print Chr$(179);: Next

    Locate 11, 1: Color 2, 0: Print "W-L ERA ";

    Color 15, 0

    Print Using "##"; P%(D, P1%(D), 1);: Print "-";: Print Using "##"; P%(D, P1%(D), 2);
    Print " ";: Print Using "##.##"; P%(D, P1%(D), 10) / 100

    Color 2, 0

    Print "  IP  H  BB  K GAME"

    Color 15, 0

    If P8%(D, P1%(D), 0) = 0 Then
        Print " 0.0";
    Else
        Print Using "##"; Int(P8%(D, P1%(D), 0) / 3);
        Print ".";: Print Using "#"; P8%(D, P1%(D), 0) - (Int(P8%(D, P1%(D), 0) / 3) * 3);
    End If

    Print Using " ##  ## ##"; P8%(D, P1%(D), 1); P8%(D, P1%(D), 4); P8%(D, P1%(D), 5)
    Locate 5, 1
    J = B3%(P, B1!(P))
    Color L%(P, 11), L%(P, 12)

    If B7%(P, B1!(P)) = 1 Then
        X$ = P$(P, P1%(P))
        Print X$; " "; B1$(P%(P, P1%(P), 0) + 2);
        Call PITPLACEMENT(P, X$)
    Else
        X$ = B$(P, J)
        Print X$; " "; B1$(B%(P, J, 0) + 2);
        If B%(P, J, 0) < 0 Or B%(P, J, 0) = 0 And P%(D, P1%(D), 0) > 0 Then Locate 21, 64
        X = Len(X$)
        If B%(P, J, 0) > 0 Or B%(P, J, 0) = 0 And P%(D, P1%(D), 0) < 0 Then Locate 21, 51 + 10 - X
        Print X$
    End If

    Locate 6, 1
    Color 2, 0: Print " AVG HR  BB   K"
    Color 15, 0

    If B7%(P, B1!(P)) <> 1 Then
        If B%(P, J, 4) = 0 Then
            Print ".000  0   0   0";
        Else
            bAvg! = B%(P, J, 6) / B%(P, J, 4) * 1000
            Print "."; Using "###"; bAvg!
            Print Using " ## ### ###"; B%(P, J, 9); B%(P, J, 11); B%(P, J, 12)
        End If
    Else

        If P%(P, P1%(P), 11) <> 999 Then
            pAvg! = P%(P, P1%(P), 11)
            If pAvg! = 0 Then
                Print ".000 0"
            Else
                Print "."; Using "###"; pAvg! * 1000
            End If
        Else
            If P%(P, P1%(P), 20) = 0 Then
                Print ".000 0";
            Else
                pAvg! = P%(P, P1%(P), 22) / P%(P, P1%(P), 20) * 1000
                Print "."; Using "###"; pAvg!
                Print Using " ## ### ###"; P%(P, P1%(P), 25); P%(P, P1%(P), 27); P%(P, P1%(P), 28)
            End If
        End If
    End If

    Locate 8, 2

    If B7%(P, B1!(P)) <> 1 Then
        Print B8%(P, B3%(P, B1!(P)), 1); "-"; B8%(P, B3%(P, B1!(P)), 0);
    Else
        Print P8%(P, P1%(P), 24); "-"; P8%(P, P1%(P), 23);
    End If

    Print " TODAY"
    Color 14, 0
    'Outs
    Locate 3, 58: Print O%(0)
    'Strikes
    Locate 2, 58: Print U%
    'Balls
    Locate 1, 58: Print BC%
    Color 15, 2
    Locate 22, 46: Print "INFIELD:"

    Locate 23, 46
    Select Case INFPOS%
        Case 0: Print "NORMAL    "
        Case 1: Print "CORNERS IN"
        Case 2: Print "INFIELD IN"
    End Select

    Call HOLDSTATUS(H0%)

    Locate 13, 58
    Color 15, 2: Print Tab(68);
    Locate 14, 58: Print Space$(8)

    Locate 13, 58

    I2 = 2
    X = 58

    Call DisplayRun(I2, P, X)

    If O%(0) <> 3 Then MO = 0

    For WK = 1 To 3
        If B0%(WK, 0) > 0 Then MO = MO + 1
    Next

    Locate 18, 47
    Color 15, 2: Print Tab(57);

    Locate 19, 47: Print Space$(8)

    Locate 18, 47

    I2 = 3
    X = 47

    Call DisplayRun(I2, P, X)

    Locate 18, 69
    Color 15, 2: Print Tab(79);
    Locate 19, 70: Print Space$(8)

    Locate 18, 69

    I2 = 1
    X = 70

    Call DisplayRun(I2, P, X)

    Color 15, 0

End Sub

'------------------------------
'   WINDEX Subroutine
'------------------------------
' ...explanation...
Sub WINDEX ()

    If pbpDelay! > 0 Then


        PB% = 0

        If usingGfx = 1 Then

            Color 4294967295
            _PrintMode _FillBackground , imageScreen&

            For I5 = 4 To 11
                PrintOnGfx 20, I5, Space$(44), imageScreen&
            Next

        Else

            For I5 = 15 To 24
                Locate , 1
                Locate I5
                Print Space$(44);
            Next I5
            Locate 15, 1

        End If

        Erase G$

    End If

End Sub

'------------------------------
'   NEWPITCHER Subroutine
'------------------------------
' ...explanation...
Sub NEWPITCHER (pIdx, PPH, pz)

    V0 = pIdx

    If S1%(D) <> -1 And P6%(D) > 1 Then I5 = P1%(D): I6 = 22: Call ADDPIT(D, I5, I6)

    P1%(D) = V0
    P6%(D) = P6%(D) + 1
    P%(D, V0, 15) = P6%(D)
    P9 = D

    Call PITSTAM(P9)

    For V0 = 1 To 9
        If B7%(D, V0) = 1 Or B7%(D, V0) = 10 Then
            B3%(D, V0) = P1%(D)
            B7%(D, V0) = 1
            B9%(D, 1) = P1%(D)
            P9 = D
            W5 = P9
            W6 = P9
            VV(P9) = V0
            VV1(P9) = V0
            Call HITTINGLINES '(L%(), P%(), P1%(), B7%(), B%(), VV(), VV1(), B3%(), B4%(), K9!(), WF!)
        End If
    Next V0

    VV(P9) = 1
    VV1(P9) = 9
    B9%(D, 1) = P1%(D)

    Call CHECKSAVE(D, P, S4%)

    W5 = 1 - P9
    W6 = 1 - P9
    VV(1 - P9) = 1
    VV1(1 - P9) = 9

    Call WINDEX

    Locate 15, 1

    Call d100(RN)

    If RN <= 50 Then Call PBP("Hold the phone...")

    Call PBP(M$(D) + " is making a pitching change")
    Call DELAY
    Call HITTINGLINES '(L%(), P%(), P1%(), B7%(), B%(), VV(), VV1(), B3%(), B4%(), K9!(), WF!)

    If usingGfx = 1 Then
        Call DisplayBallField_Gfx(BC%, P, U%, D)
        Call MAINSCREEN_G(D, P, BC%, U%, MO)
    Else
        Call DisplayBallField(BC%, P, U%, D)
        Call MAINSCREEN(D, P, BC%, U%, MO)
    End If

    PPH = 0

    pz = 1

End Sub

'------------------------------
'   NOJUMP Subroutine
'------------------------------
' ...explanation...
Sub NOJUMP (D)

    Call GETRPBP(20, 1050, Y$, D)
    Call STRIPRPBP(20, 1050, Y$, D)
    Call PBP(Y$)
    Call DELAY

End Sub

'------------------------------
'   OFFPIT Subroutine
'------------------------------
' ...explanation...
Sub OFFPIT (P9, I5, I6)

    P8%(P9, I5, I6) = P8%(P9, I5, I6) + 1
    P5%(P9, I5, I6) = P5%(P9, I5, I6) + 1

End Sub

'------------------------------
'   OUTATFIRST Subroutine
'------------------------------
' ...explanation...
Sub OUTATFIRST (W%, D, fbu%, FB2P%)

    Call PITCHERNAME(W%, D)
    Call GROUNDERS(W%, D)
    Call d100(RN)

    If W% = 3 And RN <= 94 Then
        Call PBP("he takes it to the bag unassisted")
        fbu% = 1
    Else
        If W% = 3 Then
            W% = 1
            Call PITCHERNAME(W%, D)
            Call PBP("He flips it to " + player$(4) + " covering")
            FB2P% = 1
            W% = 3
        End If

        If W% = 4 Then Call SECOND2FIRST(D)

        If W% = 5 Or W% = 6 Then Call THROW2FIRST(D)

    End If

End Sub

'------------------------------
'   OUTFIELDERR Subroutine
'------------------------------
' ...explanation...
Sub OUTFIELDERR ()

    ' *** outfielders in trouble ***

    Call d100(RN)

    Select Case RN
        Case 1 To 20: F$ = player$(4) + " can't find it"
        Case 21 To 40: F$ = player$(4) + " misjudges it"
        Case 41 To 60: F$ = player$(4) + " turns the wrong way"
        Case 61 To 80: F$ = player$(4) + " loses it"
        Case 81 To 100: F$ = player$(4) + " doesn't see it"
    End Select

    Call PBP(F$)

End Sub

'------------------------------
'   OUTFLDLOCATION Subroutine
'------------------------------
' ...explanation...
Function OUTFLDLOCATION$ (W%)

    Call d100(RN)

    If W% = 7 Or W% = 8 And RN > 50 Then OUTFLDLOCATION$ = "lcf"
    If W% = 9 Or W% = 8 And RN <= 50 Then OUTFLDLOCATION$ = "rcf"

End Function

'------------------------------
'   OUTFLDNAME Subroutine
'------------------------------
' ...explanation...
Sub OUTFLDNAME (W%, D)

    W% = 9

    Call d100(RN)

    Select Case RN
        Case 1 To 5: W% = 7
        Case 6 To 25: W% = 8
    End Select

    player$(4) = B$(D, B9%(D, W%))

End Sub

'------------------------------
'   PICKEDOFF Subroutine
'------------------------------
' ...explanation...
Sub PICKEDOFF (D, i)

    ' *** picked off ***
    Call WINDEX
    Call DELIVERY(D)

    Call d100(RN)
    Select Case RN
        Case 1 To 33: F$ = "NO, " + P$(D, P1%(D)) + " throws to " + H$(i - 1)
        Case 34 To 66: F$ = "quick move to " + H$(i - 1)
        Case 67 To 100: F$ = "pickoff throw to " + H$(i - 1)
    End Select

    Call PBP(F$)

    Call d100(RN)

    If RN <= 50 Then
        F$ = player$(i - 1) + " is picked off base!"
    Else
        F$ = player$(i - 1) + " is caught napping"
    End If

    Call PBP(F$)

    Call d100(RN)

    Select Case RN
        Case 1 To 25: F$ = "he can't believe it"
        Case 26 To 50: F$ = "what a teriffic move by " + P$(D, P1%(D))
    End Select

    Call PBP(F$)

End Sub

'------------------------------
'   PINCHRUNNER Subroutine
'------------------------------
' ...explanation...
Sub PINCHRUNNER (MS%, A1, S4%, I2, P, PR%, BC%, U%, D, MO)

    ' *** CHECK FOR PINCH RUNNER ***
    i0% = 0

    If A1 <= 1 And A1 >= -2 And INNING% >= 8 Then

        I2 = 1

        If S4% = 1 Or S4% = 5 Then I2 = 1
        If S4% = 2 Or S4% = 4 Or S4% = 6 Then I2 = 2

        ' J REPRESENTS THE SPOT IN THE BATTING ORDER
        ' j1 represents the base
        J = B0%(I2, 0)
        J1 = I2

        If J <> 0 Then

            If MG%(P, 771) = 999 Then

                For I1 = 772 To 777
                    If MG%(P, I1) <> -1 Then
                        If B%(P, MG%(P, I1), 21) = 0 Then
                            I1 = MG%(P, I1)
                            If B7%(P, J) = 1 Then
                                'PINCH RUNNING FOR THE PITCHER
                                If MG%(P, 803) = 999 Then
                                    Call d100(RN)
                                    If P%(P, P1%(P), 31) <= MG%(P, 804) And INNING% >= MG%(P, 805) And RN <= MG%(P, 806) Then 8993
                                    If P%(P, P1%(P), 31) <= MG%(P, 807) And INNING% >= MG%(P, 808) And RN <= MG%(P, 809) Then 8993
                                    GoTo 8999
                                End If
                            End If

                            For I = 0 To 5
                                If MG%(P, I * 4 + 779) = B3%(P, J) Then
                                    'FOUND A MATCH FOR THE RUNNER ON BASE
                                    Call d100(RN)
                                    If INNING% >= MG%(P, I * 4 + 780) And B%(P, MG%(P, I * 4 + 781), 21) = 0 And RN <= MG%(P, I * 4 + 782) Then B%(P, MG%(P, I * 4 + 781), 21) = 40 + J: GoTo 8993
                                    GoTo 8999
                                End If
                            Next

                        End If
                        MG%(P, I1) = -1
                    End If

                Next

                GoTo 8999

            End If

            8000 '
            If B7%(P, J) = 1 And P%(P, P1%(P), 31) > 4 Then 8999
            If B7%(P, J) <> 1 And B%(P, B3%(P, J), 16) > 3 Then 8999

            I1 = -1

            For I = 0 To 22
                If B$(P, I) <> "XXX" And B%(P, I, 21) <= 0 Then
                    For I2 = 22 To 25
                        If B%(P, I, I2) <> -1 And B%(P, I, I2) = B7%(P, J) And B7%(P, J) <> 1 Then I1 = I
                    Next
                    If B%(P, I, 16) > 5 Then PR%(i0%) = I: i0% = i0% + 1
                End If
            Next

            If i0% = 0 Or I1 = -1 And B7%(P, J) <> 1 Then 8999
            If B7%(P, J) <> 1 Then B%(P, I1, 21) = 40 + J

            RN = Int(Rnd(1) * i0%)
            I1 = PR%(RN)

            8993 '
            I2 = J
            player$(J1) = B$(P, I1)
            B%(P, I1, 21) = 1
            B3%(P, I2) = I1
            B9%(P, B7%(P, I2)) = I1

            If B7%(P, I2) = 1 Or B7%(P, I2) = 10 Then B9%(P, 1) = 99: B9%(P, 0) = I2: B7%(P, I2) = 10

            D0%(P) = D0%(P) + 1
            X0%(P, 0, D0%(P)) = B3%(P, I2)
            X0%(P, 1, D0%(P)) = 11
            X0%(P, 2, D0%(P)) = (I2 * 10) + (D0%(P) - 9)

            W5 = P
            W6 = P
            VV(P) = I2
            VV1(P) = I2

            For xx = 22 To 25
                If B7%(P, I2) = B%(P, I1, xx) Then B%(P, I1, 15) = B%(P, I1, 33 + (xx - 22) * 2): B%(P, I1, 17) = B%(P, I1, 34 + (xx - 22) * 2): B%(P, I1, 19) = B%(P, I1, xx + 4): Exit For
            Next

            8995 '
            Call WINDEX
            Locate 15, 1
            Call PBP(M$(P) + " is sending in a pinch runner")
            PR% = 1

            Call DELAY
            Call HITTINGLINES '(L%(), P%(), P1%(), B7%(), B%(), VV(), VV1(), B3%(), B4%(), K9!(), WF!)

            If usingGfx = 1 Then
                Call DisplayBallField_Gfx(BC%, P, U%, D)
                Call MAINSCREEN_G(D, P, BC%, U%, MO)
                MS% = 1
            Else
                Call DisplayBallField(BC%, P, U%, D)
                Call MAINSCREEN(D, P, BC%, U%, MO)
                MS% = 1
            End If

            VV(P) = 1
            VV1(P) = 9

        End If

    End If

    8999 '

End Sub

'------------------------------
'   PITCHERNAME Subroutine
'------------------------------
' ...explanation...
Sub PITCHERNAME (W%, D)

    If W% = 1 Then
        player$(4) = P$(D, P1%(D))
    Else
        player$(4) = B$(D, B9%(D, W%))
    End If

End Sub

'------------------------------
'   PITCHOUT Subroutine
'------------------------------
' ...explanation...
Sub PITCHOUT (S4%, TGTBASE%, Q0)

    If S4% <> 5 And TGTBASE% = 2 Then
        Call d100(PJ)
        If PJ <= 8 Then Call PBP("...PITCH OUT!!!"): Q0 = Q0 - 200
    End If

End Sub

'------------------------------
'   PITDISP Subroutine
'------------------------------
' ...explanation...
Sub PITDISP (P9)

    Cls

    Color 14, 0
    Print "#";
    Color L%(P9, 11), L%(P9, 12): Print A$(P9);
    Color 14, 0
    Print " T  IP   H   G GS CG SV HR  BB  SO  W- L   ERA  H G%"

    For pIdx = 0 To 21:

        If P%(P9, pIdx, 15) <= 0 Then
            Color 2, 0

            If pIdx <= 9 Then
                Print Using "#"; pIdx;
            Else
                Print X$(pIdx - 10);
            End If

            Color 15, 0

            Locate , 3: Print P$(P9, pIdx);
            Locate , 18: Print B1$(P%(P9, pIdx, 0) + 2);

            Print Using " ### ### ### ## ## ## ## ### ### ##"; P%(P9, pIdx, 6); P%(P9, pIdx, 7); P%(P9, pIdx, 4); P%(P9, pIdx, 5); P%(P9, pIdx, 16); P%(P9, pIdx, 3); P%(P9, pIdx, 13); P%(P9, pIdx, 8); P%(P9, pIdx, 9); P%(P9, pIdx, 1);
            Print "-";
            Print Using "##"; P%(P9, pIdx, 2);

            Locate , 59: Print Using "##.## # ##"; P%(P9, pIdx, 10) / 100; P%(P9, pIdx, 18); P%(P9, pIdx, 12)

        End If

    Next pIdx

End Sub

'------------------------------
'   PITOFF Subroutine
'------------------------------
' ...explanation...
Sub PITOFF (P, I5, I6)

    P8%(P, I5, I6) = P8%(P, I5, I6) - 1
    P5%(P, I5, I6) = P5%(P, I5, I6) - 1

End Sub

'------------------------------
'   PITPLACEMENT Subroutine
'------------------------------
' ...explanation...
Sub PITPLACEMENT (P, X$)

    If usingGfx = 1 Then
        'Printing white on background
        _PrintMode _KeepBackground , imageScreen&
        Color 4294967295

    End If

    If P%(P, P1%(P), 0) < 0 Then
        If usingGfx = 1 Then
            PrintOnGfx 42, 25, X$, imageScreen&
        Else
            Locate 21, 64
            Print X$
        End If
    End If

    If P%(P, P1%(P), 0) > 0 Then
        If usingGfx = 1 Then
            PrintOnGfx 30, 25, X$, imageScreen&
        Else
            Locate 21, 51
            Print X$
        End If
    End If

    If usingGfx = 1 Then
        'Printing white on black
        Color 4294967295
        _PrintMode _FillBackground , imageScreen&
    End If

End Sub

'------------------------------
'   PITSTAM Subroutine
'------------------------------
' ...explanation...
Sub PITSTAM (P9)

    If P%(P9, P1%(P9), 4) = 0 Then
        S8%(P9, 0) = 3
    Else
        S8%(P9, 0) = Int(((P%(P9, P1%(P9), 8) + P%(P9, P1%(P9), 7)) / P%(P9, P1%(P9), 4)) + .5)
    End If

    If S8%(P9, 0) < 3 Then S8%(P9, 0) = 3
    S8%(P9, 1) = 3

    If P6%(P9) > 1 Then S8%(P9, 1) = 0

    If CGERA% > 0 Then
        If P6%(P9) > 1 Then
            S8%(P9, 1) = 1
        Else
            S8%(P9, 0) = S8%(P9, 0) + 1
        End If
    End If

    If INNING% <= 5 And S6%(P9, 0) - S6%(1 - P9, 0) > 0 Then P2%(P9) = P1%(P9)

End Sub

'------------------------------
'   PITSTRAT Subroutine
'------------------------------
' ...explanation...
Sub PITSTRAT (PPH, pz)

    A1 = S6%(D, 0) - S6%(P, 0)

    pz = 0

    ' if there are no middle relievers in the profile,
    ' and it's less than the 7th inning, then go back
    ' and find one the old fashioned way (which is?)

    If MG%(D, 60) = 999 Or INNING% > 7 Then

        'if no closers set up or no closing strategy defined, skip out
        If Not (INNING% >= 8 And MG%(D, 520) <> 999 And MG%(D, 90) <> 999 Or MG%(D, 581) <> 999) Then

            'if still needing middle relief
            If INNING% <= 7 Then
                GoTo 8115
            End If

            ' we have defined a closing/setup possibility
            ' identify the stratgey
            I2 = 0
            For pIdx = 582 To 587
                I2 = I2 + MG%(D, pIdx)
            Next
            I3 = Int(Rnd(1) * I2) + 1
            I2 = 0
            For pIdx = 582 To 587
                I2 = I2 + MG%(D, pIdx)
                If I3 <= I2 Then
                    SN% = pIdx

                    8111 SF% = 0

                    If A1 < 1 Then 8195

                    If A1 > 0 And A1 <= 2 Then SF% = 1
                    If S4% = 0 And A1 <= 2 Then SF% = 1
                    If S4% > 0 And S4% < 4 And A1 <= 3 Then SF% = 1
                    If S4% > 3 And S4% < 7 And A1 <= 4 Then SF% = 1
                    If S4% = 7 And A1 <= 5 Then SF% = 1
                    If S4% = 0 And O%(0) = 0 And A1 <= 3 Then SF% = 1
                    If B1!(P) <= 7 Then For pIdx = 0 To 2: I3 = I3 + B%(P, B3%(P, B1!(P) + pIdx), 0): Next
                    If B1!(P) = 8 Then For pIdx = 0 To 1: I3 = I3 + B%(P, B3%(P, B1!(P) + pIdx), 0): Next: I3 = I3 + B%(P, B3%(P, 1), 0)
                    If B1!(P) = 9 Then For pIdx = 1 To 2: I3 = I3 + B%(P, B3%(P, pIdx), 0): Next: I3 = I3 + B%(P, B3%(P, 9), 0)

                    8112 '
                    If I3 = 0 Then I3 = Int(Rnd(1) * 3) - 1
                    If I3 = 0 Then 8112

                    If INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 0 And SF% = 1 And (SN% = 582 Or SN% = 587) Then 8114
                    If INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 1 And SF% = 1 And (SN% = 582 Or SN% = 587) Then 8113
                    If INNING% >= 9 And SF% = 1 And (SN% = 582 Or SN% = 587) Then 8113

                    If INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 0 And A1 > 0 And SN% = 583 Then 8114
                    If INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 1 And A1 > 0 And SN% = 583 Then 8113
                    If INNING% >= 9 And A1 > 0 And SN% = 583 Then 8113

                    If INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 0 And A1 >= 0 And SN% = 584 Then 8114
                    If INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 1 And A1 >= 0 And SN% = 584 Then 8113
                    If INNING% >= 9 And A1 >= 0 And SN% = 584 Then 8113

                    If S8%(D, 0) <= P8%(D, P1%(D), 4) + P8%(D, P1%(D), 1) And S8%(D, 1) <= P8%(D, P1%(D), 2) And INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 0 And A1 > 0 And SN% = 585 Then 8114
                    If S8%(D, 0) <= P8%(D, P1%(D), 4) + P8%(D, P1%(D), 1) And S8%(D, 1) <= P8%(D, P1%(D), 2) And INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 1 And A1 > 0 And SN% = 585 Then 8113
                    If S8%(D, 0) <= P8%(D, P1%(D), 4) + P8%(D, P1%(D), 1) And S8%(D, 1) <= P8%(D, P1%(D), 2) And INNING% >= 9 And A1 > 0 And SN% = 585 Then 8113

                    If S8%(D, 0) <= P8%(D, P1%(D), 4) + P8%(D, P1%(D), 1) And S8%(D, 1) <= P8%(D, P1%(D), 2) And INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 0 And A1 >= 0 And SN% = 586 Then 8114
                    If S8%(D, 0) <= P8%(D, P1%(D), 4) + P8%(D, P1%(D), 1) And S8%(D, 1) <= P8%(D, P1%(D), 2) And INNING% = 8 And MG%(D, 588) = 8 And MG%(D, 589) = 1 And A1 >= 0 And SN% = 586 Then 8113
                    If S8%(D, 0) <= P8%(D, P1%(D), 4) + P8%(D, P1%(D), 1) And S8%(D, 1) <= P8%(D, P1%(D), 2) And INNING% >= 9 And A1 >= 0 And SN% = 586 Then 8113

                    Exit For

                End If
            Next

        End If

    End If

    GoTo 8195

    'strategy identified, now

    8114
    I2 = 0
    If I3 < 0 Then I1 = 81
    If I3 > 0 Then I1 = 84
    For pIdx = I1 To I1 + 2
        If MG%(D, pIdx) >= 0 And P%(D, MG%(D, pIdx), 15) = 0 Then I2 = I2 + MG%(D, pIdx + 10)
    Next

    I3 = Int(Rnd(1) * I2) + 1
    I2 = 0

    For pIdx = I1 To I1 + 2
        If MG%(D, pIdx) >= 0 And P%(D, MG%(D, pIdx), 15) = 0 Then I2 = I2 + MG%(D, pIdx + 10)
        If I3 <= I2 Then V0 = MG%(D, pIdx): MG%(D, pIdx) = -1: pIdx = V0: Call NEWPITCHER(pIdx, PPH, pz): SU%(D, 0) = -1: GoTo 8195
    Next
    'NO SETUP MAN FOUND
    'GOTO 8195

    8113
    I2 = 0
    If I3 < 0 Then I1 = 521
    If I3 > 0 Then I1 = 524

    For pIdx = I1 To I1 + 2
        If MG%(D, pIdx) >= 0 And P%(D, MG%(D, pIdx), 15) = 0 Then I2 = I2 + MG%(D, pIdx + 10)
    Next

    I3 = Int(Rnd(1) * I2) + 1
    I2 = 0

    For pIdx = I1 To I1 + 2
        If MG%(D, pIdx) >= 0 And P%(D, MG%(D, pIdx), 15) = 0 Then I2 = I2 + MG%(D, pIdx + 10)
        If I3 <= I2 Then V0 = MG%(D, pIdx): MG%(D, pIdx) = -1: pIdx = V0: Call NEWPITCHER(pIdx, PPH, pz): SU%(D, 1) = -1: GoTo 8195
    Next

    'NO CLOSER FOUND
    'GOTO 8195
    SU%(D, 0) = -1: SU%(D, 1) = -1

    8115 '
    I2 = 0

    For pIdx = 61 To 70
        If MG%(D, pIdx) >= 0 And P%(D, MG%(D, pIdx), 15) = 0 Then I2 = I2 + MG%(D, pIdx + 10)
    Next

    I3 = Int(Rnd(1) * I2) + 1
    I2 = 0

    For pIdx = 61 To 70
        If MG%(D, pIdx) >= 0 And P%(D, MG%(D, pIdx), 15) = 0 Then I2 = I2 + MG%(D, pIdx + 10)
        If I3 <= I2 Then V0 = MG%(D, pIdx): MG%(D, pIdx) = -1: pIdx = V0: Call NEWPITCHER(pIdx, PPH, pz): GoTo 8195
    Next

    'NO MIDDLE RELIEVER FOUND
    'GoTo 8195

    8195 '
End Sub

'------------------------------
'   PITSWAP Subroutine
'------------------------------
' ...explanation...
Sub PITSWAP (i)

    If i = 4 Then V = 3: Call SOMESTATS(V, P, F%, D): V = 2: Call SOMESTATS(V, P, F%, D): V = 1: Call SOMESTATS(V, P, F%, D)

    If i = 3 Then V = 2: Call SOMESTATS(V, P, F%, D): V = 1: Call SOMESTATS(V, P, F%, D)

    If i = 2 Then V = 2: Call SOMESTATS(V, P, F%, D): V = 1: Call SOMESTATS(V, P, F%, D)

End Sub

'------------------------------
'   PLAYERNAME Subroutine
'------------------------------
' ...explanation...
Sub PLAYERNAME (P)

    If B7%(P, B1!(P)) = 1 Then
        player$(0) = P$(P, P1%(P))
    Else
        player$(0) = B$(P, B3%(P, B1!(P)))
    End If

    For pIdx = 1 To 3

        If B0%(pIdx, 0) > 0 Then
            If B7%(P, B0%(pIdx, 0)) <> 1 Then
                player$(pIdx) = B$(P, B3%(P, B0%(pIdx, 0)))
            Else
                player$(pIdx) = P$(P, P1%(P))
            End If
        End If

    Next pIdx

End Sub

'------------------------------
'   PLYRHRT Subroutine
'------------------------------
' ...explanation...
Sub PLYRHRT (P, P9, W5, W6, BC%, U%, D, MO)

    ' *** Offensive Player Ejected/Injured ***
    If Not (U6 = 2 Or U6 = 1 And P = U9) Then

        Call PBP("You must replace " + player$(0) + " with a pinch-hitter")

    Else

        For pIdx = 0 To 22

            If B%(P, pIdx, 21) <= 0 And B$(P, pIdx) <> "XXX" Then

                If B7%(P, B1!(P)) = B%(P, pIdx, 22) Or B7%(P, B1!(P)) = B%(P, pIdx, 23) Or B7%(P, B1!(P)) = B%(P, pIdx, 24) Or B7%(P, B1!(P)) = B%(P, pIdx, 25) Then

                    Call PinchHitter(P, P9, W5, W6, pIdx)

                    If usingGfx = 1 Then
                        Call DisplayBallField_Gfx(BC%, P, U%, D)
                        Call MAINSCREEN_G(D, P, BC%, U%, MO)
                    Else
                        Call DisplayBallField(BC%, P, U%, D)
                        Call MAINSCREEN(D, P, BC%, U%, MO): MS% = 1
                    End If

                    Locate 15, 1

                    player$(0) = B$(P, B3%(P, B1!(P)))
                    If B7%(P, B1!(P)) = 1 Then player$(0) = P$(P, P1%(D))

                    Exit Sub 'GoTo 2849

                End If

            End If

        Next pIdx


        For pIdx = 0 To 22

            If B%(P, pIdx, 21) <= 0 And B$(P, pIdx) <> "XXX" Then

                Call PinchHitter(P, P9, W5, W6, pIdx)

                If usingGfx = 1 Then
                    Call DisplayBallField_Gfx(BC%, P, U%, D)
                    Call MAINSCREEN_G(D, P, BC%, U%, MO)
                Else
                    Call DisplayBallField(BC%, P, U%, D)
                    Call MAINSCREEN(D, P, BC%, U%, MO): MS% = 1
                End If

                Locate 15, 1

                player$(0) = B$(P, B3%(P, B1!(P)))
                If B7%(P, B1!(P)) = 1 Then player$(0) = P$(P, P1%(D))

                Exit Sub 'GoTo 2849

            End If
        Next pIdx

    End If
    2849 '

End Sub

'------------------------------
'   PinchHitter Subroutine
'------------------------------
Sub PinchHitter (P, P9, W5, W6, idx)

    2807 '
    Call PBP(player$(0) + " will be replaced by " + B$(P, idx))

    D0%(P) = D0%(P) + 1
    X0%(P, 0, D0%(P)) = idx
    X0%(P, 1, D0%(P)) = B7%(P, B1!(P))
    X0%(P, 2, D0%(P)) = (B1!(P) * 10) + (D0%(P) - 9)
    B%(P, idx, 21) = 1
    B3%(P, B1!(P)) = idx
    B9%(P, B7%(P, B1!(P))) = idx

    If B7%(P, B1!(P)) = 1 Or B7%(P, B1!(P)) = 10 Then
        B9%(P, 1) = 99
        B9%(P, 0) = B1!(P)
        B7%(P, B1!(P)) = 10
    End If

    P9 = P
    W5 = P9
    W6 = P9
    VV(P9) = B1!(P)
    VV1(P9) = B1!(P)

    Call HITTINGLINES '(L%(), P%(), P1%(), B7%(), B%(), VV(), VV1(), B3%(), B4%(), K9!(), WF!)

    VV(P9) = 1
    VV1(P9) = 9

End Sub

'------------------------------
'   PopUp_Lineup Subroutine
'------------------------------
' ...explanation...
Sub PopUp_Lineup ()

    If usingGfx = 1 Then Screen 0

    ' *** POPUP LINEUPS FOR TEAMS ***
    Call FRAMEOPTION(11, 1)

    Print A$(0); Tab(40); A$(1)

    For J = 0 To 1

        For X = 1 To 9:

            Locate X + 9, 10 + J * 26
            If B1!(J) = X Then Print "->";

            Locate , 12 + J * 26
            If B7%(J, X) = 1 Then

                Print B1$(P%(J, P1%(J), 0) + 2); Tab(14 + J * 26); Left$(P$(J, P1%(J)), 10); " P"; Tab(28 + J * 26);
                If P%(J, P1%(J), 11) <> 999 Then
                    Print " ."; Using "###"; P%(J, P1%(J), 11) '/ 1000
                Else
                    If P%(J, P1%(J), 20) = 0 Then
                        Print " .000"
                    Else
                        If P%(J, P1%(J), 20) = P%(J, P1%(J), 22) Then
                            Print "1.000"
                        Else
                            Print " ."; Using "###"; P%(J, P1%(J), 22) / P%(J, P1%(J), 20)
                        End If
                    End If
                End If

            Else
                Print B1$(B%(J, B3%(J, X), 0) + 2); Tab(14 + J * 26); Left$(B$(J, B3%(J, X)), 10); " "; C$(B7%(J, X)); Tab(28 + J * 26);

                If B%(J, B3%(J, X), 4) = 0 Then
                    Print " .000"
                Else
                    If B%(J, B3%(J, X), 6) = B%(J, B3%(J, X), 4) Then
                        Print "1.000"
                    Else
                        Print Using " .###"; B%(J, B3%(J, X), 6) / B%(J, B3%(J, X), 4)
                    End If
                End If
            End If

        Next

    Next

    Color 15, 0
    Locate 24, 1: Print "HIT ANY KEY TO CONTINUE";
    I$ = GetKeyPress$

End Sub

'------------------------------
'   PopUp_Batter Subroutine
'------------------------------
' ...explanation...
Sub PopUp_Batter (WK, M)

    If TS%(WK, 0) = 999 Then
        Locate 4, 56: Print "VS LHP  .000";
        If B%(WK, M, 42) <> 0 Then statPCT! = B%(WK, M, 43) / B%(WK, M, 42): Locate 4, 64: Print Using ".###"; statPCT!

        Locate 5, 56: Print "VS RHP  .000";
        If B%(WK, M, 49) <> 0 Then statPCT! = B%(WK, M, 50) / B%(WK, M, 49): Locate 5, 64: Print Using ".###"; statPCT!
    End If

    Locate 8, 6: Print "SEASON";
    Locate , 15

    If B%(WK, M, 4) = 0 Then
        Print ".---  .---"
    Else
        statPCT! = B%(WK, M, 6) / B%(WK, M, 4)
        statPCT2! = (B%(WK, M, 6) + B%(WK, M, 11)) / (B%(WK, M, 4) + B%(WK, M, 11))
        Print Using ".###  .### ### ### ### ### ## ## ## ### ### ### "; statPCT!; statPCT2!; B%(WK, M, 3); B%(WK, M, 4); B%(WK, M, 5); B%(WK, M, 6); B%(WK, M, 7); B%(WK, M, 8); B%(WK, M, 9); B%(WK, M, 10);
        Print Using "### ### ### ##"; B%(WK, M, 11); B%(WK, M, 12); B%(WK, M, 13); B%(WK, M, 14)
    End If

    Locate , 6: Print "LEAGUE";

    If B5%(WK, M, 0) = 0 Or B5%(WK, M, 1) = 0 Then
        Locate , 15: Print ".000";
    Else
        If B5%(WK, M, 0) = B5%(WK, M, 1) Then
            Locate , 14: Print "1.000";
        Else
            statPCT! = B5%(WK, M, 1) / B5%(WK, M, 0)
            Locate , 15: Print Using ".###"; statPCT!;
        End If
    End If

    If B5%(WK, M, 0) + B5%(WK, M, 7) = 0 Then
        Locate , 21: Print ".000";
    Else
        If B5%(WK, M, 1) + B5%(WK, M, 7) = B5%(WK, M, 0) + B5%(WK, M, 7) Then
            Locate , 20: Print "1.000";
        Else
            statPCT! = (B5%(WK, M, 1) + B5%(WK, M, 7)) / (B5%(WK, M, 0) + B5%(WK, M, 7))
            Locate , 21: Print Using ".###"; statPCT!;
        End If
    End If

    Locate , 26
    Print Using "### ### ### ### ## ## ## ### ### ### ### ## ## ##"; B5%(WK, M, 14); B5%(WK, M, 0); B5%(WK, M, 2); B5%(WK, M, 1); B5%(WK, M, 4); B5%(WK, M, 5); B5%(WK, M, 6); B5%(WK, M, 3); B5%(WK, M, 7); B5%(WK, M, 8); B5%(WK, M, 9); B5%(WK, M, 10); B5%(WK, M, 12); B5%(WK, M, 13)

    Locate , 6: Print "GAME";

    If B8%(WK, M, 0) = 0 Or B8%(WK, M, 1) = 0 Then
        Locate , 15: Print ".000";
    Else
        If B8%(WK, M, 0) = B8%(WK, M, 1) Then
            Locate , 14: Print "1.000";
        Else
            statPCT! = B8%(WK, M, 1) / B8%(WK, M, 0)
            Locate , 15: Print Using ".###"; statPCT!;
        End If
    End If

    If B8%(WK, M, 0) + B8%(WK, M, 7) = 0 Then
        Locate , 21: Print ".000";
    Else
        If B8%(WK, M, 1) + B8%(WK, M, 7) = B8%(WK, M, 0) + B8%(WK, M, 7) Then
            Locate , 20: Print "1.000";
        Else
            Locate , 21: Print Using ".###"; (B8%(WK, M, 1) + B8%(WK, M, 7)) / (B8%(WK, M, 0) + B8%(WK, M, 7));
        End If
    End If

    Locate , 26
    Print Using "### ### ### ### ## ## ## ### ### ### ### ## ## ##"; B8%(WK, M, 14); B8%(WK, M, 0); B8%(WK, M, 2); B8%(WK, M, 1); B8%(WK, M, 4); B8%(WK, M, 5); B8%(WK, M, 6); B8%(WK, M, 3); B8%(WK, M, 7); B8%(WK, M, 8); B8%(WK, M, 9); B8%(WK, M, 10); B8%(WK, M, 12); B8%(WK, M, 13)

End Sub

'------------------------------
'   PopUp_Pitcher Subroutine
'------------------------------
' ...explanation...
Sub PopUp_Pitcher (WK, M)

    Locate 14, 3
    Color L%(WK, 11), L%(WK, 12): Print " "; Chr$(201); String$(71, 205); Chr$(187); " "

    For X = 1 To 7: Locate , 3: Print " "; Chr$(186); String$(71, 32); Chr$(186); " ": Next

    Locate , 3: Print " "; Chr$(200); String$(71, 205); Chr$(188); " "

    If TS%(WK, 0) = 999 Then
        Locate 15, 56: Print "VS LHB  .000";
        If P%(WK, M, 51) <> 0 Then statPCT! = P%(WK, M, 52) / P%(WK, M, 51): Locate 15, 64: Print Using ".###"; statPCT!
        Locate 16, 56: Print "VS RHB  .000";
        If P%(WK, M, 58) <> 0 Then statPCT! = P%(WK, M, 59) / P%(WK, M, 58): Locate 16, 64: Print Using ".###"; statPCT!
    End If

    Locate 15, 6: Print "Stats for "; P$(WK, M)
    Locate , 6: Print "THROWS: "; B1$(P%(WK, M, 0) + 2); "    ";: Print Using "G/A%: ##     HOLD: #"; P%(WK, M, 12); P%(WK, M, 18)
    Locate , 3: Print " "; Chr$(204); String$(71, 205); Chr$(185); " "
    Locate , 6: Print "          W  L SV   ERA  G GS CG   IP    H  BB  SO   R  ER HR"

    Locate , 6: Print "SEASON   ";: Print Using "## ## ## ##.## ## ## ## ###   ### "; P%(WK, M, 1); P%(WK, M, 2); P%(WK, M, 3); P%(WK, M, 10) / 100; P%(WK, M, 4); P%(WK, M, 5); P%(WK, M, 16); P%(WK, M, 6); P%(WK, M, 7);
    Print Using "### ###         ##"; P%(WK, M, 8); P%(WK, M, 9); P%(WK, M, 13)

    Locate , 6: Print "LEAGUE   ";: Print Using "## ## ## "; P5%(WK, M, 6); P5%(WK, M, 7); P5%(WK, M, 12);

    If P5%(WK, M, 3) = 0 Or P5%(WK, M, 0) = 0 Then
        Print " 0.00";
    Else
        Print Using "##.##"; P5%(WK, M, 3) / (P5%(WK, M, 0) / 3) * 9;
    End If

    Print Using " ## ## ## "; P5%(WK, M, 8); P5%(WK, M, 9); P5%(WK, M, 10);

    If P5%(WK, M, 0) = 0 Then
        Print "  0.0";
    Else
        Print Using "###"; Int(P5%(WK, M, 0) / 3);
        Print ".";: Print Using "#"; P5%(WK, M, 0) - (Int(P5%(WK, M, 0) / 3) * 3);
    End If

    Print Using " ### ### ### ### ### ##"; P5%(WK, M, 1); P5%(WK, M, 4); P5%(WK, M, 5); P5%(WK, M, 2); P5%(WK, M, 3); P5%(WK, M, 14)
    Locate , 6: Print "GAME     ";: Print Using "## ## ## "; P8%(WK, M, 6); P8%(WK, M, 7); P8%(WK, M, 12);
    If P8%(WK, M, 3) = 0 Or P8%(WK, M, 0) = 0 Then
        Print " 0.00";
    Else
        Print Using "##.##"; P8%(WK, M, 3) / (P8%(WK, M, 0) / 3) * 9;
    End If

    Print Using " ## ## ## "; P8%(WK, M, 8); P8%(WK, M, 9); P8%(WK, M, 10);

    If P8%(WK, M, 0) = 0 Then
        Print "  0.0";
    Else
        Print Using "###"; Int(P8%(WK, M, 0) / 3);
        Print ".";: Print Using "#"; P8%(WK, M, 0) - (Int(P8%(WK, M, 0) / 3) * 3);
    End If

    Print Using " ### ### ### ### ### ##"; P8%(WK, M, 1); P8%(WK, M, 4); P8%(WK, M, 5); P8%(WK, M, 2); P8%(WK, M, 3); P8%(WK, M, 14)

End Sub

'------------------------------
'   POPUPSTATS Subroutine
'------------------------------
' ...explanation...
Sub POPUPSTATS ()

    If usingGfx = 1 Then Screen 0

    J = B3%(P, B1!(P))

    'Stats for Active Batter
    Locate 3, 3: Color L%(P, 11), L%(P, 12): Print " "; Chr$(201); String$(71, 205); Chr$(187); " "

    For X = 1 To 7:
        Locate , 3: Print " "; Chr$(186); String$(71, 32); Chr$(186); " "
    Next

    Locate , 3: Print " "; Chr$(200); String$(71, 205); Chr$(188); " "

    Locate 4, 6: Print "Stats for ";

    If B7%(P, B1!(P)) = 1 Then
        If P%(P, P1%(P), 11) <> 999 Then
            Print P$(P, P1%(P))
        Else
            Print P$(P, P1%(P)): Locate , 6: Print "BATS: "; B1$(P%(P, P1%(P), 0) + 2); "    ";: Print Using "G/A%: ##       BUNT: #       RUN: #"; 52; P%(P, P1%(P), 32); P%(P, P1%(P), 31):
        End If
    Else
        Print B$(P, J)
        Locate , 6: Print "BATS: "; B1$(B%(P, J, 0) + 2); "    ";: Print Using "G/A%: ##       BUNT: #       RUN: #"; B%(P, J, 18); B%(P, J, 30); B%(P, J, 16)
    End If

    510 '
    If B7%(P, B1!(P)) = 1 And TS%(P, 0) = 999 Then
        Locate 4, 56: Print "VS LHP  .000";
        If P%(P, P1%(P), 37) <> 0 Then statPCT! = P%(P, P1%(P), 38) / P%(P, P1%(P), 37): Locate 4, 64: Print Using ".###"; statPCT!

        Locate 5, 56: Print "VS RHP  .000";
        If P%(P, P1%(P), 44) <> 0 Then statPCT! = P%(P, P1%(P), 45) / P%(P, P1%(P), 44): Locate 5, 64: Print Using ".###"; statPCT!
    End If

    Locate 6, 3: Print " "; Chr$(204); String$(71, 205); Chr$(185); " "
    Locate , 6: Print "          AVG   OBP   G  AB   R   H 2B 3B HR RBI  BB  SO  SB CS HS LS"

    If B7%(P, B1!(P)) = 1 And P%(P, P1%(P), 11) <> 999 Then

        statPCT! = P%(P, P1%(P), 11) '/ 1000
        Locate , 6: Print "SEASON";: Locate , 15: Print Using ".###"; statPCT!

    Else

        If B7%(P, B1!(P)) <> 1 Then
            WK = P
            M = J
            Call PopUp_Batter(WK, M)
            GoTo 621
        Else

            Locate , 6: Print "SEASON";: Locate , 15

            If P%(P, P1%(P), 20) = 0 Then
                Print ".---  .---"
            Else
                PRINT USING ".###  .### ### ### ### ### ## "; P%(P, P1%(P), 22) / P%(P, P1%(P), 20); (P%(P, P1%(P), 22) + P%(P, P1%(P), 27)) / (P%(P, P1%(P), 27) + P%(P, P1%(P), 20)); P%(P, P1%(P), 19); P%(P, P1%(P), 20); P%(P, P1%(P), 21); P%(P, P1%(P), 22);  _
            P%(P, P1%(P), 23);
                Print Using "## ## ### ### ### ### ##"; P%(P, P1%(P), 24); P%(P, P1%(P), 25); P%(P, P1%(P), 26); P%(P, P1%(P), 27); P%(P, P1%(P), 28); P%(P, P1%(P), 29); P%(P, P1%(P), 30)
            End If
        End If
    End If

    Locate , 6: Print "LEAGUE";: J = P1%(P)
    If P5%(P, J, 23) = 0 Or P5%(P, J, 24) = 0 Then
        Locate , 15: Print ".000";
    Else
        If P5%(P, J, 23) = P5%(P, J, 24) Then
            Locate , 14: Print "1.000";
        Else
            statPCT! = P5%(P, J, 24) / P5%(P, J, 23)
            Locate , 15: Print Using ".###"; statPCT!;
        End If
    End If

    If P5%(P, J, 23) + P5%(P, J, 30) = 0 Then
        Locate , 21: Print ".000";
    Else
        If P5%(P, J, 24) + P5%(P, J, 30) = P5%(P, J, 23) + P5%(P, J, 30) Then
            Locate , 20: Print "1.000";
        Else
            statPCT! = (P5%(P, J, 24) + P5%(P, J, 30)) / (P5%(P, J, 23) + P5%(P, J, 30))
            Locate , 21: Print Using ".###"; statPCT!;
        End If
    End If

    Locate , 26: Print Using "### ### ### ### ## ## ## ### ### ### ### ## ## ##"; P5%(P, J, 8); P5%(P, J, 23); P5%(P, J, 25); P5%(P, J, 24); P5%(P, J, 27); P5%(P, J, 28); P5%(P, J, 29); P5%(P, J, 26); P5%(P, J, 30); P5%(P, J, 31); P5%(P, J, 32); P5%(P, J, 33); P5%(P, J, 35); P5%(P, J, 36)
    Locate , 6: Print "GAME";

    If P8%(P, J, 23) = 0 Or P8%(P, J, 24) = 0 Then
        Locate , 15: Print ".000";
    Else
        If P8%(P, J, 23) = P8%(P, J, 24) Then
            Locate , 14: Print "1.000";
        Else
            statPCT! = P8%(P, J, 24) / P8%(P, J, 23)
            Locate , 15: Print Using ".###"; statPCT!;
        End If
    End If

    If P8%(P, J, 23) + P8%(P, J, 30) = 0 Then
        Locate , 21: Print ".000";
    Else
        If P8%(P, J, 24) + P8%(P, J, 30) = P8%(P, J, 23) + P8%(P, J, 30) Then
            Locate , 20: Print "1.000";
        Else
            statPCT! = (P8%(P, J, 24) + P8%(P, J, 30)) / (P8%(P, J, 23) + P8%(P, J, 30))
            Locate , 21: Print Using ".###"; statPCT!;
        End If
    End If

    Locate , 26
    Print Using "### ### ### ### ## ## ## ### ### ### ### ## ## ##"; P8%(P, J, 8); P8%(P, J, 23); P8%(P, J, 25); P8%(P, J, 24); P8%(P, J, 27); P8%(P, J, 28); P8%(P, J, 29); P8%(P, J, 26); P8%(P, J, 30); P8%(P, J, 31); P8%(P, J, 32); P8%(P, J, 33); P8%(P, J, 35); P8%(P, J, 36)

    621 ''
    WK = D
    M = P1%(D)
    Call PopUp_Pitcher(WK, M)

    Locate 24, 1: Print "HIT ANY KEY TO CONTINUE";
    I$ = GetKeyPress$
    Color 7, 0

End Sub

'------------------------------
'   PUTOUT Subroutine
'------------------------------
' ...explanation...
Sub PUTOUT (i, D, P)

    If B7%(P, B0%(i - 1, 0)) = 1 Then
        I5 = P1%(P)
        I6 = 33
        Call INCPITOFF(P, I5, I6)
    Else
        I5 = B3%(P, B0%(i - 1, 0))
        I6 = 10
        Call INCBATOFF(P, I5, I6)
    End If

End Sub

'------------------------------
'   d100 Subroutine
'------------------------------
' ...explanation...
Sub d100 (randNumVar)

    randNumVar = Int(Rnd(1) * 100) + 1

End Sub

'------------------------------
'   RecordOut Subroutine
'------------------------------
' ...explanation...
Sub RecordOut (i, I3)

    Call PBP(player$(i) + " out @ " + H$(I3))

    B0%(i, 0) = 0
    B0%(i, 1) = 0: B0%(i, 2) = 0
    player$(i) = ""

End Sub

'------------------------------
'   RecordRun Subroutine
'------------------------------
' ...explanation...
Sub RecordRun (sah%, i, D, F%, PQ, S2%, W%, INFPOS%)

    If sah% = 0 Then Call PBP(player$(i) + " scores")
    sah% = 0

    I5 = B0%(i, 1)
    I6 = 2
    Call ADDPIT(D, I5, I6)

    If P1%(D) <> B0%(i, 1) Then I5 = P1%(D): I6 = 18: Call ADDPIT(D, I5, I6)

    If P6%(P) = 1 Then P8%(P, P1%(P), 20) = P8%(P, P1%(P), 20) + 1

    If B7%(P, B0%(i, 0)) = 1 Then
        I5 = P1%(P)
        I6 = 25
        Call INCPITOFF(P, I5, I6)
    Else
        I5 = B3%(P, B0%(i, 0))
        I6 = 2
        Call INCBATOFF(P, I5, I6)
    End If

    If F% = 1 Then
        If O%(0) = 2 Then
            PQ = 8
        Else
            Select Case W%
                Case Is <= 3:
                    If S2% <> 23 Or F% = 1 And W% = 5 And S2% <> 23 Then PQ = 8
                Case 4, 6
                    If INFPOS% = 2 Then PQ = 8
                Case Else
                    If S2% >= 4 And S2% <= 6 Then PQ = 8
            End Select

        End If
    End If

    4220 '
    If PQ <> 8 Then
        If B7%(P, B1!(P)) = 1 Then
            I5 = P1%(P)
            I6 = 26
            Call INCPITOFF(P, I5, I6)
        Else
            I5 = B3%(P, B1!(P))
            I6 = 3
            Call INCBATOFF(P, I5, I6)
        End If

        If F% = 1 Then PQ = 8

    End If

    inningScore%(P, INNING%) = inningScore%(P, INNING%) + 1
    S6%(P, 0) = S6%(P, 0) + 1

    If S6%(P, 0) - S6%(D, 0) = 1 Then
        P2%(D) = B0%(i, 1)
        P2%(P) = P1%(P)
        S1%(1) = -1
        S1%(0) = -1
    Else
        If S6%(P, 0) - S6%(D, 0) = 0 And S1%(D) <> -1 Then
            I5 = P1%(D)
            I6 = 19
            Call ADDPIT(D, I5, I6)
            S1%(D) = -1
        End If
    End If

    B0%(i, 0) = 0
    B0%(i, 1) = 0
    B0%(i, 2) = 0
    player$(i) = ""

    If inningScore%(P, INNING%) = 4 And Int(Rnd(1) * 100) + 1 <= 25 Then Call PBP("They're tearin' up the peapatch!")
    If INNING% >= 9 And P = 1 And S6%(P, 0) - S6%(D, 0) = 1 And F% = 0 And O%(1) < 3 And S2% <> 10 Then Call CHARGERUN(D, i)
    If INNING% >= 9 And P = 1 And S6%(P, 0) - S6%(D, 0) = 1 And S2% <> 10 Then A5%(0) = 0: A5%(1) = 0: A5%(2) = 0: A5%(3) = 0
End Sub

'------------------------------
'   OPTIONS Subroutine
'------------------------------
' ...explanation...
Sub OPTIONS ()

    Shared MO$()

    If usingGfx = 1 Then Cls: Screen 0
    
    If U6 = 2 Then
        U6 = 3
    Else
        If U6 = 1 Then
            If U9 = 1 Then
                U6 = 2
            Else
                If U9 = 0 Then
                    U6 = 1
                End If
            End If
        End If
    End If

    170 Cls

    Do
        171 '
        Color , 0: Locate 3, 1
        Color 14: Print "(1) ";
        Color 15: Print MO$(U6)
        Color 14: Print "(2) ";
        Color 15: Print Using "DISPLAY INTERVAL: #.# "; pbpDelay!
        Color 14: Print "<ENTER> ";
        Color 15: Print "RETURN TO GAME PLAY"

        Do
            183 Color 7, 0
            Locate 24, 1: Print "HIT ANY KEY TO CONTINUE";
            I$ = GetKeyPress$
            I = Val(I$)
            'The 0 is likely there to catch ENTER
            'But honestly will catch any alpha-key
            'Chr$(13) should specifically catch ENTER
        Loop Until I >= 0 And I <= 2

        If I <> 0 Then
            If I = 1 Then U6 = U6 + 1
            If U6 > 3 Then U6 = 0
            If I = 2 Then Locate 4, 22: Input pbpDelay!
        End If

    Loop Until I = 0

    184 If U6 <> 0 Then
        If U6 = 3 Then
            U6 = 2
        Else
            If U6 = 2 Then
                U6 = 1
                U9 = 1
            Else
                U6 = 1
                U9 = 0
            End If
        End If
    End If

    If usingGfx = 1 Then Screen imageScreen&

    185 '
End Sub

'------------------------------
'   CONVNAME Subroutine
'------------------------------
' ...explanation...
Sub CONVNAME (QQ, I)

    N$(I) = A$(I)

    For xx = 4 To 11
        If Mid$(N$(I), xx, 1) = " " Or Mid$(N$(I), xx, 1) = "." Then Mid$(N$(I), xx, 1) = "_"
    Next xx

    QQ = 8

    For xx = 11 To 4 Step -1
        If Mid$(N$(I), xx, 1) = "_" Then
            QQ = xx - 4
        Else
            Exit For
        End If

    Next xx

End Sub

'------------------------------
'   DISPBAVG Subroutine
'------------------------------
' ...explanation...
Sub DISPBAVG (D)

    If INNING% > 5 And S8%(D, 0) < P8%(D, P1%(D), 4) + P8%(D, P1%(D), 1) And S8%(D, 1) < P8%(D, P1%(D), 2) Then
        Locate 10, 17
        Color 30, 0: Print "-T-"
        Color 15, 0
    End If

    Locate 5, 1

    For X = 1 To 9

        Color 3, 0
        Locate X + 4, 22

        If B1!(P) = X Then Color 11, 0

        Locate , 22

        If B7%(P, X) = 1 Then

            Print B1$(P%(P, P1%(P), 0) + 2); Tab(25); Left$(P$(P, P1%(P)), 10); " P"; Tab(39);

            If P%(P, P1%(P), 11) <> 999 Then
                If P%(P, P1%(P), 11) = 0 Then
                    Print " .000"
                Else
                    Print " ."; Using "###"; P%(P, P1%(P), 11)
                End If

            Else

                If P%(P, P1%(P), 20) = 0 Then
                    Print " .000"
                Else
                    If P%(P, P1%(P), 20) = P%(P, P1%(P), 22) Then
                        Print "1.000"
                    Else
                        pAvg! = (P%(P, P1%(P), 22) / P%(P, P1%(P), 20)) * 1000
                        Print " ."; Using "###"; pAvg!
                    End If

                End If

            End If

        Else

            Print B1$(B%(P, B3%(P, X), 0) + 2); Tab(25); Left$(B$(P, B3%(P, X)), 10); " "; C$(B7%(P, X)); Tab(39);

            If B%(P, B3%(P, X), 4) = 0 Then
                Print " .000"
            Else
                If B%(P, B3%(P, X), 6) = B%(P, B3%(P, X), 4) Then
                    Print "1.000"
                Else
                    bAvg! = (B%(P, B3%(P, X), 6) / B%(P, B3%(P, X), 4)) * 1000
                    Print " ."; Using "###"; bAvg!
                End If
            End If

        End If

    Next

    Color 15, 0

End Sub

'------------------------------
'   GETSTATS Subroutine
'------------------------------
' ...explanation...
Sub GETSTATS ()

    For I = 0 To 1

        Color 15, 0
        Cls

        Call CONVNAME(QQ, I)

        statName$ = Mid$(N$(I), 4, QQ)
        statFile$ = statName$ + "." + Left$(N$(I), 2)

        FILENAME$ = diskPaths$(1) + statFile$

        If _FileExists(FILENAME$) Then
            Open diskPaths$(1) + statFile$ For Input As #1
            Input #1, A$: Input #1, W2%: Input #1, L2%
            For I1 = 0 To 22: Input #1, K$: Input #1, K%: Next I1
            For I1 = 0 To 21: Input #1, K$: Input #1, K%: Next I1
            For I1 = 0 To 22: For I2 = 0 To 21: Input #1, B5%(I, I1, I2): Next: Next
            For I1 = 0 To 21: For I2 = 0 To 41: Input #1, P5%(I, I1, I2): Next: Next
            Close #1
        End If

    Next I
    'If I = 0 Then I = 1: GoTo 100

End Sub

'------------------------------
'   HITTINGLINES Subroutine
'------------------------------
' ...explanation...
Sub HITTINGLINES '(L%(), P%(), P1%(), B7%(), B%(), VV(), VV1(), B3%(), B4%(), K9!(), WF!)

    Randomize Timer

    'CLS
    'PRINT "Please Wait..."
    'PRINT
    'PRINT "Calculating Pitcher/Batter Park Effects..."

    For I = 0 To 1

        I1 = 1 - I

        'CALCULATE BASE ON BALLS PERCENTAGES
        For I3 = VV(I) To VV1(I)

            I6! = L%(I1, 3) / 1000

            If P%(I1, P1%(I1), 6) * 3 * .94 + P%(I1, P1%(I1), 7) + P%(I1, P1%(I1), 8) = 0 Then
                I2! = 0
            Else
                I2! = P%(I1, P1%(I1), 8) / (P%(I1, P1%(I1), 6) * 3 * .94 + P%(I1, P1%(I1), 7) + P%(I1, P1%(I1), 8))
                'I2! = P%(I1, P1%(I1), 8) / (((P%(I1, P1%(I1), 6) * 3) * .94) + P%(I1, P1%(I1), 7) + P%(I1, P1%(I1), 8))
            End If

            II = B%(I, B3%(I, I3), 0)
            I4 = P%(I1, P1%(I1), 0)

            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And I4 = 1 Then TY% = 1
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And I4 = -1 Then TY% = 0
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And I4 = -1 Then TY% = 2
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And I4 = 1 Then TY% = 3
            If B7%(I, I3) <> 1 And II < 0 And I4 = 1 Then TY% = 1
            If B7%(I, I3) <> 1 And II < 0 And I4 = -1 Then TY% = 0
            If B7%(I, I3) <> 1 And II > 0 And I4 = -1 Then TY% = 2
            If B7%(I, I3) <> 1 And II > 0 And I4 = 1 Then TY% = 3
            If B7%(I, I3) <> 1 And II = 0 And I4 = 1 Then TY% = 1
            If B7%(I, I3) <> 1 And II = 0 And I4 = -1 Then TY% = 2
            If TY% = 0 Or TY% = 1 Then PY% = 0
            If TY% = 2 Or TY% = 3 Then PY% = 1
            If TY% = 0 Or TY% = 2 Then BY% = 0
            If TY% = 1 Or TY% = 3 Then BY% = 1

            If TS%(I1, 0) = 999 And P%(I1, P1%(I1), 89) <> 0 Then I6! = SA%(I1, TY% * 6 + 3) / 1000: I2! = P%(I1, P1%(I1), 56 + PY% * 7) * .9 / (P%(I1, P1%(I1), 51 + PY% * 7) + P%(I1, P1%(I1), 56 + PY% * 7) * .9)

            If B7%(I, I3) = 1 Then
                If P%(I, P1%(I), 11) <> 999 Then
                    I7! = .037
                Else
                    If (P%(I, P1%(I), 27) + P%(I, P1%(I), 20) = 0) Then
                        I7! = 0
                    Else
                        If TS%(I, 0) = 999 Then
                            If P%(I, P1%(I), 37 + BY% * 7) + P%(I, P1%(I), 42 + BY% * 7) = 0 Then
                                I7! = 0
                            Else
                                I7! = P%(I, P1%(I), 42 + BY% * 7) * .9 / (P%(I, P1%(I), 42 + BY% * 7) * .9 + P%(I, P1%(I), 37 + BY% * 7))
                            End If
                        Else
                            I7! = P%(I, P1%(I), 27) / (P%(I, P1%(I), 27) + P%(I, P1%(I), 20))
                        End If
                    End If
                End If
            Else
                If B%(I, B3%(I, I3), 4) + B%(I, B3%(I, I3), 11) = 0 Then
                    I7! = 0
                Else
                    If TS%(I, 0) = 999 Then
                        If B%(I, B3%(I, I3), 47 + BY% * 7) + B%(I, B3%(I, I3), 42 + BY% * 7) = 0 Then
                            I7! = 0
                        Else
                            If B%(I, B3%(I, I3), 80) <> 0 Then
                                I7! = B%(I, B3%(I, I3), 47 + BY% * 7) * .9 / (B%(I, B3%(I, I3), 42 + BY% * 7) + B%(I, B3%(I, I3), 47 + BY% * 7) * .9)
                            End If
                        End If
                    Else
                        I7! = B%(I, B3%(I, I3), 11) / (B%(I, B3%(I, I3), 4) + B%(I, B3%(I, I3), 11))
                    End If
                End If
            End If

            223 '
            Call NORMALIZE(I7!, I2!, I6!, K8!)
            B4%(I, 5, I3) = K8!

        Next I3

        ' CALCULATE STRIKEOUT PERCENTAGES
        For I3 = VV(I) To VV1(I)

            If P%(I1, P1%(I1), 6) = 0 Then
                I2! = 0
            Else
                I2! = P%(I1, P1%(I1), 9) / ((P%(I1, P1%(I1), 6) * 3) * .94)
            End If

            I6! = L%(I1, 2) / 1000

            II = B%(I, B3%(I, I3), 0)
            I4 = P%(I1, P1%(I1), 0)
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And I4 = 1 Then TY% = 1
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And I4 = -1 Then TY% = 0
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And I4 = -1 Then TY% = 2
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And I4 = 1 Then TY% = 3
            If B7%(I, I3) <> 1 And II < 0 And I4 = 1 Then TY% = 1
            If B7%(I, I3) <> 1 And II < 0 And I4 = -1 Then TY% = 0
            If B7%(I, I3) <> 1 And II > 0 And I4 = -1 Then TY% = 2
            If B7%(I, I3) <> 1 And II > 0 And I4 = 1 Then TY% = 3
            If B7%(I, I3) <> 1 And II = 0 And I4 = 1 Then TY% = 1
            If B7%(I, I3) <> 1 And II = 0 And I4 = -1 Then TY% = 2
            If TY% = 0 Or TY% = 1 Then PY% = 0
            If TY% = 2 Or TY% = 3 Then PY% = 1
            If TY% = 0 Or TY% = 2 Then BY% = 0
            If TY% = 1 Or TY% = 3 Then BY% = 1

            If TS%(I1, 0) = 999 And P%(I1, P1%(I1), 89) <> 0 Then
                If P%(I1, P1%(I1), 51 + PY% * 7) - P%(I1, P1%(I1), 52 + PY% * 7) = 0 Then
                    I2! = 0
                Else
                    I2! = P%(I1, P1%(I1), 57 + PY% * 7) / (P%(I1, P1%(I1), 51 + PY% * 7) - P%(I1, P1%(I1), 52 + PY% * 7))
                    I6! = SA%(I1, TY% * 6 + 2) / 1000
                End If
            End If

            224 '
            If B7%(I, I3) = 1 Then
                If P%(I, P1%(I), 11) <> 999 Then
                    I7! = .42
                Else
                    If P%(I, P1%(I), 20) - P%(I, P1%(I), 22) = 0 Then
                        I7! = 0
                    Else
                        If TS%(I, 0) = 999 Then
                            If P%(I, P1%(I), 37 + BY% * 7) - P%(I, P1%(I), 38 + BY% * 7) = 0 Then
                                I7! = 0
                            Else
                                I7! = P%(I, P1%(I), 43 + BY% * 7) / (P%(I, P1%(I), 37 + BY% * 7) - P%(I, P1%(I), 38 + BY% * 7))
                            End If
                        Else
                            If B7%(I, I3) = 1 Then
                                I7! = P%(I, P1%(I), 28) / (P%(I, P1%(I), 20) - P%(I, P1%(I), 22))
                            End If
                        End If
                    End If
                End If
            Else
                If B%(I, B3%(I, I3), 4) = 0 Or B%(I, B3%(I, I3), 4) - B%(I, B3%(I, I3), 6) = 0 Then
                    I7! = 0
                Else
                    If TS%(I, 0) = 999 Then
                        If B%(I, B3%(I, I3), 80) <> 0 Then
                            If B%(I, B3%(I, I3), 42 + BY% * 7) - B%(I, B3%(I, I3), 43 + BY% * 7) = 0 Then
                                I7! = 0
                            Else
                                I7! = B%(I, B3%(I, I3), 48 + BY% * 7) / (B%(I, B3%(I, I3), 42 + BY% * 7) - B%(I, B3%(I, I3), 43 + BY% * 7))
                            End If
                        End If
                    Else
                        I7! = B%(I, B3%(I, I3), 12) / (B%(I, B3%(I, I3), 4) - B%(I, B3%(I, I3), 6))
                    End If
                End If
            End If

            'IF I7!>=1 THEN I7%=.8
            Call NORMALIZE(I7!, I2!, I6!, K8!)
            B4%(I, 4, I3) = K8!

        Next I3

        ' CALCULATE THE BATTING AVERAGE
        For I3 = VV(I) To VV1(I)

            I2! = L%(I1, 1) / 1000
            I6! = P%(I1, P1%(I1), 14) / 1000

            If P%(I1, P1%(I1), 6) + P%(I1, P1%(I1), 7) = 0 Then
                I7! = 0
            Else
                I7! = P%(I1, P1%(I1), 7) / (((P%(I1, P1%(I1), 6) * 3) * .94) + P%(I1, P1%(I1), 7))
            End If

            Call NORMALIZE(I7!, I2!, I6!, K8!)
            i9! = K8! / 1000
            II = B%(I, B3%(I, I3), 0)
            I4 = P%(I1, P1%(I1), 0)
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And I4 = 1 Then TY% = 1
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And I4 = -1 Then TY% = 0
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And I4 = -1 Then TY% = 2
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And I4 = 1 Then TY% = 3
            If B7%(I, I3) <> 1 And II < 0 And I4 = 1 Then TY% = 1
            If B7%(I, I3) <> 1 And II < 0 And I4 = -1 Then TY% = 0
            If B7%(I, I3) <> 1 And II > 0 And I4 = -1 Then TY% = 2
            If B7%(I, I3) <> 1 And II > 0 And I4 = 1 Then TY% = 3
            If B7%(I, I3) <> 1 And II = 0 And I4 = 1 Then TY% = 1
            If B7%(I, I3) <> 1 And II = 0 And I4 = -1 Then TY% = 2
            If TY% = 0 Or TY% = 1 Then PY% = 0
            If TY% = 2 Or TY% = 3 Then PY% = 1
            If TY% = 0 Or TY% = 2 Then BY% = 0
            If TY% = 1 Or TY% = 3 Then BY% = 1

            If TS%(I1, 0) = 999 And P%(I1, P1%(I1), 89) <> 0 Then
                I6! = P%(I1, P1%(I1), TY% * 6 + 65) / 1000

                If P%(I1, P1%(I1), 51 + PY% * 7) = 0 Then
                    I7! = 0
                Else
                    I7! = P%(I1, P1%(I1), 52 + PY% * 7) / P%(I1, P1%(I1), 51 + PY% * 7)
                End If

            End If

            225 '
            If TS%(I1, 0) = 999 And P%(I1, P1%(I1), 89) <> 0 Then I2! = SA%(I1, TY% * 6 + 1) / 1000
            If TS%(I1, 0) = 999 And P%(I1, P1%(I1), 89) <> 0 Then Call NORMALIZE(I7!, I2!, I6!, K8!)
            If TS%(I1, 0) = 999 And P%(I1, P1%(I1), 89) <> 0 Then i9! = K8! / 1000

            If B7%(I, I3) = 1 And P%(I, P1%(I), 11) <> 999 Then

                I7! = P%(I, P1%(I), 11) / 1000: I6! = P%(I, P1%(I), 14) / 1000

            Else

                If B7%(I, I3) = 1 And P%(I, P1%(I), 20) = 0 Then
                    I7! = 0
                Else

                    If B7%(I, I3) = 1 And TS%(I, 0) = 999 Then
                        If P%(I, P1%(I), 37 + BY% * 7) = 0 Then
                            I7! = 0
                        Else
                            I7! = P%(I, P1%(I), 38 + BY% * 7) / P%(I, P1%(I), 37 + BY% * 7)
                        End If
                    Else
                        If B7%(I, I3) = 1 Then I7! = P%(I, P1%(I), 22) / P%(I, P1%(I), 20)
                    End If

                End If

                If B7%(I, I3) = 1 And TS%(I, 0) = 999 Then

                    I6! = P%(I, P1%(I), TY% * 6 + 65) / 1000
                Else

                    If B7%(I, I3) = 1 Then
                        I6! = P%(I, P1%(I), 14) / 1000
                    Else
                        If B%(I, B3%(I, I3), 4) = 0 Then
                            I7! = 0
                        Else

                            If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) <> 0 Then
                                If B%(I, B3%(I, I3), 42 + BY% * 7) = 0 Then
                                    I7! = 0
                                Else
                                    I7! = B%(I, B3%(I, I3), 43 + BY% * 7) / B%(I, B3%(I, I3), 42 + BY% * 7)
                                End If
                            Else
                                I7! = B%(I, B3%(I, I3), 6) / B%(I, B3%(I, I3), 4)
                            End If

                        End If

                        I6! = B%(I, B3%(I, I3), 20) / 1000
                        If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) <> 0 Then I6! = B%(I, B3%(I, I3), 56 + TY% * 6) / 1000

                    End If

                End If

            End If

            228 '
            I2! = L%(I, 1) / 1000
            If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) <> 0 Then I2! = SA%(I, TY% * 6 + 1) / 1000
            Call NORMALIZE(I7!, I2!, I6!, K8!)

            I7! = K8! / 1000
            I6! = L%(I, 1) / 1000

            If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) <> 0 Then I6! = SA%(I, TY% * 6 + 1) / 1000

            I2! = i9!
            Call NORMALIZE(I7!, I2!, I6!, K8!)

            B4%(I, 0, I3) = K8!

        Next I3

        ' CALCULATE THE EXTRA BASE HITS RATIOS
        For I3 = VV(I) To VV1(I)

            II = B%(I, B3%(I, I3), 0)
            I4 = P%(I1, P1%(I1), 0)

            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And I4 = 1 Then TY% = 1
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And I4 = -1 Then TY% = 0
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And I4 = -1 Then TY% = 2
            If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And I4 = 1 Then TY% = 3
            If B7%(I, I3) <> 1 And II < 0 And I4 = 1 Then TY% = 1
            If B7%(I, I3) <> 1 And II < 0 And I4 = -1 Then TY% = 0
            If B7%(I, I3) <> 1 And II > 0 And I4 = -1 Then TY% = 2
            If B7%(I, I3) <> 1 And II > 0 And I4 = 1 Then TY% = 3
            If B7%(I, I3) <> 1 And II = 0 And I4 = 1 Then TY% = 1
            If B7%(I, I3) <> 1 And II = 0 And I4 = -1 Then TY% = 2

            If TY% = 0 Or TY% = 1 Then PY% = 0
            If TY% = 2 Or TY% = 3 Then PY% = 1
            If TY% = 0 Or TY% = 2 Then BY% = 0
            If TY% = 1 Or TY% = 3 Then BY% = 1

            If B7%(I, I3) = 1 And P%(I, P1%(I), 11) <> 999 Then
                B4%(I, 1, I3) = (130 * (i9! * 1000)) / L%(I1, 1)
                B4%(I, 2, I3) = (19 * (i9! * 1000)) / L%(I1, 1)
                B4%(I, 3, I3) = 37
            Else

                E2! = (i9! * 1000) / L%(I1, 1)

                If TS%(I1, 0) = 999 Then E2! = (i9! * 1000) / SA%(I1, TY% * 6 + 1)

                If B7%(I, I3) = 1 And P%(I, P1%(I), 22) = 0 Then B4%(I, 1, I3) = 0: B4%(I, 2, I3) = 0: B4%(I, 3, I3) = 0: GoTo 235
                If B7%(I, I3) <> 1 And B%(I, B3%(I, I3), 6) = 0 Then B4%(I, 1, I3) = 0: B4%(I, 2, I3) = 0: B4%(I, 3, I3) = 0: GoTo 235
                If B7%(I, I3) = 1 And TS%(I, 0) = 999 And P%(I, P1%(I), 38 + BY% * 7) = 0 Then B4%(I, 1, I3) = 0: B4%(I, 2, I3) = 0: B4%(I, 3, I3) = 0: GoTo 235
                If B7%(I, I3) = 1 And TS%(I, 0) = 999 Then B4%(I, 1, I3) = Int((P%(I, P1%(I), 39 + BY% * 7) / P%(I, P1%(I), 38 + BY% * 7)) * 1000) * E2!: ' doubles times  * .95
                If B7%(I, I3) = 1 And TS%(I, 0) = 999 Then B4%(I, 2, I3) = Int((P%(I, P1%(I), 40 + BY% * 7) / P%(I, P1%(I), 38 + BY% * 7)) * 1000) * E2!
                If B7%(I, I3) = 1 And TS%(I, 0) = 999 Then B4%(I, 3, I3) = Int((P%(I, P1%(I), 41 + BY% * 7) / P%(I, P1%(I), 38 + BY% * 7)) * 1000): GoTo 235
                If B7%(I, I3) = 1 Then B4%(I, 1, I3) = Int((P%(I, P1%(I), 23) / P%(I, P1%(I), 22)) * 1000) * E2!: ' doubles times  * .95
                If B7%(I, I3) = 1 Then B4%(I, 2, I3) = Int((P%(I, P1%(I), 24) / P%(I, P1%(I), 22)) * 1000) * E2!
                If B7%(I, I3) = 1 Then B4%(I, 3, I3) = Int((P%(I, P1%(I), 25) / P%(I, P1%(I), 22)) * 1000): GoTo 235

                If B%(I, B3%(I, I3), 6) = 0 Then B4%(I, 1, I3) = 0: B4%(I, 2, I3) = 0: B4%(I, 3, I3) = 0: GoTo 235

                If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) <> 0 And B%(I, B3%(I, I3), 43 + BY% * 7) = 0 Then B4%(I, 1, I3) = 0: B4%(I, 2, I3) = 0: B4%(I, 3, I3) = 0: GoTo 235
                If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) <> 0 Then B4%(I, 1, I3) = Int((B%(I, B3%(I, I3), 44 + BY% * 7) / B%(I, B3%(I, I3), 43 + BY% * 7)) * 1000) * E2!: 'see note on pitchers * .95
                If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) <> 0 Then B4%(I, 2, I3) = Int((B%(I, B3%(I, I3), 45 + BY% * 7) / B%(I, B3%(I, I3), 43 + BY% * 7)) * 1000) * E2!
                If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) <> 0 Then B4%(I, 3, I3) = Int((B%(I, B3%(I, I3), 46 + BY% * 7) / B%(I, B3%(I, I3), 43 + BY% * 7)) * 1000): GoTo 235

                B4%(I, 1, I3) = Int((B%(I, B3%(I, I3), 7) / B%(I, B3%(I, I3), 6)) * 1000) * E2!: 'see note on pitchers * .95
                B4%(I, 2, I3) = Int((B%(I, B3%(I, I3), 8) / B%(I, B3%(I, I3), 6)) * 1000) * E2!
                B4%(I, 3, I3) = Int((B%(I, B3%(I, I3), 9) / B%(I, B3%(I, I3), 6)) * 1000)

            End If

            235 '
            I6! = L%(I1, 4) / 1000
            I7! = B4%(I, 3, I3) / 1000
            I2! = 0

            If P%(I1, P1%(I1), 7) <> 0 Then I2! = P%(I1, P1%(I1), 13) / P%(I1, P1%(I1), 7)
            If TS%(I1, 0) = 999 And P%(I1, P1%(I1), 89) <> 0 Then I6! = SA%(I1, TY% * 6 + 4) / 1000
            If TS%(I1, 0) = 999 And P%(I1, P1%(I1), 89) <> 0 And P%(I1, P1%(I1), 52 + PY% * 7) <> 0 Then I2! = P%(I1, P1%(I1), 55 + PY% * 7) / P%(I1, P1%(I1), 52 + PY% * 7)
            Call NORMALIZE(I7!, I2!, I6!, K8!)

            B4%(I, 3, I3) = K8!

        Next I3

        ' ADJUST LEFTY/RIGHTY THE OLD WAY
        I4 = P%(I1, P1%(I1), 0)

        For I3 = VV(I) To VV1(I)

            If TS%(I, 0) = 999 And B%(I, B3%(I, I3), 80) = 0 Then

                I2 = B%(I, B3%(I, I3), 0)

                If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And P%(I1, P1%(I1), 0) = 1 Then A = 1.04: A1 = .88: Call LRADJ(A!, A1!)
                If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = -1 And P%(I1, P1%(I1), 0) = -1 Then A = .93: A1 = 1.16: Call LRADJ(A!, A1!)
                If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And P%(I1, P1%(I1), 0) = -1 Then A = 1.02: A1 = .98: Call LRADJ(A!, A1!)
                If B7%(I, I3) = 1 And P%(I, P1%(I), 0) = 1 And P%(I1, P1%(I1), 0) = 1 Then A = .97: A1 = 1.1: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = -2 And I4 = 1 Then A = 1.04: A1 = .96: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = -2 And I4 = -1 Then A = .78: A1 = 1.22: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = 2 And I4 = 1 Then A = .78: A1 = 1.22: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = 2 And I4 = -1 Then A = 1.04: A1 = .96: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = -1 And I4 = -1 Then A = .93: A1 = 1.16: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = -1 And I4 = 1 Then A = 1.04: A1 = .88: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = 1 And I4 = 1 Then A = .97: A1 = 1.1: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = 1 And I4 = -1 Then A = 1.02: A1 = .98: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = 0 And I4 = -1 Then A = 1.01: A1 = .86: Call LRADJ(A!, A1!)
                If B7%(I, I3) <> 1 And I2 = 0 And I4 = 1 Then A = .99: A1 = .93: Call LRADJ(A!, A1!)

            End If

            B4%(I, 6, I3) = B4%(I, 3, I3)
            B4%(I, 7, I3) = B4%(I, 3, I3)

        Next I3

        ' ADJUST AVERAGES FOR THE HOME TEAM
        For I3 = VV(I) To VV1(I)
            If I = 1 Then B4%(I, 0, I3) = B4%(I, 0, I3) + 5
            If I <> 1 Then B4%(I, 0, I3) = B4%(I, 0, I3) - 5
        Next I3

        ' CALCULATE THE HOME PARK FACTORS
        If N <> 2 Then

            For I2 = VV(I) To VV1(I)
                If I = 1 Then
                    B4%(I, 1, I2) = Int(B4%(I, 1, I2) * (L%(I, 6) / 100) + .5)
                    B4%(I, 2, I2) = Int(B4%(I, 2, I2) * (L%(I, 7) / 100) + .5)
                Else
                    'I <> 1
                    B4%(I, 1, I2) = Int(B4%(I, 1, I2) * (L%(I1, 6) / 100) * ((200 - L%(I, 6)) / 100) + .5)
                    B4%(I, 2, I2) = Int(B4%(I, 2, I2) * (L%(I1, 7) / 100) * ((200 - L%(I, 7)) / 100) + .5)
                End If

                If K9!(I) > 1000 Then I3! = 100: I6! = Int(K9!(I) / 1000) * WF!: I7! = (K9!(I) - Int((K9!(I) / 1000)) * 1000) * WF!
                If K9!(I1) > 1000 Then I4! = 100: K8! = Int(K9!(I1) / 1000) * WF!: i9! = (K9!(I1) - Int((K9!(I1) / 1000)) * 1000) * WF!

                If K9!(I) < 1000 Then I3! = K9!(I) * WF!: I6! = I3!: I7! = I3!
                If K9!(I1) < 1000 Then I4! = K9!(I1) * WF!: K8! = I4!: i9! = I4!

                If I = 1 Then
                    B4%(I, 3, I2) = Int((B4%(I, 3, I2) * (I3! / 100)) + .5)
                    B4%(I, 6, I2) = Int((B4%(I, 6, I2) * (I6! / 100)) + .5)
                    B4%(I, 7, I2) = Int((B4%(I, 7, I2) * (I7! / 100)) + .5)
                Else
                    'I <> 1
                    B4%(I, 3, I2) = Int((B4%(I, 3, I2) * (I4! / 100) * ((200 - I3!) / 100)) + .5)
                    B4%(I, 6, I2) = Int((B4%(I, 6, I2) * (K8! / 100) * ((200 - I6!) / 100)) + .5)
                    B4%(I, 7, I2) = Int((B4%(I, 7, I2) * (i9! / 100) * ((200 - I7!) / 100)) + .5)
                End If

            Next I2

        Else
            Exit For
        End If

    Next I

End Sub

'------------------------------
'   LRADJ Subroutine
'------------------------------
' ...explanation...
Sub LRADJ (A!, A1!)

    For I6 = 0 To 3
        B4%(I, I6, I3) = B4%(I, I6, I3) * A!
    Next I6

    B4%(I, 5, I3) = B4%(I, 5, I3) * A! ' NEWLY ADDED
    B4%(I, 4, I3) = B4%(I, 4, I3) * A1!

End Sub

'------------------------------
'   NORMALIZE Subroutine
'------------------------------
' ...explanation...
Sub NORMALIZE (I7!, I2!, I6!, K8!)

    I0! = (I7! * I2! * (1 - I6!))

    If (I0! + ((1 - I7!) * (1 - I2!) * I6!)) = 0 Then
        K8! = 0
    Else
        K8! = I0! / (I0! + ((1 - I7!) * (1 - I2!) * I6!))
    End If

    K8! = Int((K8! * 1000) + .0005)

End Sub

'------------------------------
'   BASEONBALLS Subroutine
'------------------------------
' ...explanation...
Sub BASEONBALLS (S2%, D2, D, P)

    S2% = 2

    Call WINDEX

    Call d100(BV)
    Call d100(RN)

    If D2 = 2 Then

        If BV <= 50 Then
            Call PBP(player$(0) + " is walked intentionally...")
        Else
            Call PBP(player$(0) + " is given a purpose pass...")
        End If

        S8%(D, 0) = S8%(D, 0) + 1

    Else

        If RN <= 30 Then Call PBP("Full count...")

        Call DELIVERY(D)

        Call GETRPBP(80, 780, Y$, D)
        Call STRIPRPBP(80, 780, Y$, D)
        Call PBP(Y$)

        Call GETRPBP(30, 860, Y$, D)
        Call STRIPRPBP(30, 860, Y$, D)
        Call PBP(Y$)

    End If

    Call d100(RN)

    '-- Where does s4 get a value???
    '-- There is an S4 variable, but
    '--     it's passed as a parameter to
    '--     any routines that need it
    '-- From context of original source,
    '--     it can have a value of 0 to 7

    '-- is s4 the # of "BALLS"?
    '-- theny why look for it to get as high as 7?

    '-- is it a SUM of STRIKES + BALLS?
    '-- it would never get to 7
    If s4% = 7 And RN <= 30 Then Call PBP("that forces a run in")

    RN = Int(Rnd(1) * 4) + 1

    '-- here, if s4 is between 4 and 6, bases are loaded
    '-- in context, this is obviously AFTER the walk
    If s4% > 3 And s4% < 7 Then
        Select Case RN
            Case 1: Call PBP("and the bases are loaded!")
            Case 2: Call PBP("and the sacks are jammed!")
            Case 3: Call PBP("and the bases are full!")
            Case 4: Call PBP("and that loads them up!")
        End Select
    End If

    I5 = P1%(D)
    I6 = 4
    Call ADDPIT(D, I5, I6)

    If B7%(P, B1!(P)) = 1 Then
        I5 = P1%(P)
        I6 = 30
        Call INCPITOFF(P, I5, I6)
    Else
        I5 = B3%(P, B1!(P))
        I6 = 7
        Call INCBATOFF(P, I5, I6)
    End If

End Sub

'------------------------------
'   HITBYPITCH Subroutine
'------------------------------
' ...explanation...
Sub HITBYPITCH (S2%, D)

    S2% = 1
    Call WINDEX
    Call DELIVERY(D)

    Call GETRPBP(20, 720, Y$, D)
    Call STRIPRPBP(20, 720, Y$, D)
    Call PBP(Y$)

    Call GETRPBP(11, 740, Y$, D)
    Call STRIPRPBP(11, 740, Y$, D)
    Call PBP(Y$)

    Call GETRPBP(20, 760, Y$, D)
    Call STRIPRPBP(20, 760, Y$, D)
    Call PBP(Y$)

    Call d100(RN)
    If RN <= 50 And s4% = 7 Then Call PBP("tough way to get an RBI")

End Sub

'------------------------------
'   WILDPITCH Subroutine
'------------------------------
' ...explanation...
Sub WILDPITCH (S2%, D)

    S2% = 6
    ruleAsWild = 0

    Call d100(RN)

    Select Case RN
        Case 1 To 16:
            Call PBP("and it gets away from " + B$(D, B9%(D, 2)))
            ruleAsWild = 1
        Case 17 To 32:
            Call PBP("pitch is WAY high, and " + B$(D, B9%(D, 2)) + " can't get it")
            ruleAsWild = 1
        Case 33 To 48:
            Call PBP("It's in the dirt")
            Call PBP("The runners move up 90 ft.")
            ruleAsWild = 1
        Case 49 To 64:
            Call PBP("It bounces in front of the plate")
            Call PBP("it's past the catcher")
            Call PBP("the runners advance")
            ruleAsWild = 1
        Case 65 To 80:
            Call PBP("it's over " + B$(D, B9%(D, 2)) + "'s head")

            '-- This was originally written as:
            '   If RN > 67 Then
            '-- This would clearly work by adding
            '--     the "wild pitch" text to the above.
            '-- But then it's clear that some numbers
            '--     were meant to not append that text.
            '-- For now,I've chosen to remove the overlap
            '-- My working theory is the Case 67+ below
            '--     for crediting the pitch may have been
            '--     duplicated but not fixed
        Case 81 To 100:
            Call PBP("wild pitch by " + P$(D, P1%(D)))
    End Select

    If ruleAsWild = 1 Then
        Call d100(RN)
        Select Case RN
            Case 1 To 33: F$ = "It's ruled a wild pitch"
            Case 34 To 66: F$ = "score it a wild pitch"
            Case 67 To 100: F$ = "credit " + P$(D, P1%(D)) + " with a wild pitch"
        End Select

        Call PBP(F$)
    End If

End Sub


'------------------------------
'   RELIEVERS Subroutine
'------------------------------
' ...explanation...
Sub RELIEVERS (PPH, pz)

    Call PITSTRAT(PPH, pz)

    If pz = 1 Then
        pz = 0
    Else
        I2 = 0
        A1 = S6%(D, 0) - S6%(P, 0)

        For rIdx = 0 To 21

            A2 = P%(D, rIdx, 4) - P%(D, rIdx, 5) - P%(D, rIdx, 3) * 1.3

            If Not (P%(D, rIdx, 15) > 0 Or P$(D, rIdx) = "XXX" Or A2 = 0) Then
                If INNING% <= 7 And A2 > 0 Then I2 = I2 + A2
                If INNING% > 7 And A1 < 0 And A2 > 0 Then I2 = I2 + A2
                If INNING% > 7 And A1 >= 0 Then I2 = I2 + P%(D, rIdx, 3)
            End If

        Next rIdx

        I3 = Int(Rnd(1) * I2) + 1
        I2 = 0

        For rIdx = 0 To 21

            A2 = P%(D, rIdx, 4) - P%(D, rIdx, 5) - P%(D, rIdx, 3) * 1.3

            If Not (P%(D, rIdx, 15) > 0 Or P$(D, rIdx) = "XXX" Or A2 = 0) Then

                If INNING% <= 7 Then

                    If A2 > 0 Then
                        If I3 <= I2 + A2 Then
                            Call NEWPITCHER(rIdx, PPH, pz)
                            Exit Sub
                        Else
                            I2 = I2 + A2
                        End If
                    End If

                Else

                    'INNING% > 7
                    If A1 < 0 And A2 > 0 Then
                        If I3 <= I2 + A2 Then
                            Call NEWPITCHER(rIdx, PPH, pz)
                            Exit Sub
                        Else
                            I2 = I2 + A2
                        End If
                    Else
                        If A1 >= 0 And I3 > I2 Then
                            If I3 <= I2 + P%(D, rIdx, 3) Then
                                Call NEWPITCHER(rIdx, PPH, pz)
                                Exit Sub
                            Else
                                I2 = I2 + P%(D, rIdx, 3)
                            End If
                        End If
                    End If

                End If

            End If

        Next rIdx

        For rIdx = 0 To 21
            If P%(D, rIdx, 15) = 0 And P$(D, rIdx) <> "XXX" Then Call NEWPITCHER(rIdx, PPH, pz): Exit For
        Next rIdx

    End If

End Sub

'------------------------------
'   REPLACEMENTS Subroutine
'------------------------------
' ...explanation...
Sub REPLACEMENTS (I7%, I8%, i9%)
    ' REPLACEMENT AVERAGE CALCS, I7%,I8%,I9%
    For xx = 22 To 25
        If B7%(I7%, I8%) = B%(I7%, i9%, xx) Then
            B%(I7%, i9%, 15) = B%(I7%, i9%, 33 + (xx - 22) * 2)
            B%(I7%, i9%, 17) = B%(I7%, i9%, 34 + (xx - 22) * 2)
            B%(I7%, i9%, 19) = B%(I7%, i9%, xx + 4)
            Exit Sub
        End If
    Next

    J1 = B7%(I7%, I8%)
    Select Case J1
        Case 2
            J2 = 1
            J3 = 0
            J4 = 910 + Int(Rnd(1) * 10) + 1
        Case 3
            J2 = 0
            J3 = 3
            J4 = 960 + Int(Rnd(1) * 10) + 1
        Case 4
            J2 = 0
            J3 = 3
            J4 = 912 + Int(Rnd(1) * 10) + 1
        Case 5 To 6
            J2 = 0
            J3 = 3
            J4 = 902 + Int(Rnd(1) * 10) + 1
        Case Is >= 7:
            J2 = 2
            J3 = 2
            J4 = 972 + Int(Rnd(1) * 10) + 1
    End Select

    B%(I7%, i9%, 15) = J2
    B%(I7%, i9%, 17) = J3
    B%(I7%, i9%, 19) = J4

End Sub

'------------------------------
'   SCOREBOARD Subroutine
'------------------------------
' ...explanation...
Sub SCOREBOARD ()

    ' ***INCREMENT THE HIT TOTAL ON THE SCOREBOARD***
    S6%(P, 1) = S6%(P, 1) + 1

    If usingGfx = 0 Then
        Color 14, 0
        Locate P + 2, 43
        Print Using "##"; S6%(P, 1);
        Color 15, 0
    Else
        FORMATTED$ = FUsing$(Str$(S6%(P, 1)), "##", 1)
        PrintOnGfx 56, P + 28, FORMATTED$, imageScreen&
    End If

End Sub

'------------------------------
'   SECOND2FIRST Subroutine
'------------------------------
' ...explanation...
Sub SECOND2FIRST (D)

    ' *** throw to 1st from 2nd ***
    Call GETRPBP(30, 1540, Y$, D)
    Call STRIPRPBP(30, 1540, Y$, D)
    Call PBP(Y$ + " to first")

End Sub

'------------------------------
'   SINGLEPBP Subroutine
'------------------------------
' ...explanation...
Sub SINGLEPBP (S2%, D, W%)
    ' *** play by play for a single s2%=7, s2%=12 ***

    If S2% = -12 Then
        S2% = 12
    Else
        Call DELIVERY(D)
        Call d100(RN)

        If S2% = 12 Then
            Call PBP(player$(0) + " beats out an infield single")
        Else

            If RN <= 50 Then
                Call GETRPBP(50, 1610, Y$, D)
                Call STRIPRPBP(50, 1610, Y$, D)
                Call PBP(Y$ + " " + C$(W%))
            Else
                If W% = 7 Then range = 70: min = 1660
                If W% = 9 Then range = 70: min = 1730
                If W% = 8 Then range = 90: min = 1800
                Call GETRPBP(range, min, Y$, D)
                Call STRIPRPBP(range, min, Y$, D)
                Call PBP(Y$)
            End If

        End If 'Done checking for S2%

        Call DELAY

    End If 'Done checking for S2%

End Sub

'------------------------------
'   SINGLEROUTINE Subroutine
'------------------------------
' ...explanation...
Sub SINGLEROUTINE (W%, P, I1, D, S2%, P2)

    Call GETOUTFIELDER(W%, P, I1, D)
    Call WINDEX

    If B7%(P, B1!(P)) <> 1 Then
        I5 = B3%(P, B1!(P))
        I6 = 0
        Call INCBATOFF(P, I5, I6)
        I6 = 1
        Call INCBATOFF(P, I5, I6)
    End If

    I5 = P1%(D)
    I6 = 1
    Call ADDPIT(D, I5, I6)

    If B7%(P, B1!(P)) = 1 Then
        I5 = P1%(P)
        I6 = 23
        Call INCPITOFF(P, I5, I6)
        I6 = 24
        Call INCPITOFF(P, I5, I6)
    End If

    '-- Original code is as follows:
    'If H7% > sn Then Call SINGLEPBP(S2%, D, W%)
    '-- But there is no clue what sn is supposed to be
    Call SINGLEPBP(S2%, D, W%)

    For I = 0 To 3
        A5%(I) = 1
    Next I

    If S2% <> 12 And B0%(2, 0) <> 0 Then

        Call d100(H6%)

        If B7%(P, B0%(2, 0)) <> 1 Then
            BR% = B%(P, B3%(P, B0%(2, 0)), 16)
        Else
            BR% = P%(P, P1%(P), 31)
        End If

        If O%(0) = 0 Then
            If W% = 7 Then I3 = 16 + BR% * 3
            If W% = 8 Then I3 = 49 + BR% * 3
            If W% = 9 Then I3 = 27 + BR% * 3
        End If

        If O%(0) = 1 Then
            If W% = 7 Then I3 = 36 + BR% * 3
            If W% = 8 Then I3 = 61 + BR% * 3
            If W% = 9 Then I3 = 44 + BR% * 3
        End If

        If O%(0) = 2 Then
            If W% = 7 Then I3 = 79 + BR% * 3
            If W% = 8 Then I3 = 82 + BR% * 3
            If W% = 9 Then I3 = 79 + BR% * 3
        End If

        If H6% <= I3 Or P2 = 2 And S2% <> 12 Then A5%(2) = 2

    End If

    If Not (B0%(1, 0) = 0 Or S2% = 12 Or B0%(2, 0) > 0 And A5%(2) = 1) Then

        Call d100(H6%)

        BR% = B%(P, B3%(P, B0%(1, 0)), 16)

        If B7%(P, B0%(1, 0)) = 1 Then BR% = P%(P, P1%(P), 31)

        I3 = 0

        If O%(0) = 0 Then
            If W% = 7 Then I3 = 6 + BR% * 3
            If W% = 8 Then I3 = 25 + BR% * 3
            If W% = 9 Then I3 = 38 + BR% * 3
        End If

        If O%(0) = 1 Then
            If W% = 7 Then I3 = 10 + BR% * 3
            If W% = 8 Then I3 = 26 + BR% * 3
            If W% = 9 Then I3 = 40 + BR% * 3
        End If

        If O%(0) = 2 Then
            If W% = 7 Then I3 = 11 + BR% * 3
            If W% = 8 Then I3 = 45 + BR% * 3
            If W% = 9 Then I3 = 62 + BR% * 3
        End If

        If H6% <= I3 Or P2 = 2 And S2% <> 12 Then A5%(1) = 2

    End If

    Call ADVANCEMENT(P, D, S2%, F%, I3)

End Sub

'------------------------------
'   SOMESTATS Subroutine
'------------------------------
' ...explanation...
Sub SOMESTATS (V, P, F%, D)

    If B0%(V, 0) > 0 And F% = 0 Then
        If B7%(P, B0%(V, 0)) = 1 Then
            I5 = P1%(P)
            I6 = 32
            Call INCPITOFF(P, I5, I6)
        Else
            I5 = B3%(P, B0%(V, 0))
            I6 = 9
            Call INCBATOFF(P, I5, I6)
        End If
    End If

End Sub

'------------------------------
'   SQUEEZECHOICE Subroutine
'------------------------------
' ...explanation...
Sub SQUEEZECHOICE (SH)

    If U6 = 2 Or U6 = 1 And P = U9 Then
        '-- Autoplay essentially
        '-- always does a Bunt rather
        '-- than ever attempt a squeeze

        '-- Consider updating to run
        '-- a squeeze play a small %
        '-- of time, and only in the
        '-- most common conditions:
        '   Team has < 2 outs
        '   Runner is on 3rd

        '-- This could be done even more
        '-- often for teams before the
        '-- 1970's DH rule, since bunting
        '-- is not as frequent now
        SH = 2
    Else
        Locate 15, 1
        Print "1 - SQUEEZE PLAY"
        Print "2 - BUNT FOR SACRIFICE/HIT"
        Do
            I$ = GetKeyPress$
            SH = Val(I$)
        Loop Until SH >= 1 And SH <= 2
    End If

End Sub

'------------------------------
'   STEAL3RD Subroutine
'------------------------------
' ...explanation...
Sub STEAL3RD (TGTBASE%, AA, Q0, H0%, D)

    If TGTBASE% = 3 Then
        ' *** SUCCESS OF 3B STEAL ***
        If AA >= 24 Then
            Q0 = 830
        Else
            Q0 = 700
        End If
    End If

    If TGTBASE% = 4 Then Q0 = Q0 * .5

    ' *** H0%=0, runner not held ***
    If H0% = 0 Then
        Q0 = Q0 + 50
    Else
        ' *** H0% = 1, runner is held ***
        Q0 = Q0 - ((P%(D, P1%(D), 18) - 5) * 25): ' - 50
    End If

End Sub

'------------------------------
'   STEALCHANCE Subroutine
'------------------------------
' ...explanation...
Sub STEALCHANCE (AA, I2, TGTBASE%, CHANCE%)

    Dim DD As Single
    Dim TT As Single
    Dim RR As Single
    Dim SS As Single
    Dim GG As Single
    Dim I1 As Single

    AA = B%(P, I2, 13)
    BB = B%(P, I2, 13) + B%(P, I2, 14)
    CC = B%(P, I2, 7): ' *** CHANCE TO STEAL 2B & 3B ***

    Select Case AA
        Case Is <= 43: DD = .16
        Case 44 To 60: DD = .21
        Case Else: DD = .3
    End Select

    TT = CC + BB - (BB * DD): ' *** TOTAL CHANCES TO STEAL 3RD
    RR = (TT * .19) * 1.4: ' *** "      "      "   "     "  1 OUT
    SS = (TT * .56) * 1.4: ' ***                            0 OUT
    GG = RR + SS: ' ***                           (0,1 OUT)

    If TGTBASE% <> 3 Then

        FF = B%(P, I2, 6) + B%(P, I2, 11) - B%(P, I2, 9)

        If FF = 0 Then
            I1 = 0
        Else
            If AA >= 12 Then I1 = Int(((BB - BB * DD) / FF) * 1500)
            If AA < 12 Then I1 = Int((BB / FF) * 1500)
            If I1 < 0 Then I1 = 0
        End If

    Else
        If BB < 10 And O%(0) = 0 Then I1 = 0
        If BB < 10 And O%(0) = 1 Then I1 = 10
        If O%(0) = 2 Or TT = 0 Then I1 = 0
        If BB >= 10 And O%(0) = 1 Then I1 = BB * DD / TT * 1000
        If BB >= 10 And O%(0) = 0 Then I1 = BB * DD / TT * 1000
        If I1 < 0 Then I1 = 0
    End If

    CHANCE% = I1

End Sub

'------------------------------
'   STRIKEOUT Subroutine
'------------------------------
' ...explanation...
Sub STRIKEOUT (U%, D)

    ' *** strikeout pbp ***
    If U% = 3 Then
        BV = 20
    Else
        BV = Int(Rnd(1) * 100)
        Call d100(RN)

        If RN <= 20 Then Call PBP("FULL COUNT...")

        Call DELIVERY(D)

        If BV = 1 Then
            Call PBP("  Three!!")
            Call PBP(player$(0) + " turns to " + U$(1))
            Call PBP("he says he tees them up higher than that")
            Call PBP("at the country club!!")
        End If

        If BV = 2 Then
            Call PBP("Strike three...")
            Call PBP(player$(0) + " stands there like a house")
            Call PBP("by the side of the road")
            Call DELAY
        End If

        If BV > 2 And BV <= 5 Then
            Call PBP(player$(0) + " looks at a called strike three")
            Call PBP("and turns to glare at " + U$(1))
            Call PBP(M$(P) + " is barking from the dugout!!")
        End If

        Call d100(RN)
        If RN <= 25 Then
            range = 40
            min = 890
        Else
            range = 80
            min = 930
        End If

        Call GETRPBP(range, min, Y$, D)
        Call STRIPRPBP(range, min, Y$, D)
        Call PBP(Y$)

    End If

    Call GETRPBP(40, 1010, Y$, D)
    Call STRIPRPBP(40, 1010, Y$, D)
    Call PBP(Y$)

    Call d100(RN)
    Select Case RN
        Case 1 To 20: F$ = "Number" + Str$(P8%(D, P1%(D), 5) + 1) + " for " + P$(D, P1%(D))
        Case 21 To 40: F$ = "That's" + Str$(P8%(D, P1%(D), 5) + 1) + " for " + P$(D, P1%(D))
        Case 41: F$ = player$(0) + " is not a happy man"
        Case 42: F$ = player$(0) + " has had better AB's"
    End Select

    Call PBP(F$)

End Sub

'------------------------------
'   STRIKEOUTCS Subroutine
'------------------------------
' ...explanation...
Sub STRIKEOUTCS (SO)

    If SO = 7 Then B1!(P) = B1!(P) + 1

End Sub

'------------------------------
'   TAGADVANCE Subroutine
'------------------------------
' ...explanation...
Sub TAGADVANCE (S2%, I8!, D)

    If S2% = 7 And I8! = 2 Then

        If B7%(P, B1!(P)) = 1 Then
            I5 = P1%(P)
            I6 = 27
            Call INCPITOFF(P, I5, I6)
        Else
            I5 = B3%(P, B1!(P))
            I6 = 4
            Call INCBATOFF(P, I5, I6)
        End If

    End If

    If S2% = 8 And I8! = 3 Then

        If B7%(P, B1!(P)) = 1 Then
            I5 = P1%(P)
            I6 = 28
            Call INCPITOFF(P, I5, I6)

            P8%(P, P1%(P), 27) = P8%(P, P1%(P), 27) - 1
            P5%(P, P1%(P), 27) = P5%(P, P1%(P), 27) - 1
            Exit Sub
        Else
            I3 = 4
            I4 = 5
            I5 = B3%(P, B1!(P))
        End If

    End If

    If S2% = 9 And I8! = 4 Then
        I3 = 5
        I4 = 6
        I5 = B3%(P, B1!(P))
    End If

    If S2% = 8 And I8! = 3 Or S2% = 9 And I8! = 4 Then

        If P%(D, P1%(D), 0) <> 1 Then
            CSS%(P, I5, I3 - 2) = CSS%(P, I5, I3 - 2) - 1
            CSS%(P, I5, I4 - 2) = CSS%(P, I5, I4 - 2) + 1
        Else
            B8%(P, I5, I3) = B8%(P, I5, I3) - 1
            B5%(P, I5, I3) = B5%(P, I5, I3) - 1
            B8%(P, I5, I4) = B8%(P, I5, I4) + 1
            B5%(P, I5, I4) = B5%(P, I5, I4) + 1
        End If

    End If

End Sub

'------------------------------
'   THROW2FIRST Subroutine
'------------------------------
' ...explanation...
Sub THROW2FIRST (D)

    ' *** throw to 1st from 3rd/ss ***

    pbpIdx% = Int(Rnd(1) * 40) + 1570

    Call GETRPBP(40, 1570, Y$, D)
    Call STRIPRPBP(40, 1570, Y$, D)
    Call PBP(Y$ + " to first")

End Sub


'------------------------------
'   TIRING Subroutine
'------------------------------
' ...explanation...
Sub TIRING (P9)
    'tired on runs and hits

    If S8%(P9, 0) <= P8%(P9, P1%(P9), 4) + P8%(P9, P1%(P9), 1) And S8%(P9, 1) <= P8%(P9, P1%(P9), 2) Then

        Call d100(RN)

        If S8%(P9, 1) > 0 And INNING% < 6 Or S8%(P9, 1) = 0 And P8%(P9, P1%(P9), 4) + P8%(P9, P1%(P9), 1) > 4 Then
            If RN <= 50 Then
                Print P$(P9, P1%(P9)); " just doesn't have it today";
            Else
                Print P$(P9, P1%(P9)); " ain't got nuthin' on his fastball folks!";
            End If
        Else
            Print P$(P9, P1%(P9)); " is tired!!";
        End If

    Else

        If S8%(P9, 1) > 0 And (S8%(P9, 0) <= P8%(P9, P1%(P9), 4) + P8%(P9, P1%(P9), 1) Or S8%(P9, 1) <= P8%(P9, P1%(P9), 2)) Or (P8%(P9, P1%(P9), 4) + P8%(P9, P1%(P9), 1) > 2 And P8%(P9, P1%(P9), 0) >= 5) Then
            Print P$(P9, P1%(P9)); " is tiring!!";
        Else

            If S8%(P9, 1) > 0 Or (P8%(P9, P1%(P9), 4) + P8%(P9, P1%(P9), 1) < 3 And P8%(P9, P1%(P9), 2) = 0) Then
                Print P$(P9, P1%(P9)); " seems to be OK!!";
            End If

        End If

    End If

End Sub

'------------------------------
'   TRIPLEPLAY Subroutine
'------------------------------
' ...explanation...
Sub TRIPLEPLAY (D)

    Call WINDEX

    player$(4) = B$(D, B9%(D, 5))

    Call PBP("grounder to " + player$(4) + " @ 3B")
    Call PBP(player$(2) + " OUT @ 3B")
    Call PBP(player$(1) + " OUT @ 2B")
    Call PBP(player$(0) + " OUT @ 1B")
    Call PBP("--- TRIPLE PLAY !!! ---"): Call DELAY

    O%(0) = 3
    I5 = P1%(D)
    I6 = 0

    For idx = 1 To 3: Call ADDPIT(D, I5, I6): Next idx

    If B7%(P, B1!(P)) = 1 Then
        I5 = P1%(P)
        I6 = 23
        Call INCPITOFF(P, I5, I6)
    Else
        I5 = B3%(P, B1!(P))
        I6 = 0
        Call INCBATOFF(P, I5, I6)
    End If

End Sub

'------------------------------
'   TRYFOREXTRABASE Subroutine
'------------------------------
' ...explanation...
Sub TRYFOREXTRABASE (LN%, S2%, P2, Z2%, D, W%, sah%, SB%, baseNbr!, I9)

    If LN% = 3308 Then
        'This happens very rarely
        LN% = 0

    Else

        baseNbr! = 0
        Call d100(H6%)

        'Determine which base we're stealing
        If S2% = 8 And B0%(2, 0) > 0 And H6% < 6 And B0%(3, 0) = 0 And B%(P, B3%(P, B0%(2, 0)), 8) > 0 Then baseNbr! = 3
        If S2% = 9 And B0%(3, 0) > 0 And H6% <= 2 And B%(P, B3%(P, B0%(3, 0)), 9) > 0 Then baseNbr! = 4
        If S2% = 7 And B0%(3, 0) > 0 And P2 = 2 And H6% >= 6 And H6% <= B%(P, B3%(P, B0%(3, 0)), 16) Then baseNbr! = 4
        If S2% = 7 And B0%(3, 0) > 0 And Z2% = B0%(3, 0) And P2 <> 2 And H6% <= B%(P, B3%(P, B0%(3, 0)), 16) * 12 Then baseNbr! = 4

        E2% = 10

        If B0%(2, 0) > 0 Then E2% = E2% + B%(P, B3%(P, B0%(2, 0)), 16)
        If S2% = 7 And B0%(2, 0) > 0 And P2 <> 2 And H6% <= E2% And B0%(3, 0) = 0 And baseNbr! = 0 Then baseNbr! = 3
        If S2% = 7 And B0%(1, 0) > 0 And B0%(2, 0) = 0 And baseNbr! = 0 And H6% <= B%(P, B3%(P, B0%(1, 0)), 16) And B%(P, B3%(P, B0%(1, 0)), 7) > 0 Then baseNbr! = 2

    End If

    If baseNbr! <> 0 Then
        'We shouldn't still have a 0 value!

        If Not (U6 = 2 Or U6 = 1 And P = U9) Then
            If S2% < 10 Then Call PBP(player$(baseNbr! - 1) + " try for " + H$(baseNbr!) + " (YN) ")
            If S2% > 10 Then Call PBP(player$(baseNbr! - 1) + " tag up (YN) ")
            Call PBP("against " + player$(4))
        End If

        3310 '
        I$ = "N"
        A1 = S6%(P, 0) - S6%(D, 0)

        If (U6 = 2 Or U6 = 1 And P = U9) Then
            If A1 > -2 And A1 < 2 And S2% <> 19 Then
                I$ = "Y"
            Else
                If A1 < 0 And (INNING% >= 7 Or S2% = 19) Then
                    I$ = "N"
                End If
            End If

            If S2% = 8 And O%(0) = 2 And baseNbr! = 3 Then
                I$ = "N"
            End If
        End If

        skipThrow% = 0
        If Not (U6 = 2 Or U6 = 1 And P = U9) Then
            I$ = GetKeyPress$
        End If

        If UCase$(I$) <> "Y" Then
            I9 = 1
        Else
            F$ = player$(baseNbr! - 1) + " is "

            If S2% < 10 Then
                Call PBP(F$ + "going for " + H$(baseNbr!))
            Else
                'S2% >= 10
                Call PBP(F$ + "tagging")
            End If

            If Not (S2% = 7 And baseNbr! = 2 Or S2% > 10 And S4% = 3) Then

                If Not (U6 = 2 Or U6 = 1 And D = U9) Then
                    Call PBP(player$(4) + " throw to " + H$(baseNbr!) + " (YN) ")
                End If

                Call d100(RN)

                If (U6 = 2 Or U6 = 1 And D = U9) Then
                    If MG%(D, 766) = 999 And baseNbr! = 4 Then
                        If INNING% >= MG%(D, 767) And MG%(D, 767) <> 0 And MG%(D, 768) <= S6%(D, 0) - S6%(P, 0) Then I$ = "N"
                        If INNING% >= MG%(D, 769) And MG%(D, 769) <> 0 And MG%(D, 770) <= S6%(D, 0) - S6%(P, 0) Then I$ = "N"
                    Else
                        I$ = "Y"
                    End If
                Else
                    I$ = GetKeyPress$
                End If

                I9 = 0

                If UCase$(I$) <> "Y" Then
                    I9 = 1
                    Call PBP("No throw is made")
                    skipThrow% = 1
                End If

            End If

            If skipThrow% = 0 Then

                Call WINDEX
                Call PBP("Here comes the throw by " + player$(4))
                'For i = 1 To 3: Call PBP("."): Next i: Call PBP(" ")
                Call PBP("...")

                Call FLDERR(F%, W%, D, I3, SB%, S2%, P)

                If F% <> 1 Then

                    I4 = Int(Rnd(1) * 1000) + 1
                    A = B%(P, B3%(P, B0%(baseNbr! - 1, 0)), 16)

                    If B7%(P, B0%((baseNbr! - 1), 0)) = 1 Then A = P%(P, P1%(P), 31)
                    A = A - 5
                    A = A * 50

                    If S2% = 17 Then b = ((B%(D, B9%(D, W%), 15) - 5) * 25): I3 = 1000 + A - b: ' WAS 800
                    If S2% = 18 Then b = ((B%(D, B9%(D, W%), 15) - 5) * 25): I3 = 800 + A - b: ' WAS 650
                    If S2% = 19 Or S2% < 10 Then b = ((B%(D, B9%(D, W%), 15) - 5) * 25): I3 = 500 + A - b

                    If I4 > I3 Then

                        A5%(baseNbr! - 1) = 11
                        O%(0) = O%(0) + 1
                        O%(1) = O%(1) + 1
                        I5 = P1%(D)
                        I6 = 0
                        Call ADDPIT(D, I5, I6)
                        Call d100(RN)

                        Select Case RN
                            Case 1 To 4
                                If baseNbr! = 4 Then
                                    Call PBP(player$(baseNbr! - 1) + " collides with " + B$(D, B9%(D, 2))): Call PBP(B$(D, B9%(D, 2)) + " hangs on!!")
                                End If

                            Case 5 To 50
                                If baseNbr! <> 4 Then Call PBP(player$(baseNbr! - 1) + " doesn't make it!")

                            Case 51 To 80
                                Call PBP("throw is perfect!")

                            Case 81 To 90
                                Call PBP("This will be close")

                            Case 91 To 100
                                Call PBP("Close play.....")
                                If baseNbr! < 4 Then
                                    Call PBP(U$(baseNbr! + 1) + " makes the call...")
                                Else
                                    Call PBP(U$(1) + " makes the call...")
                                End If
                        End Select

                        Call CREDITASSIST(W%, D)
                        Call ADVANCEMENT(P, D, S2%, F%, I3)
                        Call CREDITPUTOUT(2, FB2P%, AST%, D)
                        W% = 2

                        If O%(0) = 3 Or S2% > 10 Then Exit Sub

                        3371 '
                        Call d100(I5)

                        A1 = S6%(P, 0) - S6%(D, 0)

                        If Not (A1 < -2 Or A1 < 0 And INNING% > 8) Then

                            ' *** RUNNER ON 2ND GUNNED AT 3RD ON THROW HOME ***
                            If baseNbr! - 1 > 2 And I5 <= 15 And B0%(2, 0) > 0 Then
                                Call CREDITASSIST(W%, D)
                                Call PBP("runner is trying for 3rd...")
                                A5%(2) = 11
                                O%(0) = O%(0) + 1
                                O%(1) = O%(1) + 1
                                W% = 5
                                Call CREDITREGPO(W%, D)
                                I5 = P1%(D)
                                I6 = 0
                                Call ADDPIT(D, I5, I6)
                            End If

                            ' *** RUNNER ON 1ST GUNNED AT 2ND ON THROW TO HOME OR 3RD ***
                            Call d100(I5)

                            If baseNbr! - 1 > 1 And I5 <= 15 And B0%(1, 0) > 0 And A5%(2) <> 11 Then
                                Call CREDITASSIST(W%, D)
                                W% = 6
                                Call CREDITREGPO(W%, D)
                                Call PBP("runner is trying for 2nd...")
                                A5%(1) = 11
                                O%(0) = O%(0) + 1
                                O%(1) = O%(1) + 1
                                I5 = P1%(D)
                                I6 = 0
                                Call ADDPIT(D, I5, I6)
                            End If

                            Call d100(I5)

                            If B0%(2, 0) > 0 And baseNbr! - 1 > 2 And A5%(2) <> 11 And I5 > (80 - B%(P, B3%(P, B0%(2, 0)), 16) * 2) And I9 = 0 Then
                                A5%(2) = 1
                                Call PBP("runner is trying for 3rd...")
                                Call PBP("He's safe!")
                            End If

                            I5 = Int(Rnd(1) * 10) + 1

                            If B0%(1, 0) > 0 And A5%(1) <> 11 And (S4% = 4 Or S4% = 7 And baseNbr! - 1 > 1 And I5 > (10 - B%(P, B3%(P, B0%(1, 0)), 16)) And I9 = 0) Then
                                A5%(1) = 1
                                Call PBP("runner is trying for 2nd...")
                                Call PBP("He's in there!")
                            Else

                                Call d100(I5)

                                If B0%(1, 0) > 0 And baseNbr! - 1 > 1 And I5 > (80 - B%(P, B3%(P, B0%(1, 0)), 16) * 2) And I9 = 0 And A5%(1) <> 11 Then
                                    A5%(1) = 1
                                    Call PBP("runner safe at 2nd on the throw")
                                End If

                            End If

                        End If

                        Call ADVANCEMENT(P, D, S2%, F%, I3)
                        I9 = 0

                        Exit Sub

                    End If

                End If

                3380 '
                A5%(baseNbr! - 1) = 1

                If I9 <> 1 Then

                    Call d100(RN)

                    Select Case RN
                        Case 1 To 4:
                            If baseNbr! = 4 Then
                                Call PBP(player$(baseNbr! - 1) + " collides with " + B$(D, B9%(D, 2)))
                                Call PBP("He knocks the ball loose!!")
                            End If

                        Case 5 To 50:
                            If baseNbr! <> 4 Then Call PBP(player$(baseNbr! - 1) + " beats the throw!")

                        Case 51 To 60:
                            Call PBP(player$(baseNbr! - 1) + " is ahead of the throw")

                        Case 61 To 80:
                            Call PBP("throw is off line")

                        Case 81 To 90:
                            Call PBP(player$(baseNbr! - 1) + " slides under the tag")

                        Case 91 To 100:
                            Call PBP("Close play...")

                            If baseNbr! <> 4 Then
                                Call PBP(U$(baseNbr! + 1) + " makes the call...")
                            Else
                                Call PBP(U$(1) + " makes the call...")
                            End If

                    End Select

                End If

                3379 '
                Call PBP(player$(baseNbr! - 1) + " is safe @ " + H$(baseNbr!))

                'sah% = safeAtHome ?
                If baseNbr! = 4 Then sah% = 1

                Call TAGADVANCE(S2%, baseNbr!, D)

                If S2% < 10 Then 3371

                If S2% > 10 Then

                    If B7%(P, B1!(P)) = 1 Then

                        P8%(P, P1%(P), 23) = P8%(P, P1%(P), 23) - 1
                        P5%(P, P1%(P), 23) = P5%(P, P1%(P), 23) - 1
                        I5 = P1%(P)
                        I6 = 41
                        Call INCPITOFF(P, I5, I6)
                        I5 = P1%(D)
                        I6 = 16
                        Call ADDPIT(D, I5, I6)

                    Else

                        B8%(P, B3%(P, B1!(P)), 0) = B8%(P, B3%(P, B1!(P)), 0) - 1
                        B5%(P, B3%(P, B1!(P)), 0) = B5%(P, B3%(P, B1!(P)), 0) - 1

                        If P%(D, P1%(D), 0) <> 1 Then
                            CSS%(P, B3%(P, B1!(P)), 0) = CSS%(P, B3%(P, B1!(P)), 0) - 1
                        End If

                        I5 = B3%(P, B1!(P))
                        I6 = 19
                        Call INCBATOFF(P, I5, I6)

                        I5 = P1%(D)
                        I6 = 16
                        Call ADDPIT(D, I5, I6)

                        GoTo 3371

                    End If

                End If

                'Loop Until S2% >= 10 And B7%(P, B1!(P)) = 1

            End If 'Done checking for fielding error

        End If 'Done checking if we're going to try for base

    End If

End Sub

'------------------------------
'   VIEWTEAM Subroutine
'------------------------------
' ...explanation...
Sub VIEWTEAM ()

    If usingGfx = 1 Then Screen 0

    Do
        Cls
        Color 12: Print Tab(20); "SELECT TEAM TO VIEW DETAILED STATS FOR:"
        Print
        Print
        Color 14, 0: Print "(0) ";: Color L%(0, 11), L%(0, 12): Print A$(0)
        Print
        Color 14, 0: Print "(1) ";: Color L%(1, 11), L%(1, 12): Print A$(1)
        Print
        Color 14, 0: Print "(2) ";: Color 15: Print "RETURN TO PLAY"

        Do
            I$ = GetKeyPress$
            WK = Val(I$)
        Loop Until WK >= 0 And WK <= 2

        If WK < 2 Then

            Cls
            Color 14: Print "(1) ";: Color 15: Print "VIEW PITCHERS"
            Print
            Color 14: Print "(2) ";: Color 15: Print "VIEW HITTERS"
            Print
            Color 14: Print "(3) ";: Color 15: Print "RETURN TO PLAY"

            Do
                I$ = GetKeyPress$
                Q = Val(I$)
            Loop Until Q >= 1 And Q <= 3

            Select Case Q
                Case 1

                    Do

                        Cls
                        Color 12: Print "VIEW BATTERS (AVAILABLE PLAYERS HIGHLIGHTED)"

                        For idx = 0 To 10:
                            Color 3, 0
                            If B%(WK, idx, 21) = 0 Then Color 11
                            Locate idx + 5, 5: Print Using "##"; idx;
                            Print " "; B$(WK, idx); Tab(40);
                            Color 3
                            If B%(WK, idx + 12, 21) = 0 Then Color 11
                            Print Using "##"; idx + 12;
                            Print " "; B$(WK, idx + 12)
                            Color 3
                        Next

                        If B%(WK, 11, 21) = 0 Then Color 11

                        Locate , 5: Print Using "##"; 11;: Print " "; B$(WK, 11)

                        Color 3

                        Do
                            Color 15
                            Locate 20, 1: Print "# TO VIEW (0-22) (23 TO CONTINUE) ";: Input M
                        Loop Until M >= 0 And M <= 23

                        If M <> 23 Then
                            Locate 3, 3
                            Color L%(WK, 11), L%(WK, 12): Print " "; Chr$(201); String$(71, 205); Chr$(187); " "

                            For X = 1 To 7: Locate , 3: Print " "; Chr$(186); String$(71, 32); Chr$(186); " ": Next

                            Locate , 3
                            Print " "; Chr$(200); String$(71, 205); Chr$(188); " "

                            Locate 4, 6: Print "Stats for "; B$(WK, M)
                            Locate , 6: Print "BATS: "; B1$(B%(WK, M, 0) + 2); "    ";: Print Using "G/A%: ##       BUNT: #       RUN: #"; B%(WK, M, 18); B%(WK, M, 30); B%(WK, M, 16)
                            Locate , 3: Print " "; Chr$(204); String$(71, 205); Chr$(185); " "
                            Locate , 6: Print "          AVG   OBP   G  AB   R   H 2B 3B HR RBI  BB  SO  SB CS HS LS"
                            Call PopUp_Batter(WK, M)
                            I$ = GetKeyPress$
                            Color 7, 0
                        End If

                    Loop Until M = 23

                Case 2
                    Do
                        Cls

                        Color 12: Print "VIEW PITCHERS (AVAILABLE PLAYERS HIGHLIGHTED)"

                        For idx = 0 To 10:

                            Color 3, 0

                            If P%(WK, idx, 15) = 0 Then Color 11

                            Locate idx + 5, 5: Print Using "##"; idx;
                            Print " "; P$(WK, idx); Tab(40);

                            Color 3

                            If P%(WK, idx + 11, 15) = 0 Then Color 11

                            Print Using "##"; idx + 11;
                            Print " "; P$(WK, idx + 11)

                            Color 3

                        Next

                        Do
                            Color 15
                            Locate 20, 1: Print "# TO VIEW (0-21) (22 TO CONTINUE) ";: Input M
                        Loop Until M >= 0 And M <= 22

                        If M <> 22 Then
                            Call PopUp_Pitcher(WK, M)
                            I$ = GetKeyPress$
                            Color 7, 0
                        End If

                    Loop Until M = 22

            End Select

        End If

    Loop Until WK = 2 Or Q = 3 Or M = 23

    850 '

End Sub

'------------------------------
'   WALLDOUBLE Subroutine
'------------------------------
' ...explanation...
Sub WALLDOUBLE (HW%, W%)

    ' *** doubles off of a wall ***
    Call d100(BV)
    Call d100(RN)

    3781 '
    Select Case BV
        Case 1 To 40:

            If HW% = 0 Then F$ = "It's in the gap and to the wall"

        Case 41 To 65

            Select Case RN
                Case 1 To 25
                    If (L%(1, 13) = 8 Or L%(1, 13) = 40) Then F$ = "It's off the ivy!"
                Case 26 To 50
                    If L%(1, 13) = 21 And W% = 7 Then F$ = "It hits off the Green Monster!"
            End Select

            If L%(1, 13) = 27 And W% = 7 Then
                F$ = "It hits off the screen!"
            Else
                F$ = "It's off the wall"
            End If

        Case 66 To 85

            If HW% = 0 Then
                If W% = 8 Then
                    F$ = "It's in the gap and to the wall"
                Else
                    Call PBP("It's past " + player$(4))
                    F$ = "It goes into the corner..."
                End If
            End If

        Case 86 To 90

            If HW% = 0 Then
                Call PBP("It's to the wall")
                Call PBP(player$(0) + " slides into second")
                F$ = "It's a stand-up double!!"
            End If

        Case Else
            If RN <= 25 And L%(1, 13) = 21 Then
                F$ = "It's off the Green Monster!"
            Else
                If L%(1, 13) = 27 And W% = 7 Then
                    F$ = "It's off the screen..."
                Else
                    F$ = "It's off the top of the wall..."
                End If
            End If

    End Select

    Call PBP(F$)

End Sub

'------------------------------
'   WHICHRUNNER Subroutine
'------------------------------
' ...explanation...
Sub WHICHRUNNER (i, S4%, D5)

    If i = 4 Then A5%(3) = 1

    If S4% = 4 Then

        Call PBP("WHICH RUNNER DO YOU WANT TO GO AFTER")

        Call PBP("1 - " + B$(P, B3%(P, B0%(2, 0))))

        If B7%(P, B0%(1, 0)) <> 1 Then
            Call PBP("2 - " + B$(P, B3%(P, B0%(1, 0))))
        Else
            Call PBP("2 - " + P$(P, P1%(P)))
        End If

        If U6 = 2 Or U6 = 1 And P <> U9 Then
            D5 = Int(Rnd(1) * 2) + 1
            i$ = Str$(D5)
        Else
            i$ = GetKeyPress$
        End If

        D5 = Val(i$)
        '-- Shouldn't we make sure we have a valid value???

        If D5 = 2 Then
            i = 2
            D5 = 3
            I2 = B3%(P, B0%(1, 0))
            If B7%(P, B0%(1, 0)) = 1 Then player$(i - 1) = P$(P, P1%(P))
        End If

        D5 = 0

    End If

End Sub

'------------------------------
'   WHOSON1ST Subroutine
'------------------------------
' ...explanation...
Sub WHOSON1ST (S4%)

    S4% = 0
    I1 = B0%(1, 0)
    I2 = B0%(2, 0)
    I3 = B0%(3, 0)

    If I1 > 0 Then
        If I2 = 0 Then
            If I3 = 0 Then
                S4% = 1
            Else
                ' *** 1ST AND 3RD ***
                S4% = 5
            End If
        Else
            'I2 > 0
            If I3 = 0 Then
                ' *** 1ST AND 2ND ***
                S4% = 4
            Else
                'I3 > 0
                ' *** BASES LOADED ***
                S4% = 7
            End If
        End If
    Else
        'I1 = 0
        If I2 = 0 Then
            If I3 > 0 Then
                ' *** RUNNER ON 3RD ***
                S4% = 3
            End If

        Else
            'I2 > 0
            If I3 = 0 Then
                ' *** RUNNER ON 2ND ***
                S4% = 2
            Else
                'I3 > 0
                ' *** 2ND AND 3RD ***
                S4% = 6
            End If
        End If
    End If

End Sub

'------------------------------
'   FOULBALL Subroutine
'------------------------------
' ...explanation...
Sub FOULBALL ()

    Call d100(RN)

    If RN <= 50 Then
        Call GETRPBP(20, 3130, Y$, D)
        Call STRIPRPBP(20, 3130, Y$, D)
        Call PBP(Y$)
        Call PBP("foul ball!!")
    Else
        Call GETRPBP(10, 3150, Y$, D)
        Call STRIPRPBP(10, 3150, Y$, D)
        Call PBP(Y$)

        Call GETRPBP(10, 3160, Y$, D)
        Call STRIPRPBP(10, 3160, Y$, D)
        Call PBP(Y$)
    End If
End Sub

'------------------------------
'   RAREPLAYS Subroutine
'------------------------------
' ...explanation...

' H6% gets randomly assigned first.
' Then at the end of most of these
' branches, it gets assigned a
' static value.

' Where is it used in the game?

Sub RAREPLAYS (H6%, H7%, IP%)

    If H7% = 20 Then
        H7% = 0
    Else

        Call WINDEX
        Call d100(H6%)

        Select Case H6%

            Case 1

                Call PBP(B$(D, B9%(D, 2)) + " is arguing ball and strike calls")
                Call PBP(U$(1) + " has heard enough")
                Call PBP(B$(D, B9%(D, 2)) + " has been ejected!!")

                X$ = B$(D, B9%(D, 2))

                Call EJECTINC(EJ%, X$)
                Call DELAY

                po% = 2

                Call EJECTIONINJURY(U6, P, U9, D, po%, P9, W5, W6)

            Case 2 To 3

                Call PBP(P$(D, P1%(D)) + " steps off the mound")
                Call PBP("after that last call")
                Call PBP("He is shouting at " + U$(1))
                Call PBP(U$(1) + " does not appreciate what he hears...")
                Call PBP(P$(D, P1%(D)) + " has been ejected!!")

                X$ = P$(D, P1%(D))

                Call EJECTINC(EJ%, X$)
                Call DELAY
                Call INJPIT(P, D, IP%, PPH)

            Case 4
                If B7%(P, B1!(P)) <> 1 Then
                    Call PBP(player$(0) + " is unhappy with that last call"): Call PBP("He is venting his opinion to " + U$(1)): Print "Thats it!! "; U$(1); " has ejected "; player$(0); "!!"
                    X$ = player$(0): Call EJECTINC(EJ%, X$): Call DELAY: Call PLYRHRT(P, P9, W5, W6, BC%, U%, D, MO)
                Else
                    Call PBP(player$(0) + " did not like that"): Call PBP("last call at all!!")
                End If

            Case 5

                Call PBP(player$(0) + " hits a slow roller to first")
                Call PBP(B$(D, B9%(D, 3)) + " fields it cleanly")
                Call PBP("He flips it to " + P$(D, P1%(D)) + " covering just in time!")
                Call PBP("Wait... " + U$(2) + " rules safe!!")

                If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6)

                I5 = P1%(D)
                I6 = 1

                Call ADDPIT(D, I5, I6)

                If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6)

                For idx = 0 To 3: A5%(idx) = 1: Next idx

                Call ADVANCEMENT(P, D, S2%, F%, I3)
                Call SCOREBOARD
                Call WINDEX

                Call PBP(M$(D) + " charges from the dugout")
                Call PBP(M$(D) + ", " + P$(D, P1%(D)) + ",")
                Call PBP(B$(D, B9%(D, 2)) + ", and " + B$(D, B9%(D, 3)))
                Call PBP("are going at it with " + U$(2))
                Call DELAY
                Call DELAY

                Call PBP(U$(3) + " and " + U$(1) + " come in to help out")
                Call PBP("This argument is out of control now!!")
                Call PBP("What is this?!")
                Call PBP("All of them have been ejected!!!")

                X$ = P$(D, P1%(D))

                Call EJECTINC(EJ%, X$)

                X$ = B$(D, B9%(D, 2))

                Call EJECTINC(EJ%, X$)

                X$ = B$(D, B9%(D, 3))

                Call EJECTINC(EJ%, X$)

                X$ = M$(D)

                Call EJECTINC(EJ%, X$)
                Call DELAY

                po% = 2

                Call EJECTIONINJURY(U6, P, U9, D, po%, P9, W5, W6)

                po% = 3

                Call EJECTIONINJURY(U6, P, U9, D, po%, P9, W5, W6)
                Call INJPIT(P, D, IP%, PPH)

            Case 6 To 7

                Call PBP(player$(0) + " sends a long one")
                Call PBP("down the left field line")
                Call PBP("It may go...")
                Call PBP("HOME RUN!!!")
                Call PBP("Wait!!! ")
                Call PBP(U$(4) + " is calling it foul!!")

                Call WINDEX

                Call PBP(player$(0) + " is arguing vehemently")
                Call PBP("with " + U$(1) + " and " + U$(4))
                Call PBP(M$(P) + " charges from the dugout")
                Call PBP("He and " + player$(0) + " are really going")
                Call PBP("at it with the umpires!!")
                Call DELAY
                Call PBP(" has just been tossed!!"): X$ = player$(0): Call EJECTINC(EJ%, X$)
                Call PLYRHRT(P, P9, W5, W6, BC%, U%, D, MO)

            Case 8

                Call PBP(U$(1) + " has just ejected " + P$(D, P1%(D)))
                Call PBP("for wetting the ball!!")
                Call EJECTINC(EJ%, X$)

                EJ$(EJ%) = P$(D, P1%(D))

                Call DELAY
                Call INJPIT(P, D, IP%, PPH)

            Case 9

                Call PBP("Here's the 3-2 pitch...")
                Call PBP("Time called...")
                Call PBP(U$(1) + " is calling it ball 4")
                Call PBP("He says " + P$(D, P1%(D)) + " went to his mouth")

            Case 10 To 15

                Call PBP(player$(0) + " hits the deck on a high")
                Call PBP("and tight pitch from " + P$(D, P1%(D)))
                Call PBP(player$(0) + " charges the mound!")
                Call PBP("Both dugouts have emptied...")
                Call PBP("It's a bench-clearing brawl!")
                Call WINDEX
                Call PBP("It will take a few minutes to clean this up")

                RN = Int(Rnd(1) * 3) + 1

                Select Case RN

                    Case 1:
                        Call PBP(P$(D, P1%(D)) + " has been ejected")
                        X$ = P$(D, P1%(D))
                        Call EJECTINC(EJ%, X$)
                        Call INJPIT(P, D, IP%, PPH)

                    Case 2:
                        Call PBP(player$(0) + " has been ejected")
                        X$ = player$(0)
                        Call EJECTINC(EJ%, X$)
                        Call PLYRHRT(P, P9, W5, W6, BC%, U%, D, MO)

                    Case 3:
                        Call PBP(player$(0) + " and " + P$(D, P1%(D)) + " have been ejected")
                        X$ = player$(0)
                        Call EJECTINC(EJ%, X$)
                        X$ = P$(D, P1%(D))
                        Call EJECTINC(EJ%, X$)
                        Call INJPIT(P, D, IP%, PPH)
                        Call PLYRHRT(P, P9, W5, W6, BC%, U%, D, MO)

                End Select

            Case 16 To 21

                H6% = 21

                Call WINDEX

                If RD = 0 And (PC% = 0 Or PC% = 4) Then
                    Call PBP(player$(0) + " fouls the pitch out of play")
                Else
                    tm = Int(Rnd(1) * 59) + 2

                    Color 0, 7
                    Call PBP("The game has been halted by rain")

                    For idx = 1 To 2: Call DELAY: Next

                    Call PBP("Rain delay lasted" + Str$(tm) + " minutes")
                    Call DELAY

                    RD% = 1

                    If tm > 28 Then
                        Call PBP("Pitchers have lost effectiveness during delay")
                        Call PBP("Their arms have stiffened up")
                        Call DELAY
                        For idx = 0 To 1: S8%(idx, 0) = S8%(idx, 0) - 2: Next
                    End If

                End If

            Case 22 To 24

                Select Case s4%
                    Case 0
                        If L%(1, 13) = 14 Then
                            Call PBP(player$(0) + " steps out of the box as a jet passes over")
                        Else
                            Call PBP(U$(1) + " calls time to get some new baseballs")
                        End If

                    Case 1
                        Call PBP(B$(D, B9%(D, 2)) + " rifles the ball to ")
                        Call PBP("1st...")
                        i = 2

                    Case 2, 4
                        Call PBP(B$(D, B9%(D, 2)) + " rifles the ball to ")
                        Call PBP("2nd base...")
                        i = 3

                    Case 3
                        Call PBP(B$(D, B9%(D, 2)) + " rifles the ball to ")
                        Call PBP("3rd base...")
                        i = 4

                End Select

                If s4% <> 0 Then

                    Call PBP(player$(i - 1) + " is picked off base!")

                    A5%(i - 1) = 10
                    O%(0) = O%(0) + 1
                    O%(1) = O%(1) + 1
                    W% = 2

                    Call CREDITASSIST(W%, D)
                    Call ADVANCEMENT(P, D, S2%, F%, I3)
                    Call CREDITPUTOUT(I3, FB2P%, AST%, D)

                    I5 = P1%(D)
                    I6 = 0

                    Call ADDPIT(D, I5, I6)

                    If O%(0) >= 3 Then B1!(P) = B1!(P) - 1: H6% = 5

                End If

            Case 25 To 29

                2020 '
                Call PBP(player$(0) + " pops it up near the 3rd base stands")
                Call PBP("A fan interferes...")
                Call PBP(B$(D, B9%(D, 6)) + " makes a great catch!!")

                W% = 6
                Call CREDITREGPO(W%, D)

                O%(0) = O%(0) + 1
                O%(1) = O%(1) + 1
                Call DELAY

                If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6)

                I5 = P1%(D)
                I6 = 0
                Call ADDPIT(D, I5, I6)

                If B7%(P, B1!(P)) = 1 Then
                    I5 = P1%(P)
                    I6 = 23
                    Call INCPITOFF(P, I5, I6)
                End If

                Call DELAY

            Case 30

                Call PBP(player$(0) + " pops it up foul near the stands")
                Call PBP(B$(D, B9%(D, 2)) + " runs into the stands!!")

                po% = 2

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 1

            Case 30 To 31

                Call PBP(player$(0) + " pops it up foul near the stands")
                Call PBP(B$(D, B9%(D, 3)) + " gives chase")
                Call PBP("he runs into the stands!!")

                po% = 3

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 1

            Case 32

                Call PBP(player$(0) + " pops it up foul down the rf line")
                Call PBP(B$(D, B9%(D, 4)) + " crashes into the wall")

                po% = 4

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 1

            Case 33

                Call PBP(player$(0) + " pops it up foul by")
                Call PBP("the 3rd base dugout")
                Call PBP(B$(D, B9%(D, 5)) + " falls in trying to make the catch!!")

                po% = 5

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 1

            Case 34

                Call PBP(player$(0) + " pops it up foul")
                Call PBP("down the lf line")
                Call PBP(B$(D, B9%(D, 6)) + " tumbles over the railing")
                Call PBP("trying to make the catch!")
                Call DELAY

                po% = 6

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 1

            Case 35 To 37

                Call PBP(player$(0) + " lines one to deep left field")
                Call PBP(B$(D, B9%(D, 7)) + " races back...")
                Call PBP("He slams into the wall and is down!!")

                op% = 7

                Call PBP(B$(D, B9%(D, 8)) + " comes over and gets the ball in")

                I5 = P1%(D)
                I6 = 1

                Call ADDPIT(D, I5, I6)

                If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6): I6 = 4: Call INCBATOFF(P, I5, I6)
                If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6): I6 = 27: Call INCPITOFF(P, I5, I6)

                For idx = 0 To 3: A5%(idx) = 2: Next idx

                A5%(3) = 1
                A5%(1) = 3

                Call ADVANCEMENT(P, D, S2%, F%, I3)
                Call SCOREBOARD
                Call WINDEX

                po% = op%

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 5

            Case 38 To 40

                Call PBP(player$(0) + " drives a sinking liner")
                Call PBP("into deep center")
                Call PBP(B$(D, B9%(D, 8)) + " gets a good jump on it")
                Call PBP("He crashes into the wall and")
                Call PBP("the ball bounces away!!")
                Call PBP("The runners are circling the bases")
                Call PBP(B$(D, B9%(D, 9)) + " retrieves the ball")

                I5 = P1%(D)
                I6 = 1

                Call ADDPIT(D, I5, I6)

                I6 = 14

                Call ADDPIT(D, I5, I6)

                W% = 8

                If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6): I6 = 6: Call INCBATOFF(P, I5, I6)

                If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6): I6 = 29: Call INCPITOFF(P, I5, I6)

                A5%(0) = 4
                A5%(1) = 3
                A5%(2) = 2
                A5%(3) = 1

                Call ADVANCEMENT(P, D, S2%, F%, I3)
                Call PBP("It's an inside the park HOME RUN!!!")
                Call DELAY
                Call SCOREBOARD
                Call WINDEX

                po% = 8

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 5

            Case 41 To 43

                Call PBP(player$(0) + " lifts a deep drive into right")
                Call PBP(B$(D, B9%(D, 9)) + " races back...")
                Call PBP("He slams into the wall and is down!!")

                I5 = P1%(D)
                I6 = 1

                Call ADDPIT(D, I5, I6)

                W% = 9

                Call PBP(B$(D, B9%(D, 8)) + " comes over to get the ball back in")

                If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6): I6 = 5: Call INCBATOFF(P, I5, I6)

                If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6): I6 = 28: Call INCPITOFF(P, I5, I6)

                A5%(0) = 3
                A5%(1) = 3
                A5%(2) = 2
                A5%(3) = 1

                Call ADVANCEMENT(P, D, S2%, F%, I3)
                Call PBP("Triple!!")
                Call DELAY
                Call SCOREBOARD
                Call WINDEX

                po% = 9

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 5

            Case 44

                I5 = P1%(D)
                I6 = 1
                Call ADDPIT(D, I5, I6)

                W% = Int(Rnd(1) * 3) + 7

                Call PBP(player$(0) + " hits a sinking liner into " + C$(W%))
                Call PBP(B$(D, B9%(D, W%)) + " dives for the catch...")
                Call PBP("the ball rolls free!")
                Call PBP(B$(D, B9%(D, W% - 1)) + " gets the loose ball in")

                op% = W%

                I5 = P1%(D)
                I6 = 1

                Call ADDPIT(D, I5, I6)

                If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6): I6 = 4: Call INCBATOFF(P, I5, I6)
                If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6): I6 = 27: Call INCPITOFF(P, I5, I6)

                For idx = 0 To 3: A5%(idx) = 2: Next idx

                A5%(3) = 1
                A5%(1) = 3

                Call ADVANCEMENT(P, D, S2%, F%, I3)
                Call SCOREBOARD
                Call WINDEX

                po% = op%

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 5

            Case 45

                Call PBP(player$(0) + " is hit by a pitch and injured")
                Call PLYRHRT(P, P9, W5, W6, BC%, U%, D, MO)

            Case 46 To 49

                Call PBP(B$(D, B9%(D, 2)) + " is injured by a foul tip!")

                po% = 2

                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 1

            Case 50 To 58

                i = Int(Rnd(1) * 3) + 7

                If i = 9 Then hi1 = 3: hi2 = 9: hi3 = 8
                If i = 8 Then hi1 = 4: hi2 = 8: hi3 = 7
                If i = 7 Then hi1 = 6: hi2 = 7: hi3 = 8

                Call PBP(player$(0) + " hits a weak fly into short " + C$(i))
                Call PBP(B$(D, B9%(D, hi1)) + " goes out")
                Call PBP(B$(D, B9%(D, hi2)) + " is charging in")
                Call PBP("They collide and the ball rolls free!!")
                Call PBP(B$(D, B9%(D, hi3)) + " gets it back in")

                I5 = P1%(D)
                I6 = 1

                Call ADDPIT(D, I5, I6)

                If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6): I6 = 4: Call INCBATOFF(P, I5, I6)

                If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6): I6 = 27: Call INCPITOFF(P, I5, I6)

                For idx = 0 To 3: A5%(idx) = 2: Next idx

                A5%(3) = 1
                A5%(1) = 3
                Call ADVANCEMENT(P, D, S2%, F%, I3)
                Call SCOREBOARD
                Call WINDEX

                po% = hi1
                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                po% = hi2
                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 5

            Case 59 To 61
                Call PBP(player$(0) + " fouls the pitch off his foot")
                Call PBP("He is injured")
                Call PLYRHRT(P, P9, W5, W6, BC%, U%, D, MO)

                H6% = 1

                '62 to 64
            Case 62 To 64

                Call PBP(player$(0) + " pops it up in foul along the 3b line"): Call PBP("It drifts into foul territory")
                Call PBP(B$(D, B9%(D, 5)) + " and " + P$(D, P1%(D)) + " chase after it and collide!!")
                Call PBP(B$(D, B9%(D, 5)) + " is down and injured")

                po% = 5
                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                H6% = 1

            Case 65 To 70

                I5 = P1%(D)
                I6 = 1

                Call ADDPIT(D, I5, I6)

                W% = 8

                Call LONGFLY(D, W%)
                Call PBP(B$(D, B9%(D, 7)) + " collides with " + B$(D, B9%(D, 8)) + "!!")
                Call PBP("both fielders are down... ")
                Call PBP(B$(D, B9%(D, 6)) + " gets the ball back in")

                If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6): I6 = 4: Call INCBATOFF(P, I5, I6)
                If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6): I6 = 27: Call INCPITOFF(P, I5, I6)

                A5%(0) = 2
                A5%(1) = 3
                A5%(2) = 2
                A5%(3) = 1

                Call ADVANCEMENT(P, D, S2%, F%, I3)
                Call PBP("Double!!")
                Call SCOREBOARD
                Call WINDEX

                po% = 7
                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6)

                po% = 8
                Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6): H6% = 5

            Case 71 To 85

                F$ = player$(0) + " lines it off "

                i = Int(Rnd(1) * 5) + 1

                If i = 1 Then
                    F$ = F$ + "the leg of " + P$(D, P1%(D))
                    Call PBP(F$)

                    If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6)

                    If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6)

                    I5 = P1%(D)
                    I6 = 1

                    Call ADDPIT(D, I5, I6)

                    For idx = 0 To 3: A5%(idx) = 1: Next

                    Call ADVANCEMENT(P, D, S2%, F%, I3)
                    Call SCOREBOARD
                    Call WINDEX
                    Call PBP("He reaches on a single")
                    Call PBP(P$(D, P1%(D)) + " is down and in pain!")
                    Call INJPIT(P, D, IP%, PPH)
                    H6% = 5
                Else
                    'i = 2 to 5
                    po% = i + 1
                    F$ = F$ + "of " + B$(D, B9%(D, po%)) + " for a single"

                    Call PBP(F$)
                    Call DELAY

                    If B7%(P, B1!(P)) <> 1 Then I5 = B3%(P, B1!(P)): I6 = 0: Call INCBATOFF(P, I5, I6): I6 = 1: Call INCBATOFF(P, I5, I6)
                    If B7%(P, B1!(P)) = 1 Then I5 = P1%(P): I6 = 23: Call INCPITOFF(P, I5, I6): I6 = 24: Call INCPITOFF(P, I5, I6)

                    I5 = P1%(D)
                    I6 = 1

                    Call ADDPIT(D, I5, I6)

                    For idx = 0 To 3: A5%(idx) = 1: Next

                    Call ADVANCEMENT(P, D, S2%, F%, I3)
                    Call SCOREBOARD
                    Call WINDEX
                    Call PBP(B$(D, B9%(D, po%)) + " is down and injured")
                    Call INJURYLENGTH(IJL%, D, po%, U6, P, U9, P9, W5, W6): H6% = 5

                End If

            Case 86 To 89

                Call PBP(P$(D, P1%(D)) + " is motioning for " + M$(D) + " to come out")
                Call PBP("It appears he has a blister")
                Call PBP("He will have to leave the game")
                Call INJPIT(P, D, IP%, PPH)

                H6% = 1

            Case 90

                Call PBP(player$(0) + " takes a mighty swing!")
                Call PBP("It looks like he injured himself")
                Call PLYRHRT(P, P9, W5, W6, BC%, U%, D, MO)

                H6% = 1

            Case 91

                Call PBP("Time is called")
                Call PBP("Morganna strikes again!!")

                H6% = 1

            Case 92 To 100

                Call PBP(U$(1) + " calls time to dust off the plate")

                H6% = 1

        End Select

    End If

End Sub


'------------------------------
'   WEATHER Subroutine
'------------------------------
' ...explanation...
Sub WEATHER ()

    If usingGfx = 1 Then Cls: Screen 0

    Call FRAMEOPTION(5, 1)

    If L%(1, 9) = 1 Then
        Locate , 11: Print "TEMPERATURE: 70"
        Locate , 11: Print "WEATHER: DOME"
        Locate , 11: Print "WIND: NONE"
    Else
        Locate , 11: Print "TEMPERATURE: "; TP%
        Locate , 11: Print "SKY CONDITIONS: "; SC$(SC%)
        WS% = Int(Rnd(1) * 15) + 7
        Locate , 11: Print "WIND: "; WI$
        Locate , 11: Print "PRECIPITATION: "; PC$(PC%)
    End If

    Color 15, 0
    Locate 24, 1: Print "HIT ANY KEY TO CONTINUE";
    I$ = GetKeyPress$

    If usingGfx = 1 Then
        Screen imageScreen&
    Else
        Color 15, 0
    End If

End Sub


'------------------------------
'   COLCHK Subroutine
'------------------------------
' ...explanation...
Sub COLCHK (P9, I)

    If B%(P9, I, 21) >= 98 Then Color 0, 7

End Sub

'------------------------------
'   DRAWBOX Subroutine
'------------------------------
' ...explanation...
Sub DRAWBOX (JJ, teamIdx)

    Locate 6, 8: Color L%(teamIdx, 11), L%(teamIdx, 12)

    Print " "; Chr$(201); String$(61, 205); Chr$(187); " ";

    For II = 1 To JJ:
        Locate 6 + II, 8
        Print " " + Chr$(186); String$(61, 32); Chr$(186) + " ";
    Next

    Locate 7 + JJ, 8

    Print " "; Chr$(200); String$(61, 205); Chr$(188); " ";

    Locate 7

End Sub

'------------------------------
'   GETWEATHER Subroutine
'------------------------------
' ...explanation...
Sub GETWEATHER (WD%, WS%, MO%, WF!, SC%, TP%, RD)

    If L%(1, 13) > 82 Then
        ID = Int(Rnd(1) * 79) + 1
    Else
        ID = L%(1, 13)
    End If

    'LAYOUT OF THE PARKS FILE IS
    'NAME, CAPACITY, LF,LCF,CF,RCF,RF,GRASS,DOME,WINFAC
    '6 MONTHS OF DATA, TEMP, DELTA,RL,LR,INL,INC,INR,OUTL,OUTC,OUTR,WS09,WS1014,WS1519,WS20,PRECIP

    Open "PARKS.DBF" For Random As #1 Len = 240

    Field #1, 40 As Q3$(0), 4 As Q3$(1), 2 As Q3$(2), 2 As Q3$(3), 2 As Q3$(4), 2 As Q3$(5), 2 As Q3$(6), 2 As Q3$(7), 2 As Q3$(8), 2 As Q3$(9)

    For I = 0 To 5
        For I1 = 0 To 14
            Field #1, 60 + I * 30 + I1 * 2 As X$, 2 As Q3$(10 + I1 + I * 15)
        Next
    Next

    Get #1, ID

    avgAttendance& = CVL(Q3$(1))
    LF = CVI(Q3$(2))
    LCF = CVI(Q3$(3))
    CF = CVI(Q3$(4))
    RCF = CVI(Q3$(5))
    RF = CVI(Q3$(6))
    TG = CVI(Q3$(7))
    DOME = CVI(Q3$(8))
    WINFAC = CVI(Q3$(9))

    For I = 0 To 5
        For I1 = 0 To 14
            MON(I, I1) = CVI(Q3$(10 + I1 + I * 15))
        Next
    Next
    Close 1

    If MO% < 4 Then MO% = 4
    If MO% > 9 Then MO% = 9

    SM% = MO% - 4

    If Int(Rnd(1) * 100) + 1 <= 50 Then
        TP% = MON(SM%, 0) + Int(Rnd(1) * MON(SM%, 1) + 1)
    Else
        TP% = MON(SM%, 0) - Int(Rnd(1) * MON(SM%, 1) + 1)
    End If

    SUM = 0

    For I = 2 To 9
        SUM = SUM + MON(SM%, I)
    Next

    RN = Int(Rnd(1) * SUM) + 1

    SUM = 0

    For I = 2 To 9
        SUM = SUM + MON(SM%, I)
        If RN <= SUM Then Exit For
    Next

    WD% = I

    SUM = 0
    For I = 10 To 13
        SUM = SUM + MON(SM%, I)
    Next

    RN = Int(Rnd(1) * SUM) + 1

    SUM = 0

    For I = 10 To 13
        SUM = SUM + MON(SM%, I)
        If RN <= SUM Then Exit For
    Next

    If I = 10 Then WS% = Int(Rnd(1) * 10)
    If I = 11 Then WS% = Int(Rnd(1) * 5) + 10
    If I = 12 Then WS% = Int(Rnd(1) * 5) + 15
    If I = 13 Then WS% = Int(Rnd(1) * 10) + 20

    WF! = 1

    If WD% > 3 And WD% < 7 And WS% >= 15 Then WF! = 1 - WINFAC / 100
    If WD% > 6 And WD% < 10 And WS% >= 15 Then WF! = 1 + WINFAC / 100

    PC% = 4
    SC% = Int(Rnd(1) * 2) + 1

    If Int(Rnd(1) * 100) + 1 <= MON(SM%, 14) Then

        PC% = Int(Rnd(1) * 3) + 1
        SC% = 3

        Call d100(RN)
        If RN <= 5 Then RD = 1: RE = Int(Rnd(1) * 3) + 6

    End If

    If L%(1, 13) = 2 Or L%(1, 13) = 4 Or L%(1, 13) = 10 Or L%(1, 13) = 13 Or L%(1, 13) = 24 Then PC% = 4: SC% = 4

End Sub


'------------------------------
'   LetterToNumber Subroutine
'------------------------------
' ...explanation...
Sub LetterToNumber (I$)

    Select Case UCase$(I$)
        Case "A": I$ = "10"
        Case "B": I$ = "11"
        Case "C": I$ = "12"
        Case "D": I$ = "13"
        Case "E": I$ = "14"
        Case "F": I$ = "15"
        Case "G": I$ = "16"
        Case "H": I$ = "17"
        Case "I": I$ = "18"
        Case "J": I$ = "19"
        Case "K": I$ = "20"
        Case "L": I$ = "21"
        Case "M": I$ = "22"
    End Select

End Sub

'------------------------------
'   LINSWAP Subroutine
'------------------------------
' ...explanation...
Sub LINSWAP (P9)

    Locate 18, 59: Print "B.O. PLYR 1 (1-9)";

    Do
        I$ = GetKeyPress$
        K1 = Val(I$)
    Loop Until K1 >= 1 And K1 <= 9 Or B7%(P9, K1) <> 1

    Locate 19, 59: Print "B.O. PLYR 2 (1-9)";

    Do
        I$ = GetKeyPress$
        K2 = Val(I$)
    Loop Until K2 >= 1 And K2 <= 9 Or B7%(P9, K2) <> 1

    Swap B7%(P9, K2), B7%(P9, K1)
    Swap B3%(P9, K1), B3%(P9, K2)

    B9%(P9, B7%(P9, K1)) = B3%(P9, K1)
    B9%(P9, B7%(P9, K2)) = B3%(P9, K2)

    Call NEWLINES(P9)

    Locate 18, 59: Print Space$(17)
    Locate 19, 59: Print Space$(17)

End Sub

'------------------------------
'   NEWLINES Subroutine
'------------------------------
' ...explanation...
Sub NEWLINES (P9)

    For I = 1 To 9

        Call POSITION(I)

        Print Using "# "; I;

        If B7%(P9, I) = 1 And I5 <> 66 Then Print P$(P9, B3%(P9, I));

        'dudVal = B3%(P9, I)
        If B7%(P9, I) <> 1 Then Print B$(P9, B3%(P9, I));

        Print Tab(74);

        Print C$(B7%(P9, I));

    Next I

    I5 = 0

End Sub

'------------------------------
'   POSITION Subroutine
'------------------------------
' ...explanation...
Sub POSITION (I)

    Locate I + 7, 59

End Sub

'------------------------------
'   POSSWAP Subroutine
'------------------------------
' ...explanation...
Sub POSSWAP (P9)

    Locate 18, 59: Print "B.O. PLYR 1 (1-9)";

    Do
        I$ = GetKeyPress$
        K1 = Val(I$)
    Loop Until K1 >= 1 And K1 <= 9 Or B7%(P9, K1) <> 1

    Locate 19, 59: Print "B.O. PLYR 2 (1-9)";

    Do
        I$ = GetKeyPress$
        K2 = Val(I$)
    Loop Until K2 >= 1 And K2 <= 9 Or B7%(P9, K2) <> 1

    Swap B7%(P9, K2), B7%(P9, K1)

    B9%(P9, B7%(P9, K1)) = B3%(P9, K1)
    B9%(P9, B7%(P9, K2)) = B3%(P9, K2)

    Call NEWLINES(P9)

    Locate 18, 59: Print Space$(17)
    Locate 19, 59: Print Space$(17)

End Sub

'------------------------------
'   SHOWBATTERS Subroutine
'------------------------------
' ...explanation...
Sub SHOWBATTERS (P9)

    Cls

    Color 14
    Print "#";: Color L%(P9, 11), L%(P9, 12): Print A$(P9);

    Color 14, 0

    Locate , 15: Print "B  POS  AB  2B 3B HR  BB  SO SRA SB G%  BA"

    Locate 2

    For I = 0 To 22: Locate , 1

        If B$(P9, I) = "XXX" Or Left$(B$(P9, I), 1) = " " Or B$(P9, I) = "" Then
            B%(P9, I, 21) = 98
        Else
            Color 2, 0

            If I < 10 Then Print Using "#"; I;
            If I > 9 Then Print X$(I - 10);

            Color 15, 0
            Call COLCHK(P9, I)

            'Name / Position
            Locate , 3: Print B$(P9, I);
            Color 15, 0
            Locate , 15: Print B1$(B%(P9, I, 0) + 2);

            Locate , 18: If B%(P9, I, 22) <> -1 Then Print Using "#"; B%(P9, I, 22);
            Locate , 19: If B%(P9, I, 23) <> -1 Then Print Using "#"; B%(P9, I, 23);
            Locate , 20: If B%(P9, I, 24) <> -1 Then Print Using "#"; B%(P9, I, 24);
            Locate , 21: If B%(P9, I, 25) <> -1 Then Print Using "#"; B%(P9, I, 25);

            Locate , 23

            Print Using "### ## ## ## ### ###"; B%(P9, I, 4); B%(P9, I, 7); B%(P9, I, 8); B%(P9, I, 9); B%(P9, I, 11); B%(P9, I, 12);

            Locate , 44: Print Using "#"; B%(P9, I, 16);: Print Using "#"; B%(P9, I, 34);: Print Using "#"; B%(P9, I, 33);

            Locate , 47
            '           SB   G%
            Print Using "### ##"; B%(P9, I, 13); B%(P9, I, 18);

            'BA
            If B%(P9, I, 6) = B%(P9, I, 4) And B%(P9, I, 6) <> 0 Then
                Print "1.000";
            Else
                If B%(P9, I, 4) = 0 Then
                    Print " .---";
                Else
                    bAvg! = B%(P9, I, 6) / B%(P9, I, 4)
                    If bAvg! = 0 Then
                        Print " .000";
                    Else
                        Print " ."; Using "###"; bAvg! * 1000;
                    End If
                End If
            End If

            If I <> 22 Then Print

        End If

    Next I

End Sub

'------------------------------
'     SHOWFIELD Subroutine
'------------------------------
' ...explanation...
Sub SHOWFIELD (P9)

    'DISPLAY FIELDING AVERAGES
    Locate 1, 15
    Color 14, 0
    Print "P1 FAVG A R P2 FAVG A R P3 FAVG A R P4 FAVG A R                 "

    Color 15, 0
    Locate 2

    For I = 0 To 22

        Locate , 15: Print Space$(64);

        If B$(P9, I) <> "XXX" And Left$(B$(P9, I), 1) <> " " And B$(P9, I) <> "" Then
            Locate , 16: If B%(P9, I, 22) <> -1 Then Print Using "# #### # #"; B%(P9, I, 22); B%(P9, I, 26); B%(P9, I, 33); B%(P9, I, 34);
            Locate , 28: If B%(P9, I, 23) <> -1 Then Print Using "# #### # #"; B%(P9, I, 23); B%(P9, I, 27); B%(P9, I, 35); B%(P9, I, 36);
            Locate , 40: If B%(P9, I, 24) <> -1 Then Print Using "# #### # #"; B%(P9, I, 24); B%(P9, I, 28); B%(P9, I, 37); B%(P9, I, 38);
            Locate , 52: If B%(P9, I, 25) <> -1 Then Print Using "# #### # #"; B%(P9, I, 25); B%(P9, I, 29); B%(P9, I, 39); B%(P9, I, 40);
            If I <> 22 Then Print
        End If
    Next I

End Sub

'------------------------------
'   ShowSplit Subroutine
'------------------------------
' ...explanation...
Sub ShowSplit (P9)

    'DISPLAY SPLIT STATS
    Locate 1, 15
    Color 14, 0

    Print "VS L  AB 2B 3B HR  BB   K   AVG  VS R  AB 2B 3B HR  BB   K   AVG"
    Color 15, 0

    Locate 2

    For I = 0 To 22

        Locate , 15: Print "                                                                ";

        If B$(P9, I) <> "XXX" And Left$(B$(P9, I), 1) <> " " And B$(P9, I) <> "" Then

            Locate , 20: Print Using "### ## ## ## ### ### "; B%(P9, I, 42); B%(P9, I, 44); B%(P9, I, 45); B%(P9, I, 46); B%(P9, I, 47); B%(P9, I, 48);

            If B%(P9, I, 42) = 0 Or B%(P9, I, 43) = 0 Then
                Print " .000";
            Else
                If B%(P9, I, 42) = B%(P9, I, 43) Then
                    Print "1.000";
                Else
                    Print Using " .###"; B%(P9, I, 43) / B%(P9, I, 42);
                End If
            End If

            Locate , 53: Print Using "### ## ## ## ### ### "; B%(P9, I, 49); B%(P9, I, 51); B%(P9, I, 52); B%(P9, I, 53); B%(P9, I, 54); B%(P9, I, 55);

            'AVG
            If B%(P9, I, 49) = 0 Or B%(P9, I, 50) = 0 Then
                Print " .000";
            Else
                If B%(P9, I, 49) = B%(P9, I, 50) Then
                    Print "1.000";
                Else
                    Print " ."; Using "###"; B%(P9, I, 50) / B%(P9, I, 49);
                End If
            End If

            If I <> 22 Then Print

        End If

    Next I

End Sub


'------------------------------
'      EVENTS Subroutine
'------------------------------
' ...explanation...
Sub EVENTS (specialCount, specialStat)

    Shared E%()

    If _FileExists("EVENTS.BOX") Then

        Open "EVENTS.BOX" For Input As #1
        For X = 1 To 13
            Input #1, E%(X)
        Next
        Close 1

        checkSpecial% = 0

        If INNING% > E%(1) Or S6%(1, 0) < E%(2) Or S6%(0, 0) < E%(2) Or S6%(1, 0) > E%(3) Or S6%(0, 0) > E%(3) Or S6%(1, 1) > E%(5) Or S6%(0, 1) > E%(5) Or S6%(1, 1) < E%(4) Or S6%(0, 1) < E%(4) Then
            checkSpecial% = 1
        Else

            For I = 0 To 1

                For I1 = 0 To 22

                    If B8%(I, I1, 1) > E%(6) Or B8%(I, I1, 2) > E%(7) Or B8%(I, I1, 3) > E%(8) Or B8%(I, I1, 4) > E%(9) Or B8%(I, I1, 5) > E%(10) Or B8%(I, I1, 6) > E%(11) Or B8%(I, I1, 9) > E%(12) Then
                        checkSpecial% = 1
                        Exit For
                    End If

                    If checkSpecial% = 1 Then Exit For

                Next

            Next

            If checkSpecial% <> 1 Then

                For I = 0 To 1

                    For I1 = 0 To 21

                        If P8%(I, I1, 5) > E%(13) Then
                            checkSpecial% = 1
                            Exit For
                        End If

                        If checkSpecial% = 1 Then Exit For

                    Next

                Next

            End If

        End If

    End If 'Done checking EVENTS.BOX file

    If checkSpecial% = 1 Then
        Call FoundSpecial(specialCount, specialStat)
    End If

End Sub


'------------------------------
'   LocateInning routine
'------------------------------
' ...explanation...
Sub LocateInning (I2)

    If I2 < 4 Then Locate , ((2 * I2) + 18)
    If I2 > 3 And I2 < 7 Then Locate , ((2 * I2) + 19)
    If I2 > 6 And I2 < 10 Then Locate , ((2 * I2) + 20)

    If I2 > 9 And I2 < 13 Then Locate , ((2 * (I2 - 9)) + 18)
    If I2 > 12 And I2 < 16 Then Locate , ((2 * (I2 - 9)) + 19)
    If I2 > 15 And I2 < 19 Then Locate , ((2 * (I2 - 9)) + 20)

    If I2 > 18 And I2 < 22 Then Locate , ((2 * (I2 - 18)) + 18)
    If I2 > 21 And I2 < 25 Then Locate , ((2 * (I2 - 18)) + 19)
    If I2 > 24 And I2 < 28 Then Locate , ((2 * (I2 - 18)) + 20)

End Sub


'------------------------------
'    FoundSpecial Subroutine
'------------------------------
' ...explanation...
Sub FoundSpecial (specialCount, specialStat)

    'Beep
    Spec$ = diskPaths$(1) + "*.SPC"
    specialCount = FCount%(Spec$)
    specialCount = specialCount + 1
    specialStat = 1

End Sub


'------------------------------
'      CheckRecords routine
'------------------------------
' ...explanation...
Sub CheckRecords ()

    Shared DB, HR, TR, SB
    Shared DB$(), E$(), HR$(), SB$(), TR$()

    For I = 0 To 1:
        For I1 = 0 To 21:
            If P8%(I, I1, 1) < 0 Then P8%(I, I1, 1) = 0
        Next I1
    Next I

    For I = 0 To 1:

        For I1 = 0 To 21
            If P%(I, I1, 15) = 1 Then
                If P8%(I, I1, 0) >= 18 And P8%(I, I1, 3) <= 3 Then P8%(I, I1, 21) = 1
            End If
        Next I1

    Next I

    For I = 0 To 1:

        For I1 = 0 To 22

            If B8%(I, I1, 11) <> 0 Then
                'Where does value of E come from?
                'Or from LOADER, it's a single not INT
                If B8%(I, I1, 11) = 1 Then
                    E$(E) = B$(I, I1)
                Else
                    E$(E) = B$(I, I1) + Str$(B8%(I, I1, 11))
                End If

                E$(E) = E$(E) + " (" + Right$(Str$(B5%(I, I1, 11)), (Len(Str$(B5%(I, I1, 11))) - 1)) + ")"
                E = E + 1
            End If

            '        ***CHECKING DOUBLES***
            If B8%(I, I1, 4) <> 0 Then
                If B8%(I, I1, 4) = 1 Then
                    DB$(DB) = B$(I, I1)
                Else
                    DB$(DB) = B$(I, I1) + Str$(B8%(I, I1, 4))
                End If

                DB$(DB) = DB$(DB) + " (" + Right$(Str$(B5%(I, I1, 4)), (Len(Str$(B5%(I, I1, 4))) - 1)) + ")"
                DB = DB + 1

            End If

            '        ***CHECKING TRIPLES***
            If B8%(I, I1, 5) <> 0 Then
                If B8%(I, I1, 5) = 1 Then
                    TR$(TR) = B$(I, I1)
                Else
                    TR$(TR) = B$(I, I1) + Str$(B8%(I, I1, 5))
                End If

                TR$(TR) = TR$(TR) + " (" + Right$(Str$(B5%(I, I1, 5)), (Len(Str$(B5%(I, I1, 5))) - 1)) + ")"
                TR = TR + 1

            End If

            '        ***CHECKING HOME RUNS***
            If B8%(I, I1, 6) <> 0 Then
                If B8%(I, I1, 6) = 1 Then
                    HR$(HR) = B$(I, I1)
                Else
                    HR$(HR) = B$(I, I1) + Str$(B8%(I, I1, 6))
                End If

                HR$(HR) = HR$(HR) + " (" + Right$(Str$(B5%(I, I1, 6)), (Len(Str$(B5%(I, I1, 6))) - 1)) + ")"
                HR = HR + 1

            End If

            '        ***CHECKING STOLEN BASES ***
            If B8%(I, I1, 9) <> 0 Then
                If B8%(I, I1, 9) = 1 Then
                    SB$(SB) = B$(I, I1) + " (" + Right$(Str$(B5%(I, I1, 9)), (Len(Str$(B5%(I, I1, 9))) - 1)) + ")": SB = SB + 1
                Else
                    SB$(SB) = B$(I, I1) + Str$(B8%(I, I1, 9)) + " (" + Right$(Str$(B5%(I, I1, 9)), (Len(Str$(B5%(I, I1, 9))) - 1)) + ")": SB = SB + 1
                End If
            End If

        Next I1

    Next I

    For I = 0 To 1

        For I1 = 0 To 21

            If P8%(I, I1, 34) <> 0 Then

                If P8%(I, I1, 34) = 1 Then
                    E$(E) = P$(I, I1)
                Else
                    E$(E) = P$(I, I1) + Str$(P8%(I, I1, 34))
                End If

                E$(E) = E$(E) + " (" + Right$(Str$(P5%(I, I1, 34)), (Len(Str$(P5%(I, I1, 34))) - 1)) + ")"
                E = E + 1

            End If

            '        ***CHECKING DOUBLES***
            If P8%(I, I1, 27) <> 0 Then

                If P8%(I, I1, 27) = 1 Then
                    DB$(DB) = P$(I, I1)
                Else
                    DB$(DB) = P$(I, I1) + Str$(P8%(I, I1, 27))
                End If

                DB$(DB) = DB$(DB) + " (" + Right$(Str$(P5%(I, I1, 27)), (Len(Str$(P5%(I, I1, 27))) - 1)) + ")"
                DB = DB + 1

            End If

            '        ***CHECKING TRIPLES***
            If P8%(I, I1, 28) <> 0 Then

                If P8%(I, I1, 28) = 1 Then
                    TR$(TR) = P$(I, I1)
                Else
                    TR$(TR) = P$(I, I1) + Str$(P8%(I, I1, 28))
                End If

                'Error #9 = index ???
                TR$(TR) = TR$(TR) + " (" + Right$(Str$(P5%(I, I1, 28)), (Len(Str$(P5%(I, I1, 28))) - 1)) + ")"
                TR = TR + 1

            End If

            '        ***CHECKING HOME RUNS***
            If P8%(I, I1, 29) <> 0 Then

                If P8%(I, I1, 29) = 1 Then
                    HR$(HR) = P$(I, I1)
                Else
                    HR$(HR) = P$(I, I1) + Str$(P8%(I, I1, 29))
                End If

                HR$(HR) = HR$(HR) + " (" + Right$(Str$(P5%(I, I1, 29)), (Len(Str$(P5%(I, I1, 29))) - 1)) + ")"
                HR = HR + 1

            End If

            '        ***CHECKING STOLEN BASES ***
            If P8%(I, I1, 32) <> 0 Then
                If P8%(I, I1, 32) = 1 Then
                    SB$(SB) = P$(I, I1) + " (" + Right$(Str$(P5%(I, I1, 32)), (Len(Str$(P5%(I, I1, 32))) - 1)) + ")"
                    SB = SB + 1
                Else
                    SB$(SB) = P$(I, I1) + Str$(P8%(I, I1, 32)) + " (" + Right$(Str$(P5%(I, I1, 32)), (Len(Str$(P5%(I, I1, 32))) - 1)) + ")"
                    SB = SB + 1
                End If
            End If

        Next I1
    Next I

    gameTime$ = "2:"

    MIN = Int(Rnd(1) * 60)

    If MIN < 10 Then
        MIN$ = "0" + Right$(Str$(MIN), 1): gameTime$ = gameTime$ + MIN$
    Else
        gameTime$ = gameTime$ + Right$(Str$(MIN), 2)
    End If

    For I = 0 To 1:
        For I1 = 0 To 21:
            If P%(I, I1, 15) >= 98 Then P%(I, I1, 15) = 0
        Next I1
    Next I

    For I = 0 To 1:
        For I1 = 0 To 22:
            If B%(I, I1, 21) >= 98 Then B%(I, I1, 21) = 0
            If B%(I, I1, 21) <> 0 Then B8%(I, I1, 14) = 1
        Next I1
    Next I

    Cls
    Print "PLEASE WAIT..."

    For I = 0 To 1

        M = 23
        L = 22

        Do
            7363 '
            I6 = 0
            I7 = 0

            Do
                7364 '
                H1 = 0
                H2 = 0
                H3 = 0

                If X0%(I, 2, I6) > X0%(I, 2, I6 + 1) Then

                    H1 = X0%(I, 2, I6)
                    H2 = X0%(I, 1, I6)
                    H3 = X0%(I, 0, I6)
                    X0%(I, 0, I6) = X0%(I, 0, I6 + 1)
                    X0%(I, 1, I6) = X0%(I, 1, I6 + 1)
                    X0%(I, 2, I6) = X0%(I, 2, I6 + 1)
                    X0%(I, 2, I6 + 1) = H1
                    X0%(I, 1, I6 + 1) = H2
                    X0%(I, 0, I6 + 1) = H3
                    I7 = I6

                End If

                I6 = I6 + 1

            Loop While I6 <= L

            If I7 <> 0 Then
                L = I7 - 1
            End If

        Loop While I7 <> 0

    Next I

End Sub


'------------------------------
'   InningPrintBox routine
'------------------------------
' ...explanation...
Sub InningPrintBox (I2)

    If I2 < 4 Then Locate , ((2 * I2) + 18)
    If I2 > 3 And I2 < 7 Then Locate , ((2 * I2) + 19)
    If I2 > 6 And I2 < 10 Then Locate , ((2 * I2) + 20)

    If I2 > 9 And I2 < 13 Then Locate , ((3 * (I2 - 9)) + 18)
    If I2 > 12 And I2 < 16 Then Locate , ((3 * (I2 - 9)) + 19)
    If I2 > 15 And I2 < 19 Then Locate , ((3 * (I2 - 9)) + 20)

    If I2 > 18 And I2 < 22 Then Locate , ((3 * (I2 - 18)) + 18)
    If I2 > 21 And I2 < 25 Then Locate , ((3 * (I2 - 18)) + 19)
    If I2 > 24 And I2 < 28 Then Locate , ((3 * (I2 - 18)) + 20)

End Sub

'------------------------------
'   InningPrintFile routine
'------------------------------
' ...explanation...
Sub InningPrintFile (I2)

    If I2 < 4 Then Print #2, Tab((2 * I2) + 15);
    If I2 > 3 And I2 < 7 Then Print #2, Tab((2 * I2) + 16);
    If I2 > 6 And I2 < 10 Then Print #2, Tab((2 * I2) + 17);

    If I2 > 9 And I2 < 13 Then Print #2, Tab((3 * I2) + 8);
    If I2 > 12 And I2 < 16 Then Print #2, Tab((3 * I2) + 9);
    If I2 > 15 And I2 < 19 Then Print #2, Tab((3 * I2) + 10);

    If I2 > 18 And I2 < 22 Then Print #2, Tab((3 * I2) + 11);
    If I2 > 21 And I2 < 25 Then Print #2, Tab((3 * I2) + 12);
    If I2 > 24 And I2 < 28 Then Print #2, Tab((3 * I2) + 13);

End Sub


'------------------------------
'   GETRPBP Subroutine
'------------------------------
' ...explanation...
' This routine works as long as the PBP file structure stays fixed
' pbpIdx% is the record index to grab from the file
' Where to grab is fixed throughout the code depending on context

Sub GETRPBP (range%, minIdx%, Y$, D)

    pbpIdx% = Int(Rnd(1) * range%) + minIdx%

    Open "REVISED.PBP" For Random As #1 Len = 44
    Field #1, 44 As YY$
    Get #1, pbpIdx%
    Y$ = _Trim$(YY$)
    Close 1

    'Y$ = _Trim$(YYY$(pbpIdx%))

    If TGTBASE% = 3 And Left$(Y$, 2) = "Q1" Then Y$ = "Q2 " + Right$(Y$, Len(Y$) - 3)
    If TGTBASE% = 3 And Right$(Y$, 2) = "Q1" Then Y$ = Left$(Y$, Len(Y$) - 2) + "Q2"

    If Left$(Y$, 2) = "BB" Then Y$ = player$(0) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "Q1" Then Y$ = player$(1) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "Q2" Then Y$ = player$(2) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "PP" Then Y$ = P$(D, P1%(D)) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "UU" Then Y$ = U$(1) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "XX" Then Y$ = B$(D, B9%(D, 5)) + " and " + B$(D, B9%(D, 6)) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "TT" Then Y$ = B$(D, B9%(D, 5)) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "FB" Then Y$ = B$(D, B9%(D, 3)) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "YY" Then Y$ = B$(D, B9%(D, 4)) + " and " + B$(D, B9%(D, 3)) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "ZZ" Then Y$ = B$(D, B9%(D, 4)) + " and " + B$(D, B9%(D, 6)) + Right$(Y$, Len(Y$) - 2)
    If Left$(Y$, 2) = "Q4" Then Y$ = player$(4) + Right$(Y$, Len(Y$) - 2)
    If Right$(Y$, 3) = " PP" Then Y$ = Left$(Y$, Len(Y$) - 2) + P$(D, P1%(D))
    If Right$(Y$, 3) = " BB" Then Y$ = Left$(Y$, Len(Y$) - 2) + player$(0)
    If Right$(Y$, 2) = "Q1" Then Y$ = Left$(Y$, Len(Y$) - 2) + player$(1)
    If Right$(Y$, 2) = "Q2" Then Y$ = Left$(Y$, Len(Y$) - 2) + player$(2)
    If Right$(Y$, 2) = "UU" Then Y$ = Left$(Y$, Len(Y$) - 2) + U$(1)
    If Right$(Y$, 2) = "Q4" Then Y$ = Left$(Y$, Len(Y$) - 2) + player$(4)
    If Right$(Y$, 3) = " TT" Then Y$ = Left$(Y$, Len(Y$) - 2) + B$(D, B9%(D, 5))
    If Right$(Y$, 2) = "FB" Then Y$ = Left$(Y$, Len(Y$) - 2) + B$(D, B9%(D, 3))
    If Right$(Y$, 3) = " XX" Then Y$ = Left$(Y$, Len(Y$) - 2) + B$(D, B9%(D, 5)) + " and " + B$(D, B9%(D, 6))
    If Right$(Y$, 2) = "YY" Then Y$ = Left$(Y$, Len(Y$) - 2) + B$(D, B9%(D, 3)) + " and " + B$(D, B9%(D, 4))
    If Right$(Y$, 3) = " ZZ" Then Y$ = Left$(Y$, Len(Y$) - 2) + B$(D, B9%(D, 6)) + " and " + B$(D, B9%(D, 4))

End Sub

'------------------------------
'   STRIPRPBP Subroutine
'------------------------------
' ...explanation...
Sub STRIPRPBP (range%, minIdx%, Y$, D)

    stringPosition% = 1

    'Check each character of PBP string
    Do

        test = Asc(Mid$(Y$, stringPosition%, 1))

        'If it is a non-printable character (corrupt data)
        If test > 122 Or test < 32 Then
            'Get a new PBP string to use
            stringPosition% = 1
            Call GETRPBP(range%, minIdx%, Y$, D)
        Else
            stringPosition% = stringPosition% + 1
        End If

    Loop Until stringPosition% = Len(Y$)

End Sub

'------------------------------
'    LDRNRCTDN Subroutine
'------------------------------
' ...explanation...
Sub LDRNRCTDN ()

    If S4% = 7 Or S4% = 6 Or S4% = 5 Or S4% = 3 Then
        A5%(3) = 11
        For I = 0 To 2: A5%(I) = 1: Next
    End If

    If S4% = 2 Or S4% = 4 Then
        A5%(0) = 1
        A5%(1) = 1
        A5%(2) = 11
    End If

    If S4% = 1 Then
        A5%(1) = 11
        A5%(0) = 1
    End If

    If S4% = 0 Then A5%(0) = 11

    If PLB = 0 Then Call PBP(player$(0) + " bunts it hard!")
    If PLB = 0 Then Call PBP(player$(4) + " makes an easy play")

    PLB = 0
    O%(0) = O%(0) + 1
    O%(1) = O%(1) + 1

    Call ADDSTTS(P, D)
    Call CREDITASSIST(W%, D)
    Call ADVANCEMENT(P, D, S2%, F%, I3)
    Call CREDITPUTOUT(I3, FB2P%, AST%, D)

End Sub

'------------------------------
'   PBP Subroutine
'------------------------------
' ...explanation...

' Has been updated from original
' source to determine Or we're
' printing on GFX or text screen
Sub PBP (F$)

    If pbpDelay! > 0 Then

        F$ = PadRight(F$, 44)
        'Should this ever be more than 44 characters?

        F$ = Left$(F$, 44)
        PB% = PB% + 1

        ' Put PBP text in a slot for line PB%
        If PB% < 9 Then G$(PB%) = F$

        ' Or we're past line 8, move all slots down
        ' to make room
        If PB% > 8 Then

            For I9 = 1 To 7
                G$(I9) = G$(I9 + 1)
            Next

            G$(8) = F$

        End If

        'Print all 8 lines from scratch
        For I9 = 1 To 8

            If usingGfx = 1 Then
                Color 4294967295
                _PrintMode _FillBackground , imageScreen&
                text$ = G$(I9)
                PrintOnGfx 20, I9 + 3, text$, imageScreen&
            Else
                Locate 14 + I9, 1
                Print G$(I9)
            End If

        Next

        Call DELAY

    End If

End Sub


'------------------------------
'   POSTGAME Subroutine
'------------------------------
' ...explanation...
Sub POSTGAME ()

    Call CheckRecords
    Call EVENTS(specialCount, specialStat)
    endGame = 1

    Do
        I3 = 0

        If S6%(1, 0) - S6%(0, 0) > 0 Then I3 = 1
        If P2%(I3) <> P1%(I3) And S1%(I3) = -1 And P8%(I3, P1%(I3), 0) >= 9 And P8%(I3, P1%(I3), 0) <= 12 And P6%(I3) > 0 And P8%(I3, P1%(I3), 3) < 3 Then S1%(I3) = P1%(I3)
        If P2%(I3) = S1%(I3) Then S1%(I3) = -1

        Color 15, 0
        Cls

        Color 14: Print "(0) ";
        Color 15: Print "STATS TO SCREEN"
        Print

        Color 14: Print "(1) ";
        Color 15: Print "STATS TO PRINTER"
        Print

        Color 14: Print "(2) ";
        Color 15: Print "STATS TO TEXT FILE"

        If AP% = 1 And U6 = 2 Then
            X = 2
        Else
            Do
                I$ = GetKeyPress$
                X = Val(I$)
            Loop Until X >= 0 And X <= 2
        End If

        Call BOXOPTIONS(X)

        'Reset option for next call
        If X <> 0 Then X = 0

        'Prompt to display stats again
        Color 15, 0
        Cls

        If Not (AP% = 1 And U6 = 2) Then

            Do
                'Using Home Team's color for the box
                Call TEAMBOX(1, 1)
                U$ = "DISPLAY STATS AGAIN (YN)"
                Locate 7, (80 - Len(U$)) / 2
                Print U$
                Color 15, 0
                I$ = GetKeyPress$
            Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

        End If

    Loop Until UCase$(I$) = "N" Or (AP% = 1 And U6 = 2)

    Call SAVESTATS

    'If we had special events
    If specialStat = 1 Then

        NM$ = "BOX" + Mid$(Str$(specialCount), 2, Len(Str$(specialCount))) + ".SPC"

        'Append special events
        Call BOX2SPC(NM$)

        Call BOX2FILE(2, NM$)

    End If

    endGame = 0
    specialStat = 0

End Sub


'------------------------------
'    SAVESTATS Subroutine
'------------------------------
' ...explanation...
Sub SAVESTATS ()

    Shared SX%()

    Shared scheduleFile$

    Color 15, 0
    Cls

    If AP <> 1 Then

        Call TEAMBOX(1, 1)

        Do
            U$ = "SAVE STATS (YN)"
            Locate 7, (80 - Len(U$)) / 2
            Print U$
            Color 15, 0
            I$ = GetKeyPress$
        Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

        If UCase$(I$) = "N" Then
            X1 = 3
        Else
            Cls
            Color 12: Print Tab(33); "COMPILE STATS"
            Print
            Color 14: Print "(0) ";: Color 15: Print "BOTH TEAMS"
            Print
            Color 14: Print "(1) ";: Color L%(0, 11), L%(0, 12): Print A$(0); " ONLY": Color , 0
            Print
            Color 14: Print "(2) ";: Color L%(1, 11), L%(1, 12): Print A$(1); " ONLY": Color 15, 0
            Print

            Do
                J$ = GetKeyPress$
                X1 = Val(J$)
            Loop Until X1 >= 0 And X1 <= 2
        End If

    Else
        BG% = 0
        BN% = 1
    End If

    If UCase$(I$) = "Y" Or AP = 1 Then

        For PX = 0 To 1
            For I = 0 To 21
                If P%(PX, I, 15) = 1 Then SX%(PX) = I: Exit For
            Next I
        Next PX

        If _FileExists("GAME82") Then

            Open diskPaths$(0) + scheduleFile$ For Random As #1 Len = 48

            For X = 0 To 18
                Field #1, X * 2 As X$, 2 As player$(X + 1), 48 - 2 - 2 * X As X$
            Next

            Field #1, 38 As X$, 2 As player$(22), 2 As player$(23), 3 As player$(20), 3 As player$(21)

            NG%(13) = 1

            For X = 0 To 18:
                LSet player$(X + 1) = MKI$(NG%(X))
            Next

            For X = 0 To 1:
                LSet player$(20 + X) = YN$(X)
            Next

            LSet player$(22) = MKI$(S6%(0, 0))
            LSet player$(23) = MKI$(S6%(1, 0))
            Put #1, AP%(0) + AP%(2)

            Close 1

            AP%(2) = AP%(2) + 1
            AP% = 1

            If AP%(1) < AP%(0) + AP%(2) Then
                Kill "GAME82"
                endAllGames = 1
            Else

                Open "GAME82" For Output As #2

                Print #2, scheduleFile$

                For I = 0 To 2:
                    Print #2, AP%(I)
                Next

                Close 2

            End If

        End If

        Cls
        Q = 0
        W2% = 0
        L2% = 0

        Do
            C% = 0

            If AP% = 1 Then
                C% = 0
            Else
                If X1 = 0 Or X1 = 1 And Q = 0 Or X1 = 2 And Q = 1 Then
                    Cls
                Else
                    If X1 = 2 And Q = 0 Or X1 = 1 And Q = 1 Then C% = 1
                End If
            End If

            If C% <> 1 Then

                Call COMPILESTATFILES(Q)

            End If

            Q = Q + 1

        Loop Until Q = 2

    End If

End Sub


'------------------------------
' COMPILESTATFILES Subroutine
'------------------------------
' ...explanation...
Sub COMPILESTATFILES (teamIdx)

    Shared HT$(), L$(), PL$()
    Shared SA$(), W$()

    Shared B6%(), D1%(), DYS%(), E%()
    Shared H%(), ING%(), P0%()
    Shared SS%(), SX%(), V%()

    SA$(teamIdx) = A$(teamIdx)

    For XX = 4 To 11
        If Mid$(SA$(teamIdx), XX, 1) = " " Or Mid$(SA$(teamIdx), XX, 1) = "." Then Mid$(SA$(teamIdx), XX, 1) = "_"
    Next XX

    QQ = 8

    For XX = 11 To 4 Step -1:
        If Mid$(SA$(teamIdx), XX, 1) = "_" Then
            QQ = XX - 4
        Else
            Exit For
        End If
    Next XX

    statFile$ = Mid$(SA$(teamIdx), 4, QQ) + "." + Left$(SA$(teamIdx), 2)
    FILENAME$ = diskPaths$(1) + statFile$ + "D"

    If _FileExists(FILENAME$) Then

        Open diskPaths$(1) + statFile$ + "D" For Input As #1
        For I1 = 0 To 22
            Input #1, INJ%(teamIdx, I1)
        Next
        For I1 = 0 To 21
            Input #1, DYS%(teamIdx, I1)
        Next
        Close 1

    End If

    If IJ% <> 1 Or DR% <> 1 Then

        If IJ% <> 1 Then
            For I1 = 0 To 22
                If INJ%(teamIdx, I1) > 0 Then INJ%(teamIdx, I1) = INJ%(teamIdx, I1) - 1
                If B%(teamIdx, I1, 32) > 0 Then INJ%(teamIdx, I1) = B%(teamIdx, I1, 32)
            Next
        End If

        If DR% <> 1 Then

            For I1 = 0 To 21

                If DYS%(teamIdx, I1) > 0 And DYS%(teamIdx, I1) < 90 Then DYS%(teamIdx, I1) = DYS%(teamIdx, I1) - 1

                If P8%(teamIdx, I1, 0) = 0 And DYS%(teamIdx, I1) > 0 And DYS%(teamIdx, I1) < 90 Then 7667
                If P8%(teamIdx, I1, 0) = 0 And (DYS%(teamIdx, I1) = 0 Or DYS%(teamIdx, I1) = 1 Or DYS%(teamIdx, I1) = 91 Or DYS%(teamIdx, I1) = 92) Then DYS%(teamIdx, I1) = 0: GoTo 7667
                If P8%(teamIdx, I1, 0) > 0 And P8%(teamIdx, I1, 0) <= 3 And DYS%(teamIdx, I1) = 0 Then DYS%(teamIdx, I1) = 91: GoTo 7667
                If P8%(teamIdx, I1, 0) > 0 And P8%(teamIdx, I1, 0) <= 3 And DYS%(teamIdx, I1) = 91 Then DYS%(teamIdx, I1) = 911: GoTo 7667
                If P8%(teamIdx, I1, 0) > 0 And P8%(teamIdx, I1, 0) <= 3 And DYS%(teamIdx, I1) = 911 Then DYS%(teamIdx, I1) = 1: GoTo 7667
                If P8%(teamIdx, I1, 0) > 0 And P8%(teamIdx, I1, 0) <= 3 And DYS%(teamIdx, I1) = 92 Then DYS%(teamIdx, I1) = 1: GoTo 7667
                If P8%(teamIdx, I1, 0) > 0 And P8%(teamIdx, I1, 0) <= 3 And DYS%(teamIdx, I1) > 0 Then DYS%(teamIdx, I1) = DYS%(teamIdx, I1) + 1: GoTo 7667
                If P8%(teamIdx, I1, 0) > 3 And P8%(teamIdx, I1, 0) <= 6 And DYS%(teamIdx, I1) = 0 Then DYS%(teamIdx, I1) = 92: GoTo 7667
                If P8%(teamIdx, I1, 0) > 3 And P8%(teamIdx, I1, 0) <= 6 And DYS%(teamIdx, I1) = 91 Then DYS%(teamIdx, I1) = 1: GoTo 7667
                If P8%(teamIdx, I1, 0) > 3 And P8%(teamIdx, I1, 0) <= 6 And DYS%(teamIdx, I1) = 92 Then DYS%(teamIdx, I1) = 1: GoTo 7667
                If P8%(teamIdx, I1, 0) > 3 And P8%(teamIdx, I1, 0) <= 6 And DYS%(teamIdx, I1) = 911 Then DYS%(teamIdx, I1) = 1: GoTo 7667
                If P8%(teamIdx, I1, 0) > 3 And P8%(teamIdx, I1, 0) <= 6 And DYS%(teamIdx, I1) > 0 Then DYS%(teamIdx, I1) = DYS%(teamIdx, I1) + 1: GoTo 7667
                If P8%(teamIdx, I1, 0) > 6 Then DYS%(teamIdx, I1) = Int(P8%(teamIdx, I1, 0) / 3) + 1 - 2

                If MG%(teamIdx, 1) <= 0 Then DYS%(teamIdx, I1) = 3: GoTo 7667
                If DYS%(teamIdx, I1) > MG%(teamIdx, 1) - 1 Then DYS%(teamIdx, I1) = MG%(teamIdx, 1) - 1
                If DYS%(teamIdx, I1) < 0 Then DYS%(teamIdx, I1) = 0

            7667 Next

        End If

        Open diskPaths$(1) + statFile$ + "D" For Output As #1
        For I1 = 0 To 22
            Print #1, INJ%(teamIdx, I1)
        Next
        For I1 = 0 To 21
            Print #1, DYS%(teamIdx, I1)
        Next
        Close 1

    End If

    FILENAME$ = diskPaths$(1) + statFile$

    If _FileExists(FILENAME$) Then
        Open diskPaths$(1) + statFile$ For Input As #1
        Input #1, A$(teamIdx)
        Input #1, W2%
        Input #1, L2%
        For I = 0 To 22: Input #1, B$(teamIdx, I): Input #1, B2%(teamIdx, I): Next I
        For I = 0 To 21: Input #1, P$(teamIdx, I): Input #1, P3%(teamIdx, I): Next I
        For I = 0 To 22: For I1 = 0 To 21: Input #1, B6%(I, I1): Next I1: Next I
        For I = 0 To 21: For I1 = 0 To 41: Input #1, P0%(I, I1): Next I1: Next I
        Input #1, D0%(teamIdx)
        Input #1, D1%(teamIdx)
        For I = 0 To 21: Input #1, T%(I): Next I
        For I = 0 To 22: Input #1, P4%(I): Next I
        Close #1
    End If

    For I = 0 To 22

        B2%(teamIdx, I) = B%(teamIdx, I, 4)

        For I1 = 0 To 11
            B6%(I, I1) = B6%(I, I1) + B8%(teamIdx, I, I1): T%(I1) = T%(I1) + B8%(teamIdx, I, I1)
        Next I1

        If B8%(teamIdx, I, 0) > 0 Then
            If B8%(teamIdx, I, 1) = 0 Then
                B6%(I, 12) = 0
            Else
                B6%(I, 12) = B6%(I, 12) + 1
            End If
        End If

        If B8%(teamIdx, I, 14) > 0 Then B6%(I, 14) = B6%(I, 14) + 1

        For I1 = 15 To 21
            B6%(I, I1) = B6%(I, I1) + B8%(teamIdx, I, I1)
            T%(I1) = T%(I1) + B8%(teamIdx, I, I1)
        Next I1

        If B6%(I, 12) >= B6%(I, 13) Then B6%(I, 13) = B6%(I, 12)

    Next I

    For I = 0 To 21

        For I1 = 23 To 34
            P0%(I, I1) = P0%(I, I1) + P8%(teamIdx, I, I1)
            T%(I1 - 23) = T%(I1 - 23) + P8%(teamIdx, I, I1)
        Next I1

        If P8%(teamIdx, I, 23) > 0 Then
            If P8%(teamIdx, I, 24) = 0 Then
                P0%(I, 35) = 0
            Else
                P0%(I, 35) = P0%(I, 35) + 1
            End If
        End If

        For I1 = 37 To 41
            P0%(I, I1) = P0%(I, I1) + P8%(teamIdx, I, I1)
            T%(I1 - 22) = T%(I1 - 22) + P8%(teamIdx, I, I1)
        Next I1

        If P0%(I, 35) >= P0%(I, 36) Then P0%(I, 36) = P0%(I, 35)

    Next I

    T%(12) = T%(12) + L0%(teamIdx)
    INNING% = 0

    For I = 0 To 21
        INNING% = INNING% + P8%(teamIdx, I, 0)
        P3%(teamIdx, I) = P%(teamIdx, I, 6)

        For I1 = 0 To 5
            P0%(I, I1) = P0%(I, I1) + P8%(teamIdx, I, I1)
            P4%(I1) = P4%(I1) + P8%(teamIdx, I, I1)
        Next I1

        For I1 = 13 To 22:
            P0%(I, I1) = P0%(I, I1) + P8%(teamIdx, I, I1)
            P4%(I1) = P4%(I1) + P8%(teamIdx, I, I1)
        Next I1

    Next I

    If S6%(teamIdx, 0) - S6%(1 - teamIdx, 0) > 0 Then P0%(P2%(teamIdx), 6) = P0%(P2%(teamIdx), 6) + 1
    If S6%(teamIdx, 0) - S6%(1 - teamIdx, 0) < 0 Then P0%(P2%(teamIdx), 7) = P0%(P2%(teamIdx), 7) + 1
    If S6%(teamIdx, 0) - S6%(1 - teamIdx, 0) > 0 And S1%(teamIdx) >= 0 Then P0%(S1%(teamIdx), 12) = P0%(S1%(teamIdx), 12) + 1: P4%(12) = P4%(12) + 1

    For I = 0 To 21
        If P%(teamIdx, I, 15) <> 0 Then P0%(I, 8) = P0%(I, 8) + 1: P4%(8) = P4%(8) + 1
        If INNING% = P8%(teamIdx, I, 0) Then P0%(I, 10) = P0%(I, 10) + 1: P4%(10) = P4%(10) + 1
        If INNING% = P8%(teamIdx, I, 0) And S6%(1 - teamIdx, 0) = 0 Then P0%(I, 11) = P0%(I, 11) + 1: P4%(11) = P4%(11) + 1
    Next I

    P0%(SX%(teamIdx), 9) = P0%(SX%(teamIdx), 9) + 1
    P4%(9) = P4%(9) + 1

    D0%(teamIdx) = D0%(teamIdx) + D3%(teamIdx)
    D1%(teamIdx) = D1%(teamIdx) + D3%(1 - teamIdx)

    If S6%(teamIdx, 0) - S6%(1 - teamIdx, 0) > 0 Then W2% = W2% + 1
    If S6%(teamIdx, 0) - S6%(1 - teamIdx, 0) < 0 Then L2% = L2% + 1

    Color 15, 0

    Print ">>>>>"
    Print "THE STATS ARE BEING SAVED UNDER": Print "THE FOLLOWING NAME ::: ";
    Color L%(teamIdx, 11), L%(teamIdx, 12): Print statFile$
    Color 15, 0

    Open diskPaths$(1) + statFile$ For Output As #1
    Print #1, A$(teamIdx)
    Print #1, W2%
    Print #1, L2%
    For I = 0 To 22: Print #1, B$(teamIdx, I): Print #1, B2%(teamIdx, I): Next I
    For I = 0 To 21: Print #1, P$(teamIdx, I): Print #1, P3%(teamIdx, I): Next I
    For I = 0 To 22: For I1 = 0 To 21: Print #1, B6%(I, I1): Next I1: Next I
    For I = 0 To 21: For I1 = 0 To 41: Print #1, P0%(I, I1): Next I1: Next I
    Print #1, D0%(teamIdx)
    Print #1, D1%(teamIdx)
    For I = 0 To 21: Print #1, T%(I): Next I
    For I = 0 To 22: Print #1, P4%(I): Next I
    Close #1

    Print "<<<<<"
    Print
    Print

    FILENAME$ = diskPaths$(1) + statFile$ + "R"

    If _FileExists(FILENAME$) Then
        Open diskPaths$(1) + statFile$ + "R" For Input As #1
        For I = 0 To 22
            For I1 = 0 To 6
                Input #1, SS%(I, I1)
            Next
        Next
        Close 1
    End If

    For I = 0 To 22
        For I1 = 0 To 6
            SS%(I, I1) = SS%(I, I1) + CSS%(teamIdx, I, I1)
        Next
    Next

    Open diskPaths$(1) + statFile$ + "R" For Output As #1
    For I = 0 To 22
        For I1 = 0 To 6
            Print #1, SS%(I, I1)
        Next
    Next
    Close 1

    Y% = 0
    FILENAME$ = diskPaths$(1) + statFile$ + "S"

    If (teamIdx(FILENAME$) Then

        Open diskPaths$(1) + statFile$ + "S" For Input As #1
        Input #1, Y%
        For I = 1 To 162: Input #1, H%(I): Next I
        For I = 1 To 162: Input #1, HT$(I): Next I
        For I = 1 To 162: Input #1, V%(I): Next I
        For I = 1 To 162: Input #1, PL$(I): Next I
        For I = 1 To 162: Input #1, W$(I): Next I
        For I = 1 To 162: Input #1, L$(I): Next I
        For I = 1 To 162: Input #1, ING%(I): Next I
        Close #1

    Else
        'Default stat values
        For I = 1 To 162
            H%(I) = 999
            HT$(I) = "XXXXXXX"
            V%(I) = 999
            PL$(I) = "X"
            W$(I) = "LYNN"
            L$(I) = "SUMLER"
            ING%(I) = 999
        Next I

    End If

    Y% = Y% + 1
    H%(Y%) = S6%(teamIdx, 0)
    HT$(Y%) = A$(1 - teamIdx)
    V%(Y%) = S6%(1 - teamIdx, 0)
    W$(Y%) = W$
    L$(Y%) = L$
    ING%(Y%) = LYN%

    If teamIdx = 0 Then
        PL$(Y%) = "A"
    Else
        PL$(Y%) = "H"
    End If

    Open diskPaths$(1) + statFile$ + "S" For Output As #1

    Print #1, Y%

    For I = 1 To 162: Print #1, H%(I): Next I
    For I = 1 To 162: Print #1, HT$(I): Next I
    For I = 1 To 162: Print #1, V%(I): Next I
    For I = 1 To 162: Print #1, PL$(I): Next I
    For I = 1 To 162: Print #1, W$(I): Next I
    For I = 1 To 162: Print #1, L$(I): Next I
    For I = 1 To 162: Print #1, ING%(I): Next I

    Close #1

    Y% = 0

    For I = 0 To 22:
        For I1 = 0 To 21:
            B6%(I, I1) = 0
        Next
    Next

    For I = 0 To 22:
        For I1 = 0 To 6:
            SS%(I, I1) = 0
        Next
    Next

    For I = 0 To 21:
        For I1 = 0 To 41:
            P0%(I, I1) = 0:
        Next
    Next

    W2% = 0
    L2% = 0

    For I = 0 To 21: T%(I) = 0: Next I
    For I = 0 To 22: P4%(I) = 0: Next I

    For I = 0 To 1:
        For I1 = 0 To 22:
            B2%(I, I1) = 0
        Next
    Next

    For I = 0 To 1:
        For I1 = 0 To 21:
            P3%(I, I1) = 0:
        Next
    Next

End Sub


'------------------------------
'    BOXOPTIONS Subroutine
'------------------------------
' PARAMETER outputChoice
'   represents menu choice

' Handle boxscore option chosen
' 0 = Display on screen
' 1 = Send to printer
' 2 = Save to file

' The option to send to printer
' first creates a temporary file,
' then loops through it to print
Sub BOXOPTIONS (outputChoice)

    Shared scheduleFile$

    Select Case outputChoice
        Case 0:
            Call BOX2SCREEN

        Case 1, 2
            If outputChoice = 1 Then
                'Printer = temporary file
                NM$ = "TEMPBOX"
            Else
                'File = prompt | auto-create
                If AP% <> 1 Then
                    Cls
                    Print "ENTER 8-CHARACTER FILENAME FOR BOXSCORE (NO SPACES OR PERIODS)";: Input NM$
                    NM$ = NM$ + ".SPC"
                Else
                    ' NM$ = "BOXSCORE." + MID$(STR$(AP%(0) + AP%(2)), 2, LEN(STR$(AP%(0) + AP%(2))))
                    NM$ = "BOX" + Mid$(Str$(AP%(0) + AP%(2)), 2, Len(Str$(AP%(0) + AP%(2))))
                End If

            End If

            'Includes a special option to send to printer when done
            Call BOX2FILE(outputChoice)

    End Select

End Sub


'------------------------------
'     BOX2FILE Subroutine
'------------------------------
' PARAMETER printChoice
'   represents choice to print
'   the file over just saving it

' Sends boxscore to file
'   When menu choice is to
'   send to printer, the file
'   is also looped through to
'   print, line-by-line
Sub BOX2FILE (printChoice)

    Shared E%()
    Shared DB, HR, TR, SB

    Dim BK$
    BK$ = "## # # ## # #  # # #  #  # # ## ##"

    Open diskPaths$(1) + NM$ For Append As #2

    Print #2, Tab(17);

    For IG = 1 To INNING%

        If IG < 10 Then
            Print #2, Using " #"; IG;
        Else
            Print #2, Using " ##"; IG;
        End If

        If (IG Mod 3 = 0) Then Print #2, " ";

    Next IG

    Print #2, "   H  R E"

    If INNING% < 9 Then

        For I = 0 To 1

            Print #2, A$(I);

            For I2 = 1 To INNING%
                Call InningPrintFile(I2)
                If I = 0 Then Print #2, Using "##"; inningScore%(I, I2);
                If I = 1 And S6%(1, 0) > S6%(0, 0) And I2 = INNING% And inningScore%(1, INNING%) = 0 Then Print #2, " X";
                If I = 1 And S6%(1, 0) < S6%(0, 0) And I2 = INNING% Or I = 1 And S6%(1, 0) > S6%(0, 0) And I2 = INNING% And inningScore%(1, INNING%) > 0 Then Print #2, Using "##"; inningScore%(I, I2);
                If I = 1 And I2 < INNING% Then Print #2, Using "##"; inningScore%(I, I2);
            Next I2

            Print #2, " -";
            Print #2, Using " ##"; S6%(I, 0);
            Print #2, Using " ##"; S6%(I, 1);
            Print #2, Using " #"; S6%(I, 2)

        Next I

    End If

    If INNING% = 10 And P = 0 Or INNING% = 9 Then

        For I = 0 To 1

            Print #2, A$(I);

            For I2 = 1 To 9
                Call InningPrintFile(I2)
                If I = 0 Then Print #2, Using "##"; inningScore%(I, I2);
                If I = 1 And S6%(1, 0) > S6%(0, 0) And I2 = 9 And inningScore%(1, 9) = 0 Then Print #2, " X";
                If I = 1 And S6%(1, 0) < S6%(0, 0) And I2 = 9 Or I = 1 And S6%(1, 0) > S6%(0, 0) And I2 = 9 And inningScore%(1, 9) > 0 Then Print #2, Using "##"; inningScore%(I, I2);
                If I = 1 And I2 < 9 Then Print #2, Using "##"; inningScore%(I, I2);
            Next I2

            If INNING% = 10 Then Print #2, "   ";
            Print #2, " -";
            Print #2, Using " ##"; S6%(I, 0);
            Print #2, Using " ##"; S6%(I, 1);
            Print #2, Using " #"; S6%(I, 2)

        Next I

    End If

    If INNING% = 10 And P = 1 Or INNING% > 10 And INNING% < 19 Or INNING% = 19 And P = 0 Then

        For I = 0 To 1

            Print #2, A$(I);

            'Print innings 1 - 9
            For I2 = 1 To 9
                Call InningPrintFile(I2)
                Print #2, Using "##"; inningScore%(I, I2);
            Next I2

            'If P = 0 And INNING% < 19 Or INNING% = 19 Then INNING% = INNING% - 1

            'Prints innings 10 to 19
            For I2 = 10 To INNING%
                Call InningPrintFile(I2)
                Print #2, Using "##"; inningScore%(I, I2);
            Next I2

            If (INNING% Mod 3 = 0) Then Print #2, " "

            Print #2, " -";
            Print #2, Using " ##"; S6%(I, 0);
            Print #2, Using " ##"; S6%(I, 1);
            Print #2, Using " #"; S6%(I, 2)

        Next I

    End If

    If INNING% = 19 And P = 1 Or INNING% > 19 And INNING% <= 28 Then

        For I = 0 To 1

            Print #2, A$(I);

            For I2 = 1 To 9
                Call InningPrintFile(I2)
                Print #2, Using "##"; inningScore%(I, I2);
            Next I2

            'If INNING% = 28 Or INNING% < 28 And P = 0 Then INNING% = INNING% - 1

            For I2 = 10 To 18
                Call InningPrintFile(I2)
                Print #2, Using "##"; inningScore%(I, I2);
            Next I2

            Print #2,

        Next I

        For I = 0 To 1

            Print #2, A$(I);

            For I2 = 19 To INNING%
                Call InningPrintFile(I2)
                Print #2, Using "##"; inningScore%(I, I2);
            Next I2

            Print #2, " -";
            Print #2, Using " ##"; S6%(I, 0);
            Print #2, Using " ##"; S6%(I, 1);
            Print #2, Using " #"; S6%(I, 2)

        Next I

        Print #2,

    End If

    Print #2,

    For I = 0 To 1

        Print #2, A$(I); Tab(18); "AB R H BI 2 3 HR K W SB CS E PO  A      BA   HR  RBI"

        For I3 = 0 To 22

            If X0%(I, 0, I3) <> -1 And X0%(I, 1, I3) <> 1 Then

                I1 = X0%(I, 0, I3)

                Print #2, B$(I, I1); ", "; C$(X0%(I, 1, I3)); Tab(18);
                '                    AB             R              H              BI             2              3              HR             K              W              SB             CS              E               PO              A
                Print #2, Using BK$; B8%(I, I1, 0); B8%(I, I1, 2); B8%(I, I1, 1); B8%(I, I1, 3); B8%(I, I1, 4); B8%(I, I1, 5); B8%(I, I1, 6); B8%(I, I1, 8); B8%(I, I1, 7); B8%(I, I1, 9); B8%(I, I1, 10); B8%(I, I1, 11); B8%(I, I1, 16); B8%(I, I1, 17);

                Print #2, "   ";

                'BA
                If B5%(I, I1, 0) = 0 Or B5%(I, I1, 1) = 0 Then
                    Print #2, " .000   ";
                Else
                    If B5%(I, I1, 0) = B5%(I, I1, 1) Then
                        Print #2, "1.000   ";
                    Else
                        Print #2, " ."; Using "###   "; (B5%(I, I1, 1) / B5%(I, I1, 0) * 1000);
                    End If
                End If

                'HR / RBI
                Print #2, Using "##  ###"; B5%(I, I1, 6); B5%(I, I1, 3)

                For I2 = 0 To 17
                    T3%(I2) = T3%(I2) + B8%(I, I1, I2)
                Next I2

            End If

        Next I3

        For I1 = 0 To 21: For I2 = 0 To 13: T3%(I2) = T3%(I2) + P8%(I, I1, I2 + 23): Next

        For I2 = 14 To 17: T3%(I2) = T3%(I2) + P8%(I, I1, I2 + 22): Next: Next

        For I1 = 1 To P6%(I)
            For I2 = 0 To 21

                If P%(I, I2, 15) = I1 Then

                    Print #2, P$(I, I2); ", P";
                    Print #2, Tab(18);
                    Print #2, Using BK$; P8%(I, I2, 23); P8%(I, I2, 25); P8%(I, I2, 24); P8%(I, I2, 26); P8%(I, I2, 27); P8%(I, I2, 28); P8%(I, I2, 29); P8%(I, I2, 31); P8%(I, I2, 30); P8%(I, I2, 32); P8%(I, I2, 33); P8%(I, I2, 34); P8%(I, I2, 38); P8%(I, I2, 39);
                    Print #2, "   ";

                    If P5%(I, I2, 24) = 0 Or P5%(I, I2, 23) = 0 Then
                        Print #2, " .000   ";
                    Else
                        If P5%(I, I2, 24) = P5%(I, I2, 23) Then
                            Print #2, "1.000   ";
                        Else
                            Print #2, Using " .###   "; P5%(I, I2, 24) / P5%(I, I2, 23);
                        End If
                    End If

                    Print #2, Using "##  ###"; P5%(I, I2, 29); P5%(I, I2, 26)
                End If
            Next
        Next

        Print #2, "TOTALS"; Tab(17); T3%(0); Tab(22); T3%(1); Tab(27); T3%(4);
        Print #2, Tab(32); T3%(6); Tab(36); T3%(7); Tab(42);
        Print #2, T3%(10); Tab(46); T3%(16); Tab(50); T3%(17)
        Print #2, Tab(20); T3%(2); Tab(24); T3%(3); Tab(29);
        Print #2, T3%(5); Tab(34); T3%(8); Tab(39); T3%(9);
        Print #2, Tab(44); T3%(11)
        Print #2,: For I1 = 0 To 22: T3%(I1) = 0: Next I1

    Next I

    For I = 0 To 1

        Print #2,: Print #2, A$(I); Tab(23); "       IP   H  R  ER BB SO    ERA   W  L  S  SO"

        For I1 = 1 To P6%(I)

            For I2 = 0 To 21

                If P%(I, I2, 15) = I1 Then

                    I4 = 1 - I: Print #2, P$(I, I2); " ";

                    If P2%(I) = I2 And S6%(I, 0) - S6%(I4, 0) > 0 Then
                        Print #2, "(W,"; Right$(Str$(P5%(I, I2, 6) + 1), (Len(Str$(P5%(I, I2, 6) + 1)) - 1)); "-"; Right$(Str$(P5%(I, I2, 7)), (Len(Str$(P5%(I, I2, 7))) - 1)); ")";
                        W$ = P$(I, I2)
                    End If

                    If S1%(I) = I2 And S6%(I, 0) - S6%(I4, 0) > 0 Then Print #2, "(S,"; Right$(Str$(P5%(I, I2, 12) + 1), (Len(Str$(P5%(I, I2, 12) + 1)) - 1)); ")";

                    If P2%(I) = I2 And S6%(I, 0) - S6%(I4, 0) < 0 Then
                        Print #2, "(L,"; Right$(Str$(P5%(I, I2, 6) + 0), (Len(Str$(P5%(I, I2, 6) + 0)) - 1)); "-"; Right$(Str$(P5%(I, I2, 7) + 1), (Len(Str$(P5%(I, I2, 7) + 1)) - 1)); ")";
                        L$ = P$(I, I2)
                    End If

                    If P8%(I, I2, 19) > 0 Then Print #2, "(BS,";: Print #2, Using "##"; P5%(I, I2, 19);: Print #2, ")";
                    If P8%(I, I2, 22) > 0 Then Print #2, "(H,";: Print #2, Using "##"; P5%(I, I2, 22);: Print #2, ")";

                    Print #2, Tab(29);: Print #2, Using "##"; Int(P8%(I, I2, 0) / 3);

                    If P8%(I, I2, 0) - (Int(P8%(I, I2, 0) / 3) * 3) > 0 Then Print #2, ".";: Print #2, Using "#"; P8%(I, I2, 0) - (Int(P8%(I, I2, 0) / 3) * 3);

                    Print #2, Tab(34);
                    Print #2, Using "## ##  ## ## ##"; P8%(I, I2, 1); P8%(I, I2, 2); P8%(I, I2, 3); P8%(I, I2, 4); P8%(I, I2, 5);
                    Print #2, "   ";

                    If P5%(I, I2, 3) > 0 And P5%(I, I2, 0) = 0 Then
                        Print #2, "99.99 ";
                    Else
                        If P5%(I, I2, 0) = 0 Then
                            Print #2, "--.-- ";
                        Else
                            If P5%(I, I2, 3) = 0 Then
                                Print #2, " 0.00 ";
                            Else
                                Print #2, Using "##.## "; P5%(I, I2, 3) / (P5%(I, I2, 0) / 3) * 9;
                            End If
                        End If
                    End If

                    If P2%(I) = I2 And S6%(I, 0) - S6%(I4, 0) > 0 Then Print #2, Using "## "; P5%(I, I2, 6) + 1; Else Print #2, Using "## "; P5%(I, I2, 6);
                    If P2%(I) = I2 And S6%(I, 0) - S6%(I4, 0) < 0 Then Print #2, Using "## "; P5%(I, I2, 7) + 1; Else Print #2, Using "## "; P5%(I, I2, 7);
                    If S1%(I) = I2 And S6%(I, 0) - S6%(I4, 0) > 0 Then Print #2, Using "## "; P5%(I, I2, 12) + 1; Else Print #2, Using "## "; P5%(I, I2, 12);

                    Print #2, Using "###"; P5%(I, I2, 5)

                    For I4 = 0 To 5
                        T3%(I4) = T3%(I4) + P8%(I, I2, I4)
                    Next I4
                End If

            Next I2

        Next I1

        Print #2, "TOTALS"; Tab(28);
        Print #2, Using "##"; Int(T3%(0) / 3);

        If T3%(0) - (Int(T3%(0) / 3) * 3) > 0 Then Print #2, ".";: Print #2, Using "#"; T3%(0) - (Int(T3%(0) / 3) * 3);

        Print #2, Tab(34);
        Print #2, Using "## ##  ## ## ##"; T3%(1); T3%(2); T3%(3); T3%(4); T3%(5)

        LYN% = CInt(T3%(0) / 3)

        For I1 = 0 To 5: T3%(I1) = 0: Next I1

    Next I

    Print #2,: Print #2, " E-";

    If E = 0 Then
        Print #2, "NONE"
    Else
        For X1 = 0 To (E - 1): Print #2, E$(X1); ",";: Next
        Print #2,
    End If

    Print #2, "2B-";

    If DB = 0 Then
        Print #2, "NONE"
    Else
        For X1 = 0 To (DB - 1): Print #2, DB$(X1); ",";: Next
        Print #2,
    End If

    Print #2, "3B-";
    If TR = 0 Then
        Print #2, "NONE"
    Else
        For X1 = 0 To (TR - 1): Print #2, TR$(X1); ",";: Next
        Print #2,
    End If

    Print #2, "HR-";

    If HR = 0 Then
        Print #2, "NONE"
    Else
        For X1 = 0 To (HR - 1): Print #2, HR$(X1); ",";: Next
        Print #2,
    End If

    Print #2, "SB-";

    If SB = 0 Then
        Print #2, "NONE"
    Else
        For X1 = 0 To (SB - 1): Print #2, SB$(X1); ",";: Next
        Print #2,
    End If

    Print #2, "LOB-"; A$(0); Str$(L0%(0)); ","; A$(1); Str$(L0%(1))
    Print #2, "DP-"; A$(0); Str$(DP%(0)); ","; A$(1); Str$(DP%(1))
    Print #2, "UMPIRES: HP-"; U$(1); "; 1B-"; U$(2); "; 2B-"; U$(3); "; 3B-"; U$(4)
    Print #2, "TIME: "; gameTime$
    Print #2, "ATTENDANCE: ";: Print Using "###,###"; actualAttendance&
    Print #2,
    Print #2, "INJURIES-";

    If IJL% = 0 Then
        Print #2, "none"
    Else
        For X1 = 1 To IJL%: Print #2, IJ$(X1); ",";: Next
        Print #2,
    End If

    peject:
    Print #2, "EJECTIONS-";
    If EJ% = 0 Then
        Print #2, "none"
    Else
        For X1 = 1 To EJ%: Print #2, EJ$(X1); ",";: Next
        Print #2,
    End If

    pweath:
    Print #2, "TEMPERATURE:"; TP%
    Print #2, "WIND: "; WI$
    Print #2, "SKY: "; SC$(SC%)
    Print #2, "PRECIPITATION: "; PC$(PC%)

    If printChoice = 1 Then Print #2, Chr$(12)

    Close 2

    If printChoice = 1 Then

        Open diskPaths$(1) + NM$ For Input As #2

        Do
            Line Input #2, X$
            LPrint X$
        Loop While Left$(X$, 1) <> Chr$(12)

        Kill "TEMPBOX"

    End If

End Sub


'------------------------------
'    BOX2SCREEN Subroutine
'------------------------------
' Displays boxscore on screen
Sub BOX2SCREEN

    Shared DB, HR, TR, SB
    Shared DB$(), E$(), HR$(), SB$(), TR$()

    Cls

    'Color 14
    'If N = 2 Then
    '    Print "SITE: ";
    '    Color 15
    '    Print "NEUTRAL"
    'Else
    '    Print "SITE: ";
    '    Color 15
    '    Print gameStadium$(N)
    'End If

    'Color 14
    'Print "ATTENDANCE: ";
    'Color 15
    'Print Using "###,###"; actualAttendance&
    'Print

    Call ScoreSummary

    If AP% <> 1 Or U6 <> 2 Then
        Locate 24, 1: Print "HIT ANY KEY TO CONTINUE";
        I$ = GetKeyPress$
    End If

    Cls

    Call STATS2SCREEN

End Sub

'------------------------------
'   ScoreSummary Subroutine
'------------------------------
' Prints score by period for each team
Sub ScoreSummary

    Color 14, 0

    'Fewer than 9 innings
    If INNING% < 9 Then

        For IG = 1 To INNING%
            Call InningPrintBox(IG)
            Print IG;
        Next IG

        Print "  H  R E"

        For I = 0 To 1

            Color L%(I, 11), L%(I, 12)
            Print A$(I);
            Color 15, 0

            For I2 = 1 To INNING%
                Call InningPrintBox(I2)
                If I = 0 Then Print Using "##"; inningScore%(I, I2);
                If I = 1 And S6%(1, 0) > S6%(0, 0) And I2 = INNING% And inningScore%(1, INNING%) = 0 Then Print , " X";
                If I = 1 And S6%(1, 0) < S6%(0, 0) And I2 = INNING% Or I = 1 And S6%(1, 0) > S6%(0, 0) And I2 = INNING% And inningScore%(1, INNING%) > 0 Then Print Using "##"; inningScore%(I, I2);
                If I = 1 And I2 < INNING% Then Print Using "##"; inningScore%(I, I2);

            Next I2

            Print " -";
            Print Using "## "; S6%(I, 0);
            Print Using "## "; S6%(I, 1);
            Print Using "#"; S6%(I, 2)

        Next I

    End If

    '9 or 10 innings
    If INNING% = 10 And P = 0 Or INNING% <= 9 Then

        Color 14, 0
        For IG = 1 To 9
            Call InningPrintBox(IG)
            Print IG;
        Next IG

        If INNING% = 9 Then
            Print "  H  R E"
        Else
            Print "    H  R E"
        End If

        For I = 0 To 1

            Color L%(I, 11), L%(I, 12)
            Print A$(I);
            Color 15, 0

            For I2 = 1 To 9
                Call InningPrintBox(I2)
                Print Using "##"; inningScore%(I, I2);
            Next I2

            If INNING% = 10 Then
                Print "   -";
            Else
                Print " -";
            End If

            Print Using "## "; S6%(I, 0);
            Print Using "## "; S6%(I, 1);
            Print Using "#"; S6%(I, 2)

        Next I

    End If

    'Innings 10 - 18
    If INNING% = 10 And P = 1 Or INNING% > 10 And INNING% < 19 Or INNING% = 19 And P = 0 Then

        Color 14, 0
        For IG = 1 To 9
            Call InningPrintBox(IG)
            Print IG;
        Next IG

        Print

        For I = 0 To 1

            Color L%(I, 11), L%(I, 12)
            Print A$(I);
            Color 15, 0

            For I2 = 1 To 9
                Call InningPrintBox(I2)
                Print Using "##"; inningScore%(I, I2);
            Next I2

            Print

        Next I

        If P = 0 And INNING% < 19 Or INNING% = 19 Then INNING% = INNING% - 1

        'Print innings 10 to 18
        Print

        Locate 5,
        Color 14, 0
        For IG = 10 To INNING%
            Call InningPrintBox(IG)
            Print IG;
        Next IG
        Print "  H  R E"

        For I = 0 To 1

            Color L%(I, 11), L%(I, 12)
            Print A$(I);
            Color 15, 0

            For I2 = 10 To INNING%
                Call InningPrintBox(I2)
                Print Using "##"; inningScore%(I, I2);
            Next I2

            Print " - ";
            Print Using "## "; S6%(I, 0);
            Print Using "## "; S6%(I, 1);
            Print Using "#"; S6%(I, 2)

        Next I

    End If

    'Innings 19 - 27
    If INNING% = 19 And P = 1 Or INNING% > 19 And INNING% <= 28 Then

        Color 14, 0
        For IG = 1 To 9
            Call InningPrintBox(IG)
            Print IG;
        Next IG

        Print

        For I = 0 To 1

            Color L%(I, 11), L%(I, 12)
            Print A$(I);

            Color 15, 0

            For I2 = 1 To 9
                Call InningPrintBox(I2)
                Print Using "##"; inningScore%(I, I2);
            Next I2

            Print

        Next I

        Print

        'Print innings 10 to 18
        Locate 5,
        Color 14, 0
        For IG = 10 To 18
            Call InningPrintBox(IG)
            Print IG;
        Next IG

        Print

        For I = 0 To 1

            Color L%(I, 11), L%(I, 12)
            Print A$(I);
            Color 15, 0

            For I2 = 10 To 18
                Call InningPrintBox(I2)
                Print Using "##"; inningScore%(I, I2);
            Next I2

            Print

        Next I

        'Print innings 19 to 27
        Locate 8,
        Color 14, 0
        For IG = 19 To INNING%
            Call InningPrintBox(IG)
            Print IG;
        Next IG

        Print "  H  R E"

        For I = 0 To 1

            Color L%(I, 11), L%(I, 12)
            Print A$(I);
            Color 15, 0

            For I2 = 19 To INNING%
                Call InningPrintBox(I2)
                Print Using "##"; inningScore%(I, I2);
            Next I2

            Print " -";
            Print Using "## "; S6%(I, 0);
            Print Using "## "; S6%(I, 1);
            Print Using "#"; S6%(I, 2)

        Next I

    End If

End Sub


'------------------------------
'   STATS2SCREEN Subroutine
'------------------------------
' ...explanation...
Sub STATS2SCREEN

    Dim BK$
    BK$ = "## # # ## # #  # # #  #  # # ## ##"

    For I = 0 To 1

        Color L%(I, 11), L%(I, 12)
        Print A$(I);
        Color 14, 0
        Locate , 18: Print "AB R H BI 2 3 HR K W SB CS E PO  A      BA   HR  RBI"
        Color 15, 0

        For I3 = 0 To 22

            If X0%(I, 0, I3) <> -1 And X0%(I, 1, I3) <> 1 Then

                I1 = X0%(I, 0, I3)

                Print B$(I, I1); ", "; C$(X0%(I, 1, I3));
                Locate , 18
                '                AB             R              H              BI             2              3              HR             K              W              SB             CS              E               PO              A
                Print Using BK$; B8%(I, I1, 0); B8%(I, I1, 2); B8%(I, I1, 1); B8%(I, I1, 3); B8%(I, I1, 4); B8%(I, I1, 5); B8%(I, I1, 6); B8%(I, I1, 8); B8%(I, I1, 7); B8%(I, I1, 9); B8%(I, I1, 10); B8%(I, I1, 11); B8%(I, I1, 16); B8%(I, I1, 17);
                Print "   ";

                'BA
                If B5%(I, I1, 0) = 0 Or B5%(I, I1, 1) = 0 Then
                    Print " .000   ";
                Else
                    If B5%(I, I1, 0) = B5%(I, I1, 1) Then
                        Print "1.000   ";
                    Else
                        Print " ."; Using "###   "; (B5%(I, I1, 1) / B5%(I, I1, 0) * 1000);
                    End If
                End If

                '           HR   RBI
                Print Using "##  ###"; B5%(I, I1, 6); B5%(I, I1, 3)

                For I2 = 0 To 17
                    T3%(I2) = T3%(I2) + B8%(I, I1, I2)
                Next I2

            End If

        Next I3

        For I1 = 0 To 21:
            For I2 = 0 To 13:
                T3%(I2) = T3%(I2) + P8%(I, I1, I2 + 23)
            Next

            For I2 = 14 To 17
                T3%(I2) = T3%(I2) + P8%(I, I1, I2 + 22)
            Next
        Next

        For I1 = 1 To P6%(I)

            For I2 = 0 To 21

                If P%(I, I2, 15) = I1 Then

                    Print P$(I, I2); ", P";
                    Locate , 18
                    '                AB              R               H               BI              2               3               HR              K               W               SB              CS              E               PO              A
                    Print Using BK$; P8%(I, I2, 23); P8%(I, I2, 25); P8%(I, I2, 24); P8%(I, I2, 26); P8%(I, I2, 27); P8%(I, I2, 28); P8%(I, I2, 29); P8%(I, I2, 31); P8%(I, I2, 30); P8%(I, I2, 32); P8%(I, I2, 33); P8%(I, I2, 34); P8%(I, I2, 38); P8%(I, I2, 39);
                    Print "   ";

                    'BA
                    If P5%(I, I2, 24) = 0 Or P5%(I, I2, 23) = 0 Then
                        Print " .000   "
                    Else
                        If P5%(I, I2, 24) = P5%(I, I2, 23) Then
                            Print "1.000   ";
                        Else
                            Print Using "#.###   "; P5%(I, I2, 24) / P5%(I, I2, 23);
                        End If

                        '           HR   RBI
                        Print Using "##  ###"; P5%(I, I2, 29); P5%(I, I2, 26)

                    End If
                End If

            Next

        Next

        Color 14, 0: Print "TOTALS";
        Color 15, 0
        Locate , 17: Print T3%(0);
        Locate , 22: Print T3%(1);
        Locate , 27: Print T3%(4);
        Locate , 32: Print T3%(6);
        Locate , 36: Print T3%(7);
        Locate , 42: Print T3%(10);
        Locate , 46: Print T3%(16);
        Locate , 50: Print T3%(17)
        Locate , 20: Print T3%(2);
        Locate , 24: Print T3%(3);
        Locate , 29: Print T3%(5);
        Locate , 34: Print T3%(8);
        Locate , 39: Print T3%(9);
        Locate , 44: Print T3%(11)

        Print

        If AP% <> 1 Or U6 <> 2 Then
            Locate 24, 1: Print "HIT ANY KEY TO CONTINUE";
            I$ = GetKeyPress$
        End If

        Cls

        For I1 = 0 To 22: T3%(I1) = 0: Next I1

    Next I

    'GoTo 7313

    For I = 0 To 1

        Cls

        Color L%(I, 11), L%(I, 12)
        Print A$(I);

        Color 14, 0: Locate , 23
        Print "       IP   H  R  ER BB SO    ERA   W  L  S  SO": Color 15, 0

        For I1 = 1 To P6%(I)

            For I2 = 0 To 21

                If P%(I, I2, 15) = I1 Then
                    I4 = 1 - I
                    Locate , 1
                    Print P$(I, I2); " ";

                    If P2%(I) = I2 And S6%(I, 0) - S6%(I4, 0) > 0 Then
                        Print "(W,"; Right$(Str$(P5%(I, I2, 6) + 1), (Len(Str$(P5%(I, I2, 6) + 1)) - 1)); "-"; Right$(Str$(P5%(I, I2, 7)), (Len(Str$(P5%(I, I2, 7))) - 1)); ")";
                        W$ = P$(I, I2)
                    End If

                    If S1%(I) = I2 And S6%(I, 0) - S6%(I4, 0) > 0 Then Print "(S,"; Right$(Str$(P5%(I, I2, 12) + 1), (Len(Str$(P5%(I, I2, 12) + 1)) - 1)); ")";

                    If P2%(I) = I2 And S6%(I, 0) - S6%(I4, 0) < 0 Then
                        Print "(L,"; Right$(Str$(P5%(I, I2, 6) + 0), (Len(Str$(P5%(I, I2, 6) + 0)) - 1)); "-"; Right$(Str$(P5%(I, I2, 7) + 1), (Len(Str$(P5%(I, I2, 7) + 1)) - 1)); ")";
                        L$ = P$(I, I2)
                    End If

                    If P8%(I, I2, 19) > 0 Then Print "(BS,";: Print Using "##"; P5%(I, I2, 19);: Print ")";
                    If P8%(I, I2, 22) > 0 Then Print "(H,";: Print Using "##"; P5%(I, I2, 22);: Print ")";

                    Locate , 30: Print Using "##"; Int(P8%(I, I2, 0) / 3);

                    If P8%(I, I2, 0) - (Int(P8%(I, I2, 0) / 3) * 3) > 0 Then Print ".";: Print Using "#"; P8%(I, I2, 0) - (Int(P8%(I, I2, 0) / 3) * 3);

                    Locate , 34

                    Print Using "## ##  ## ## ##"; P8%(I, I2, 1); P8%(I, I2, 2); P8%(I, I2, 3); P8%(I, I2, 4); P8%(I, I2, 5);

                    Print "   ";

                    If P8%(I, I2, 3) > 0 And P8%(I, I2, 0) = 0 Then
                        Print "99.99 ";
                    Else
                        If P8%(I, I2, 0) = 0 Then
                            Print "--.-- ";
                        Else
                            If P8%(I, I2, 3) = 0 Then
                                Print " 0.00 ";
                            Else
                                Print Using "##.## "; P8%(I, I2, 3) / (P8%(I, I2, 0) / 3) * 9;
                            End If
                        End If
                    End If

                    If P2%(I) = I2 And S6%(I, 0) - S6%(I4, 0) > 0 Then Print Using "## "; P5%(I, I2, 6) + 1; Else Print Using "## "; P5%(I, I2, 6);
                    If P2%(I) = I2 And S6%(I, 0) - S6%(I4, 0) < 0 Then Print Using "## "; P5%(I, I2, 7) + 1; Else Print Using "## "; P5%(I, I2, 7);
                    If S1%(I) = I2 And S6%(I, 0) - S6%(I4, 0) > 0 Then Print Using "## "; P5%(I, I2, 12) + 1; Else Print Using "## "; P5%(I, I2, 12);

                    Print Using "###"; P5%(I, I2, 5)

                    For I4 = 0 To 5
                        T3%(I4) = T3%(I4) + P8%(I, I2, I4)
                    Next I4
                End If

            Next I2

        Next I1

        Color 14, 0
        Print "TOTALS";
        Color 15, 0

        Locate , 30

        If (T3%(0) / 3) >= 10 Then
            Locate (P6%(I) + 2), 29
        End If

        Print Int(T3%(0) / 3);

        If T3%(0) - (Int(T3%(0) / 3) * 3) > 0 Then
            Print ".";: Print Using "#"; T3%(0) - (Int(T3%(0) / 3) * 3);
        End If

        Locate , 34

        Print Using "## ##  ## ## ##"; T3%(1); T3%(2); T3%(3); T3%(4); T3%(5)
        Print

        If AP% <> 1 Or U6 <> 2 Then
            Locate 24, 1: Print "HIT ANY KEY TO CONTINUE";
            I$ = GetKeyPress$
        End If

        Cls

        LYN% = CInt(T3%(0) / 3)

        For I1 = 0 To 5: T3%(I1) = 0: Next I1

    Next I

    Cls
    '--- THIS NEEDS TO LOOK NICER

    Color 14, 0: Print " E-";
    Color 15, 0

    If E = 0 Then
        Print "none"
    Else
        For X = 0 To (E - 1): Print E$(X); ",";: Next
        Print
    End If

    Color 14, 0: Print "2B-";
    Color 15, 0

    If DB = 0 Then
        Print "none"
    Else
        For X = 0 To (DB - 1): Print DB$(X); ",";: Next
        Print
    End If

    Color 14, 0: Print "3B-";
    Color 15, 0

    If TR = 0 Then
        Print "none"
    Else
        For X = 0 To (TR - 1): Print TR$(X); ",";: Next
        Print
    End If

    Color 14, 0: Print "HR-";
    Color 15, 0

    If HR = 0 Then
        Print "none"
    Else
        For X = 0 To (HR - 1): Print HR$(X); ",";: Next
        Print
    End If

    Color 14, 0: Print "SB-";
    Color 15, 0
    If SB = 0 Then
        Print "none"
    Else
        For X = 0 To (SB - 1): Print SB$(X); ",";: Next
        Print
    End If

    Color 14, 0: Print "LOB-";
    Color 15, 0: Print A$(0); Str$(L0%(0)); ","; A$(1); Str$(L0%(1))
    Print "DP-";
    Color 15, 0: Print A$(0); Str$(DP%(0)); ","; A$(1); Str$(DP%(1))
    Color 14, 0: Print "INJURIES-";
    Color 15, 0

    If IJL% = 0 Then
        Print "none"
    Else
        For X = 1 To IJL%: Print IJ$(X); ",";: Next
        Print
    End If

    eject:
    Color 14, 0: Print "EJECTIONS-";
    Color 15, 0

    If EJ% = 0 Then
        Print "none"
    Else
        For X = 1 To EJ%: Print EJ$(X); ",";: Next
        Print
    End If

    Color 14, 0: Print "UMPIRES: ";
    Color 15, 0: Print "HP-"; U$(1); "; 1B-"; U$(2); "; 2B-"; U$(3); "; 3B-"; U$(4)

    '-- THIS COULD GO ON THE Score Summary
    Color 14, 0: Print "TIME: ";
    Color 15, 0: Print gameTime$
    Color 14, 0: Print "ATTENDANCE: ";
    Color 15, 0: Print Using "###,###"; actualAttendance&
    Color 14, 0: Print "TEMPERATURE:";
    Color 15, 0: Print TP%
    Color 14, 0: Print "WIND: ";
    Color 15, 0: Print WI$
    Color 14, 0: Print "SKY: ";
    Color 15, 0: Print SC$(SC%)
    Color 14, 0: Print "PRECIPITATION: ";
    Color 15, 0: Print PC$(PC%)

    If AP% <> 1 Or U6 <> 2 Then
        Locate 24, 1: Print "HIT ANY KEY TO CONTINUE";
        I$ = GetKeyPress$
    End If

End Sub


'------------------------------
'      BOX2SPC Subroutine
'------------------------------
' Adds special event information
' to a boxscore file
Sub BOX2SPC (NM$)

    Shared E%()

    Open diskPaths$(1) + NM$ For Append As #2

    Print #2,

    If INNING% > E%(1) Then Print #2, Using "MORE THAN ## INNINGS"; E%(1)

    If S6%(1, 0) < E%(2) Then Print #2, A$(1);: Print #2, Using " SCORED LESS THAN ## RUN(S)"; E%(2)
    If S6%(0, 0) < E%(2) Then Print #2, A$(0);: Print #2, Using " SCORED LESS THAN ## RUN(S)"; E%(2)
    If S6%(1, 0) > E%(3) Then Print #2, A$(1);: Print #2, Using " SCORED MORE THAN ## RUN(S)"; E%(3)
    If S6%(0, 0) > E%(3) Then Print #2, A$(0);: Print #2, Using " SCORED MORE THAN ## RUN(S)"; E%(3)
    If S6%(1, 1) > E%(5) Then Print #2, A$(1);: Print #2, Using " HAD MORE THAN ## HIT%(S)"; E%(5)
    If S6%(0, 1) > E%(5) Then Print #2, A$(0);: Print #2, Using " HAD MORE THAN ## HIT%(S)"; E%(5)
    If S6%(1, 1) < E%(4) Then Print #2, A$(1);: Print #2, Using " HAD LESS THAN ## HIT%(S)"; E%(4)
    If S6%(0, 1) < E%(4) Then Print #2, A$(0);: Print #2, Using " HAD LESS THAN ## HIT%(S)S"; E%(4)

    For I = 0 To 1

        For I1 = 0 To 22

            If B8%(I, I1, 1) > E%(6) Then Print #2, B$(I, I1);: Print #2, Using " HAD MORE THAN ## HIT%(S)"; E%(6)
            If B8%(I, I1, 2) > E%(7) Then Print #2, B$(I, I1);: Print #2, Using " SCORED MORE THAN ## RUN(S)"; E%(7)
            If B8%(I, I1, 3) > E%(8) Then Print #2, B$(I, I1);: Print #2, Using " HAD MORE THAN ## RBI(S)"; E%(8)
            If B8%(I, I1, 4) > E%(9) Then Print #2, B$(I, I1);: Print #2, Using " HIT MORE THAN ## DOUBLES(S)"; E%(9)
            If B8%(I, I1, 5) > E%(10) Then Print #2, B$(I, I1);: Print #2, Using " HIT MORE THAN ## TRIPLE(S)"; E%(10)
            If B8%(I, I1, 6) > E%(11) Then Print #2, B$(I, I1);: Print #2, Using " HOMERED MORE THAN ## TIME(S)"; E%(11)
            If B8%(I, I1, 9) > E%(12) Then Print #2, B$(I, I1);: Print #2, Using " STOLE MORE THAN ## BASE(S)"; E%(12)

        Next

    Next

    For I = 0 To 1
        For I1 = 0 To 21
            If P8%(I, I1, 5) > E%(13) Then Print #2, P$(I, I1);: Print #2, Using " STRUCK OUT MORE THAN ## BATTER(S)"; E%(13)
        Next
    Next

    Close #2
    
End Sub


'------------------------------
'   EndOfGame Subroutine
'------------------------------
' ...explanation...
Sub EndOfGame ()

    'Close #7

    Cls

    If (usingGfx = 1) Then
        Screen 0
        _FreeImage imageScreen&
    End If

    If normalFinish% = 1 Then

        Call POSTGAME

        ' Prompt to play another game
        Cls

        If AP <> 1 Then

            'Using Home Team's color for the box
            Call TEAMBOX(1, 1)

            Do
                U$ = "PLAY ANOTHER GAME (YN)"
                Locate 7, (80 - Len(U$)) / 2
                Print U$

                Color 15, 0
                I$ = GetKeyPress$
            Loop Until UCase$(I$) = "Y" Or UCase$(I$) = "N"

        End If

        If UCase$(I$) = "Y" Or (AP = 1 and endAllGames <> 1) Then
            Cls
            Print "PLEASE WAIT ..."
            Call LOADER
        End If

    End If

End Sub


'------------------------------
'        pbplog Function
'------------------------------
'...explanation
Sub pbplog (lineNumber)

    Print #7, "Called from line "; lineNumber
    Print #7,

End Sub
