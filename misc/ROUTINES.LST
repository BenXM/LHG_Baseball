                                                                      PAGE   1
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 0030   0006    DEFINT A-Z
 0030   0006      '$INCLUDE: 'GWDECL.BAS'
 0030   0006    ' GWDECL.BAS - General Declares for Functions and Subroutines w
                hich pass
 0030   0006    '              parameters by value.  Both of which are not auto
                matic in QB.
 0030   0006    
 0030   0006    ' Copyright 1989, Brian C. Giedt
 0030   0006    
 0030   0006    'Standard TYPE definitions for Graphics Workshop
 0030   0006    TYPE Coord0
 0030   0006        XPos AS INTEGER
 0030   0006        YPos AS INTEGER
 0030   0006    END TYPE
 0030   0006    
 0030   0006    TYPE Coord1
 0030   0006        Col0 AS INTEGER
 0030   0006        Line0 AS INTEGER
 0030   0006    END TYPE
 0030   0006    
 0030   0006    TYPE Coord2
 0030   0006        XPos AS INTEGER
 0030   0006        YPos AS INTEGER
 0030   0006    END TYPE
 0030   0006    
 0030   0006    TYPE Window1
 0030   0006        x1 AS INTEGER
 0030   0006        y1 AS INTEGER
 0030   0006        x2 AS INTEGER
 0030   0006        y2 AS INTEGER
 0030   0006    END TYPE
 0030   0006    
 0030   0006    TYPE Window2
 0030   0006        Col1 AS INTEGER
 0030   0006        Line1 AS INTEGER
 0030   0006        Col2 AS INTEGER
 0030   0006        Line2 AS INTEGER
 0030   0006    END TYPE
 0030   0006    
 0030   0006    
 0030   0006    '**************************************************************
                *************
 0030   0006    
 0030   0006    'Standard DECLAREs for Graphics Workshop
 0030   0006    
 0030   0006    'Assembly routines
 0030   0006    DECLARE SUB PaintByte (BYVAL Col1%, BYVAL Line1%, BYVAL OldColo
                r%, BYVAL NewColor%)
 0030   0006    DECLARE SUB PaintBits (BYVAL Col1%, BYVAL Line1%, BYVAL BitPatt
                ern%, BYVAL OldColor%, BYVAL NewColor%)
 0030   0006    DECLARE SUB TransferEGA (BYVAL FromCol%, BYVAL FromLine%, BYVAL
                 Cols%, BYVAL Lines%)
 0030   0006    DECLARE SUB FadeEGA (BYVAL GridX%, BYVAL GridY%, BYVAL GridNumb
                er%)
                                                                      PAGE   2
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 0030   0006    DECLARE SUB Fade2EGA (BYVAL GridX%, BYVAL GridY%, BYVAL GridNum
                ber%)
 0030   0006    DECLARE SUB GMove1VE (BYVAL FromCol%, BYVAL FromLine%, BYVAL Co
                ls%, BYVAL Lines%, BYVAL DestCol%, BYVAL DestLine%)
 0030   0006    DECLARE SUB GMove2VE (BYVAL FromCol%, BYVAL FromLine%, BYVAL Co
                ls%, BYVAL Lines%, BYVAL DestSegment%, BYVAL Direction%)
 0030   0006    DECLARE SUB GMove3VE (BYVAL FromCol%, BYVAL FromLine%, BYVAL Co
                ls%, BYVAL Lines%, BYVAL DestCol%, BYVAL DestLine%, BYVAL SkipL
                ines%)
 0030   0006    DECLARE SUB GMove4VE (BYVAL FromCol%, BYVAL FromLine%, BYVAL Co
                ls%, BYVAL Lines%, BYVAL DestSegment%, BYVAL Direction%)
 0030   0006    DECLARE SUB GScrollVE (BYVAL Col1%, BYVAL Line1%, BYVAL Cols%, 
                BYVAL Lines%, BYVAL ColDelta%, BYVAL LineDelta%)
 0030   0006    
 0030   0006    'Graphics Primitives
 0030   0006    DECLARE FUNCTION GetPointVE% (BYVAL X%, BYVAL Y%)
 0030   0006    DECLARE SUB DrawPointVE (BYVAL X%, BYVAL Y%, BYVAL PointColor%)
 0030   0006    DECLARE SUB DrawPointVEOpts (BYVAL X%, BYVAL Y%, BYVAL PointCol
                or%)
 0030   0006    DECLARE SUB DrawByteVE (BYVAL ScreenOffset%, BYVAL BitPattern%,
                 BYVAL ByteColor%)
 0030   0006    DECLARE SUB DrawByteVEOpts (BYVAL ScreenOffset%, BYVAL BitPatte
                rn%, BYVAL ByteColor%)
 0030   0006    DECLARE FUNCTION MakeAddressVE% (BYVAL X%, BYVAL Y%, BitPattern
                %)
 0030   0006    DECLARE SUB LineVE (BYVAL x1%, BYVAL y1%, BYVAL x2%, BYVAL y2%,
                 BYVAL LineColor%)
 0030   0006    DECLARE SUB LineToVE (BYVAL ToX%, BYVAL ToY%, BYVAL LineColor%)
 0030   0006    DECLARE SUB LineToStepVE (BYVAL StepX%, BYVAL StepY%, BYVAL Lin
                eColor%)
 0030   0006    DECLARE SUB LineStepVE (BYVAL StepX1%, BYVAL StepY1%, BYVAL Ste
                pX2%, BYVAL StepY2%, BYVAL LineColor%)
 0030   0006    DECLARE SUB LineBVE (BYVAL x1%, BYVAL y1%, BYVAL x2%, BYVAL y2%
                , BYVAL LineColor%)
 0030   0006    DECLARE SUB LineBFVE (BYVAL x1%, BYVAL y1%, BYVAL x2%, BYVAL y2
                %, BYVAL LineColor%)
 0030   0006    DECLARE SUB LineBF2VE (BYVAL x1%, BYVAL y1%, BYVAL x2%, BYVAL y
                2%, BYVAL LineColor%)
 0030   0006    DECLARE SUB CircleVE (BYVAL XCenter%, BYVAL YCenter%, BYVAL Rad
                ius%, BYVAL CircleColor%, BYVAL XAspect%, BYVAL YAspect%)
 0030   0006    DECLARE SUB ClsVE ()
 0030   0006    
 0030   0006    DECLARE SUB GPrint0VE (BYVAL Row%, BYVAL Col%, Text$, BYVAL Tex
                tColor%)
 0030   0006    DECLARE SUB GPrint1VE (BYVAL Line1%, BYVAL Col1%, Text$, BYVAL 
                TextColor%)
 0030   0006    DECLARE SUB GPrint2VE (BYVAL Row%, BYVAL Col%, Text$, BYVAL Tex
                tColor%)
 0030   0006    DECLARE SUB GPrint3VE (BYVAL Line1%, BYVAL Col1%, Text$, BYVAL 
                TextColor%)
 0030   0006    DECLARE SUB GPrint0H (BYVAL Row%, BYVAL Col%, Text$, BYVAL Text
                Color%)
 0030   0006    DECLARE SUB GPrint0C2 (BYVAL Row%, BYVAL Col%, Text$, BYVAL Tex
                tColor%)
                                                                      PAGE   3
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 0030   0006    DECLARE SUB GPrint0V256 (BYVAL Row%, BYVAL Col%, Text$, BYVAL T
                extColor%)
 0030   0006    DECLARE SUB GPrint3V256 (BYVAL Line1%, BYVAL Col1%, Text$, BYVA
                L TextColor%)
 0030   0006    DECLARE FUNCTION GetCharacter% (BYVAL Row%, BYVAL Col%)
 0030   0006    DECLARE SUB ClearScreenArray ()
 0030   0006    
 0030   0006    DECLARE FUNCTION GetPointH% (BYVAL X%, BYVAL Y%)
 0030   0006    DECLARE SUB DrawPointH (BYVAL X%, BYVAL Y%, BYVAL PointColor%)
 0030   0006    DECLARE FUNCTION MakeAddressH% (BYVAL X%, BYVAL Y%, BitPattern%
                )
 0030   0006    DECLARE SUB ClsH
 0030   0006    
 0030   0006    'Pixel routines with use a simple cache
 0030   0006    DECLARE FUNCTION GetCacheVE% (BYVAL X%, BYVAL Y%)
 0030   0006    DECLARE SUB ReDrawVE (BYVAL PointColor%)
 0030   0006    
 0030   0006    'Mouse routines
 0030   0006    DECLARE SUB InitMouse (MouseThere%)
 0030   0006    DECLARE SUB ButtonPress (Button%, Status%, Count%, LastX%, Last
                Y%)
 0030   0006    DECLARE SUB GetCursor (X%, Y%, Button%)
 0030   0006    DECLARE SUB GrafCursor (X%, Y%, Cursor$)
 0030   0006    DECLARE SUB ShowCursor ()
 0030   0006    DECLARE SUB HideCursor ()
 0030   0006    DECLARE SUB Motion (Value%)
 0030   0006    DECLARE SUB Mouse (AX%, BX%, CX%, DX%)
 0030   0006    DECLARE SUB SetCursor (X%, Y%)
 0030   0006    
 0030   0006    DECLARE FUNCTION MultMonitor%
 0030   0006    
 0030   0006    DECLARE SUB CompletePalVGA (BYVAL NumColors%, BYVAL PalSeg%)
 0030   0006    DECLARE SUB GetCompletePalVGA (BYVAL NumColors%, BYVAL PalSeg%)
 0030   0006    DECLARE SUB GetPalTripleVGA (BYVAL PalReg%, Red%, Green%, Blue%
                )
 0030   0006    DECLARE FUNCTION GetPaletteVGA% (BYVAL PalReg%)
 0030   0006    DECLARE SUB SetPalTripleVGA (BYVAL PalReg%, BYVAL Red%, BYVAL G
                reen%, BYVAL Blue%)
 0030   0006    DECLARE SUB SetPaletteEGA (BYVAL PalReg%, BYVAL Value%)
 0030   0006    
 0030   0006    DECLARE SUB SavePCXVE (Filename$)
 0030   0006    'DECLARE FUNCTION SavePCXVE% (Filename$)   'To use these routin
                es as functions
 0030   0006    DECLARE SUB SavePCXC (Filename$)           ' follow the instruc
                tions in the
 0030   0006    'DECLARE FUNCTION SavePCXC% (Filename$)    ' README file.
 0030   0006    DECLARE SUB SavePCXH (Filename$)
 0030   0006    'DECLARE FUNCTION SavePCXH% (Filename$)
 0030   0006    
 0030   0006    DECLARE SUB SavePCXRegionVE (Filename$, BYVAL x1%, BYVAL y1%, B
                YVAL x2%, BYVAL y2%)
 0030   0006    
 0030   0006    DECLARE FUNCTION OpenPCXFile% (Filename$, Array$)
 0030   0006    DECLARE SUB DispPCXC (BYVAL Display%)
                                                                      PAGE   4
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 0030   0006    DECLARE SUB DispPCXH (BYVAL Display%)
 0030   0006    DECLARE SUB DispPCXVE (BYVAL Display%)
 0030   0006    DECLARE SUB DispScrollPCXVE (BYVAL Display%, BYVAL Col1%, BYVAL
                 Line1%, BYVAL Col2%, BYVAL Line2%)
 0030   0006    DECLARE SUB PositionPCXVE (BYVAL LineNum%, BYVAL ColNum%)
 0030   0006    DECLARE SUB DispPCXV256 (BYVAL Display%)
 0030   0006    DECLARE SUB ClearVE ()
 0030   0006    
 0030   0006    DECLARE FUNCTION QBinaryLoad% (Filename$, SEG Array%)
 0030   0006    DECLARE SUB PCXArrayC (BYVAL ArraySeg%, BYVAL Display%)
 0030   0006    DECLARE SUB PCXArrayH (BYVAL ArraySeg%, BYVAL Display%)
 0030   0006    DECLARE SUB PCXArrayVE (BYVAL ArraySeg%, BYVAL Display%)
 0030   0006    DECLARE SUB PCXArrayV256 (BYVAL ArraySeg%, BYVAL Display%)
 0030   0006    
 0030   0006    DECLARE SUB Screen0 (KeepData%)
 0030   0006    DECLARE SUB Screen1 (KeepData%)
 0030   0006    DECLARE SUB Screen2 (KeepData%)
 0030   0006    DECLARE SUB Screen3 (KeepData%)
 0030   0006    DECLARE SUB Screen7 (KeepData%)
 0030   0006    DECLARE SUB Screen9 (KeepData%)
 0030   0006    DECLARE SUB Screen11 (KeepData%)
 0030   0006    DECLARE SUB Screen12 (KeepData%)
 0030   0006    DECLARE SUB Screen13 (KeepData%)
 0030   0006    DECLARE FUNCTION GetScreenMode%
 0030   0006    
 0030   0006    DECLARE SUB SetGWPages (BYVAL Source%, BYVAL Dest%)
 0030   0006    DECLARE SUB SetSourcePage (BYVAL Source%)
 0030   0006    DECLARE SUB SetDestPage (BYVAL Dest%)
 0030   0006    
 0030   0006    DECLARE SUB SetLastCoord (BYVAL X%, BYVAL Y%)
 0030   0006    DECLARE FUNCTION GetLastXCoord%
 0030   0006    DECLARE FUNCTION GetLastYCoord%
 0030   0006    
 0030   0006    DECLARE FUNCTION MBuffSize% ()
 0030   0006    DECLARE SUB MGetState (X$)
 0030   0006    DECLARE SUB MSetState (X$)
 0030   0006    
 0030   0006    DECLARE SUB ScrnDump2 (DPI$, LptNumber%, Translate%, XMultiplie
                r%, YMultiplier%, LandOrPort%)
 0030   0006    
 0030   0006    DECLARE FUNCTION PDQTimer& ()
 0030   0006    DECLARE FUNCTION GWFileSize& (Filename$)
 0030   0006    DECLARE FUNCTION HercThere% ()
 0030   0006    DECLARE FUNCTION AltKey% ()
 0030   0006    DECLARE FUNCTION InStat% ()
 0030   0006    DECLARE FUNCTION FindLast% (BYVAL Address%, Size%)
 0030   0006    
 0030   0006    DECLARE SUB SlideDown (BYVAL Col1%, BYVAL Line1%, BYVAL Col2%, 
                BYVAL Line2%, BYVAL DestCol%, BYVAL DestLine%)
 0030   0006    DECLARE SUB SlideUp (BYVAL Col1%, BYVAL Line1%, BYVAL Col2%, BY
                VAL Line2%, BYVAL DestCol%, BYVAL DestLine%)
 0030   0006    DECLARE SUB SlideLeft (BYVAL Col1%, BYVAL Line1%, BYVAL Col2%, 
                BYVAL Line2%, BYVAL DestCol%, BYVAL DestLine%)
 0030   0006    DECLARE SUB SlideRight (BYVAL Col1%, BYVAL Line1%, BYVAL Col2%,
                                                                      PAGE   5
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                 BYVAL Line2%, BYVAL DestCol%, BYVAL DestLine%)
 0030   0006    DECLARE SUB SplitHorizontal (BYVAL Col1%, BYVAL Line1%, BYVAL C
                ol2%, BYVAL Line2%, BYVAL DestCol%, BYVAL DestLine%)
 0030   0006    
 0030   0006    '**************************************************************
                *************
 0030   0006    
 0030   0006    'BASIC routines
 0030   0006    
 0030   0006    DECLARE FUNCTION MakeBinary% (Bin$)
 0030   0006    DECLARE FUNCTION GetCountLocation% ()
 0030   0006    DECLARE FUNCTION GetMouseCount% (Position%)
 0030   0006    DECLARE SUB DisplayPCXFile (Filename$, VideoPage%)
 0030   0006    DECLARE SUB DisplayPCXFile2 (Filename$, VideoPage%, StartLine%,
                 StartCol%)
 0030   0006    DECLARE SUB SetVideo ()
 0030   0006    
 0030   0006    DECLARE SUB StepText (X%, Y%, Text$, Angle%, Colr%, TextSize#)
 0030   0006    DECLARE SUB DrawText (X%, Y%, Text$, Angle%, Colr%, TextSize#)
 0030   0006    DECLARE SUB OutlineText (X%, Y%, Text$, Angle%, Colr%, Mult%, D
                ivide%)
 0030   0006    DECLARE SUB LoadOutlineFont (FontFile$)
 0030   0006    DECLARE SUB LoadFont (FontFile$)
 0030   0006    DECLARE FUNCTION GetWidth% (Text$)
 0030   0006    DECLARE FUNCTION GetOutlineWidth% (Text$)
 0030   0006    DECLARE SUB SetGPFont (FontNumber%)
 0030   0006    DECLARE SUB SetGWFont (FontNumber%)
 0030   0006    DECLARE SUB SetGPSpacing (SpacingH%, SpacingV%)
 0030   0006    DECLARE SUB SetGWSpacing (SpacingH%, SpacingV%)
 0030   0006    
 0030   0006    DECLARE SUB GPaintBox (Col1%, Line1%, Col2%, Line2%, OldColor%,
                 NewColor%)
 0030   0006    
 0030   0006    DECLARE SUB BarPrintMSG (Choice$(), Stat%())
 0030   0006    DECLARE SUB PullDnMSG (Choice$(), Stat%(), Menu%, Choice%, Ky$,
                 Action%)
 0030   0006    DECLARE FUNCTION PullMenKeyMSG% (Ky$, Choice$(), Stat%())
 0030   0006    
 0030   0006    DECLARE SUB PullDownG (Choice$(), Stat%(), Menu%, Choice%, Ky$,
                 Action%)
 0030   0006    DECLARE SUB BarPrintG (Choice$(), BarClr%)
 0030   0006    
 0030   0006    DECLARE SUB MsgBoxG (Message$, Wdth%)
 0030   0006    
 0030   0006    DECLARE SUB VertMenuG (Item$(), Choice%, MaxLen%, BoxBot%, Ky$,
                 Action%)
 0030   0006    
 0030   0006    DECLARE SUB FillPoly (a%, b%, c%, d%, e%, f%, g%, h%, Colr%)
 0030   0006    DECLARE SUB DrawCursor (X%, Y%, CursorWidth%, CursorLength%, Cu
                rsorIs%, CursorTime%)
 0030   0006    
 0030   0006    
 0030   0006    DECLARE SUB HITBYPITCH (S2%,D)
 0030   0006    DECLARE SUB WILDPITCH (S2%,D)
                                                                      PAGE   6
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 0030   0006    DECLARE SUB PBP (F$)
 0030   0006    DECLARE SUB BASEONBALLS (S2%, D2, D, P)
 0030   0006    DECLARE SUB PINCHRUNNER (MS%,A1,S4%,I2,P,PR%,BC%,U%,D,MO)
 0030   0006    DECLARE FUNCTION FUsing$ (Number$, Image$)
 0030   0006    DECLARE FUNCTION GetDrive% ()
 0030   0006    DECLARE SUB SETUP ()
 0030   0006    DECLARE SUB ADDPIT (D,I5,I6)
 0030   0006    DECLARE SUB ADVANCEMENT (P,D,S2%,F%,I3)
 0030   0006    DECLARE SUB BATDISP (PG,P9)
 0030   0006    DECLARE SUB DELAY ()
 0030   0006    DECLARE SUB FLDDISP (BC%,P,U%,D)
 0030   0006    DECLARE SUB FLDERR (F%,W%,D,I3,SB%,S2%,P)
 0030   0006    DECLARE SUB HITTINGLINES (L%(), P%(), P1%(), B7%(), B%(), VV(),
                 VV1(), B3%(), B4%(), K9!(), WF!)
 0030   0006    DECLARE SUB HOLDSTATUS (H0%)
 0030   0006    DECLARE SUB INCBATDF (D,I5,I6)
 0030   0006    DECLARE SUB INCBATOFF (P,I5,I6)
 0030   0006    DECLARE SUB INCPITOFF (P,I5,I6)
 0030   0006    DECLARE SUB INNDISP (I2,I)
 0030   0006    DECLARE SUB LDRIVE ()
 0030   0006    DECLARE SUB LET2NUM (I$)
 0030   0006    DECLARE SUB MAINSCREEN (D,P,BC%,U%,MO)
 0030   0006    DECLARE SUB PITDISP (P9)
 0030   0006    DECLARE SUB PITSTAM (P9)
 0030   0006    DECLARE SUB RANDNUM (RN)
 0030   0006    DECLARE SUB SCOREBOARD ()
 0030   0006    DECLARE SUB POPUP ()
 0030   0006    DECLARE SUB CHECKSAVE (D,P,S4%)
 0030   0006    DECLARE SUB POPUPSTATS ()
 0030   0006    DECLARE SUB VIEWTEAM ()
 0030   0006    DECLARE SUB REPLACEMENTS (I7%,I8%,I9%)
 0030   0006    DECLARE SUB WHOSON1ST (S4%)
 0030   0006    DECLARE SUB GETINFIELDER (W%,P,I1,D,S2%,P2)
 0030   0006    DECLARE SUB GETFIELDNAME (W%,D)
 0030   0006    DECLARE SUB GETOUTFIELDER (W%,P,I1,D)
 0030   0006    DECLARE SUB OUTFLDNAME (W%,D)
 0030   0006    DECLARE SUB HITS2GAP (W%,P,I1,D)
 0030   0006    DECLARE SUB CREDITASSIST (W%,D)
 0030   0006    DECLARE SUB CREDITPUTOUT (I3,FB2P%,AST%,D)
 0030   0006    DECLARE SUB CREDITREGPO (W%,D)
 0030   0006    DECLARE SUB NEWLINES ()
 0030   0006    DECLARE SUB PICKEDOFF (D,I)
 0030   0006    DECLARE SUB LONGFLY (D,W%)
 0030   0006    DECLARE SUB DELIVERY (D)
 0030   0006    DECLARE SUB TRYFOREXTRABASE (LN%,S2%,P2,Z2%,D,W%,SAH%,SB%,I8,I9
                )
 0030   0006    DECLARE SUB WALLDOUBLE (HW%,W%)
 0030   0006    DECLARE SUB OUTFLDLOCATION (W%)
 0030   0006    DECLARE SUB STRIKEOUT (U%,D)
 0030   0006    DECLARE SUB GROUNDERPBP (W%,D)
 0030   0006    DECLARE SUB DPPBP ()
 0030   0006    DECLARE SUB DPRELAY ()
 0030   0006    DECLARE SUB INCREMENTHIT (P,D,MO)
 0030   0006    DECLARE SUB POPFLY (W%,FO%)
                                                                      PAGE   7
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 0030   0006    DECLARE SUB PITCHERNAME (W%,D)
 0030   0006    DECLARE SUB OUTATFIRST (W%,D,FBU%,FB2P%)
 0030   0006    DECLARE SUB GROUNDERS (W%,D)
 0030   0006    DECLARE SUB SECOND2FIRST (D)
 0030   0006    DECLARE SUB THROW2FIRST (D)
 0030   0006    DECLARE SUB DPPIVOT (W%,D)
 0030   0006    DECLARE SUB CAUGHTFLY (I,S2%,D)
 0030   0006    DECLARE SUB BATOFF (P,I5,I6)
 0030   0006    DECLARE SUB PITOFF (P,I5,I6)
 0030   0006    DECLARE SUB SQUEEZECHOICE (SH)
 0030   0006    DECLARE SUB ADDSTTS (P,D)
 0030   0006    DECLARE SUB CHANGELINEUP (P9,P)
 0030   0006    DECLARE SUB DISPFLDG (PG,P9,TG)
 0030   0006    DECLARE SUB STEALCHANCE (AA,I2,I,CHANCE%)
 0030   0006    DECLARE SUB STEAL3RD (I,AA,Q0,H0%,D)
 0030   0006    DECLARE SUB PITCHOUT (S4%,I,Q0)
 0030   0006    DECLARE SUB TRIPLEPLAY (D)
 0030   0006    DECLARE SUB TIRING (P9)
 0030   0006    DECLARE SUB PITSWAP (I)
 0030   0006    DECLARE SUB PUTOUT (I,D,P)
 0030   0006    DECLARE SUB WHICHRUNNER (I,S4%,D5)
 0030   0006    DECLARE SUB NOJUMP (D)
 0030   0006    DECLARE SUB STRIKEOUTCS (SO)
 0030   0006    DECLARE SUB GETAKEY ()
 0030   0006    DECLARE SUB PLAYERNAME (P)
 0030   0006    DECLARE SUB OFFPIT (P9,I5,I6)
 0030   0006    DECLARE SUB SINGLEROUTINE (W%,P,I1,D,S2%,P2)
 0030   0006    DECLARE SUB RAREPLAYS (H6%, H7%, IP%)
 0030   0006    TYPE PBP
 0030   0006    YY AS STRING * 30
 0030   0006    END TYPE
 0030   0006      DIM K9(1) AS SINGLE
 0030   0006      DIM S$(1), A$(1), L%(1, 13), T1(1), B%(1, 22, 80), P%(1, 21, 
                89), B$(1, 22), P$(1, 21), P8%(1, 21, 41), h$(4)
 0030   0006      DIM B8%(1, 22, 21), P6%(1), P1%(1), S8%(1, 1), B1!(9), B0%(3,
                 2), B1%(3, 1), S1%(1), B9%(1, 10), NN$(1)
 0030   0006      DIM S%(1, 26), B3%(1, 9), B7%(1, 9), O%(1), S6%(1, 2), B1$(4)
                , B4%(1, 7, 9), X$(12), C$(11), F$(10)
 0030   0006      DIM VV(1), VV1(1), D3%(1), M%(9), P2%(1), A5%(4), U$(4), DP%(
                1), EJ$(20), IJ$(20)
 0030   0006      DIM X0%(1, 2, 23), D0%(1), P5%(1, 21, 41), B5%(1, 22, 21), TP
                %(11, 2), L0%(1), T3%(22)
 0030   0006      DIM T%(22), TS%(1,11),SA%(1,24)
 0030   0006      DIM PH%(22, 1),MG%(1,999),F1$(10)
 0030   0006      DIM CSS%(1,22,6),SU%(1,1)
 0030   0006      DIM NG%(18), YN$(1), Q$(23), H0$(1), TM$(4), SC$(4), PC$(4), 
                N$(1), D$(3), M$(1)
 0030   0006      DIM H0%(1), CZ%(1), BP(1), BT%(1, 9, 9), CF%(9, 2), LB%(9, 1)
                , SO%(5, 2)
 0030   0006      DIM PR%(24), GK%(1),AP%(2),VA%(26)
 0030   0006    COMMON SHARED TS%(),SA%(),P8%(), B8%(), P%(), P$(), B$(), P5%()
                , B5%(), X0%(), B%(), AP%(), A$()
 0030   0006    COMMON SHARED C$(), T3%(), P6%(), P2%(), L0%(), DP%(), U$(), IJ
                $(), EJ$(), SC$(), PC$()
                                                                      PAGE   8
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 0030   0006    COMMON SHARED S%(), P1%(), S1%(), D$(), S6%(), L%(), D3%(), NG%
                (), A5%(), B1!(), B1%(), B7%()
 0030   0006    COMMON SHARED B0%(), B3%(), B9%(), Q$(), PR%(), W%, GK%(), B1$(
                ), X$(), S8%(), NN$(), N$(), O%()
 0030   0006    COMMON SHARED VV(), VV1(), B4%(), K9() AS SINGLE, H0$(), h$(), 
                D0%(), M$(), LB%()
 0030   0006    COMMON SHARED F$(), TM$(), T1%(), YN$(), TP%(), SO%(), CF%(), B
                T%()
 0030   0006    COMMON SHARED S$, P, U6, DH%, U9, G4 AS SINGLE, RE, RD
 0030   0006    COMMON SHARED TA%, SC%, WF AS SINGLE, PC%, TP%, WS%, WI$, CC%, 
                AP%, INNING%,BUCK AS PBP
 0030   0006    COMMON SHARED MG%(),CSS%(),D,IJ%,DR%,CGERA%,IJL%,EJ%
 0030   0006    '$INCLUDE: 'COMMON.GW'
 0030   0006    '**** COMMON.GW - This file is used to maintain a equivalent se
                t of common
 0030   0006    '                 statements throughout the progam
 0030   0006    
 0030   0006    COMMON SHARED GPDat%(), Font$(), FontWidth%(), FontHeight%()
 0030   0006    COMMON SHARED OutLineFont$(), FontSize%(), OutLineHeight%()
 0030   0006    COMMON SHARED Tile$(), AltTile$(),va%(),VB%(),VC%(),PB%,F$,G$()
 0030   0006    COMMON SHARED P9,SU%(),s4%,bc%,pz,u%,pph,i,sn,h7%,W5,W6,TGTBASE
                %
 0030   0006    '$INCLUDE: 'GETVIDEO.BAS'
 0030   0006    '********* GetVideo.Bas - determines monitor type, declares Sha
                red variables
 0030   0006    
 0030   0006    'Copyright (c) 1990 Brian Giedt
 0030   0006    
 0030   0006    REM:DEFINT A-Z
 0030   0006    
 0030   0006    REM:'$INCLUDE: 'Common.GW'
 0030   0006    
 0030   0006        REDIM SHARED Font$(0, 0), FontWidth%(0, 0), FontHeight%(0)
 0073   00E4        REDIM SHARED OutLineFont$(0, 0), FontSize%(0, 0), OutLineHe
                ight%(0)
 00B6   00E4        REDIM SHARED Tile$(0), AltTile$(0), GPDat%(87),G$(8)
 0110   00E4    
 0110   00E4        GPMonitor% = MultMonitor%
 0110   00E4        IF GPMonitor% AND &H200 THEN        'Capabil of 8514A, use 
                VGA 16 color
 0110   00E4            GPDat%(31) = 8
 0110   00E4        ELSEIF GPMonitor% AND &H20 THEN     'Capabil of VGA 16 colo
                r
 0139   00E8            GPDat%(31) = 8
 0139   00E8        ELSEIF GPMonitor% AND &H10 THEN     'Capabil of VGA mono
 0157   00E8            GPDat%(31) = 7
 0157   00E8        ELSEIF GPMonitor% AND &H8 THEN      'Capabil of EGA 16 colo
                r
 0175   00E8            GPDat%(31) = 5
 0175   00E8        ELSEIF GPMonitor% AND &H4 THEN      'Capabil of EGA mono
 0193   00E8            GPDat%(31) = 1
 0193   00E8        ELSEIF GPMonitor% AND &H2 THEN      'Capabil of CGA (Set to
                 2 color)
 01B1   00E8            GPDat%(31) = 6
                                                                      PAGE   9
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 01B1   00E8        ELSEIF GPMonitor% AND &H1 THEN      'Capabil of HERC mono
 01CF   00E8            GPDat%(31) = 2
 01CF   00E8            IF NOT Hercthere% THEN
 01CF   00E8                CLS
 01CF   00E8                PRINT "You must run QBHERC.COM before running this 
                program."
 01CF   00E8                PRINT "Press any key to end.";
 01CF   00E8                WHILE INKEY$ = "": WEND
 022C   00EA                END
 022C   00EA            END IF
 0231   00EA        END IF
 0231   00EA    
 0231   00EA        'These next two lines allow you to force certain screen mod
                es to be used
 0231   00EA        'IF GPDat%(31) = 8 Then GPDat%(31) = 9     'UnREM for VGA 2
                56 color mode
 0231   00EA    
 0231   00EA        'IF GPDat%(31) = 6 THEN GPDat%(31) = 4     'UnREM for CGA 4
                 color mode
 0231   00EA    
 0231   00EA        'setup only those elements of GPDat% we need set
 0231   00EA        GPDat%(23) = 0    'Boolean to set boldfacing
 0231   00EA        GPDat%(24) = 90   'Angle for Italicizing of Text
 0231   00EA        GPDat%(33) = 0    'Number of GraphPak Fonts
 0231   00EA        GPDat%(47) = 2    'Vertical Spacing for GraphPak Fonts
 0231   00EA        GPDat%(48) = 3    'Horizontal Spacing for GraphPak Fonts
 0231   00EA    
 0231   00EA        GPDat%(57) = 0    'Overall Background Color (Used by GPaint
                Box)
 0231   00EA    
 0231   00EA        GPDat%(71) = 14   'Default Lines used by a character font (
                EGA mode)
 0231   00EA        GPDat%(72) = &HAA00 'Default location to save images to whe
                n using the
 0231   00EA                            ' GMove2VE routine.
 0231   00EA    
 0231   00EA        'Note: elements 73 through 80 are assigned below for use wi
                th the
 0231   00EA        '      pulldown and vertical menu systems.
 0231   00EA    
 0231   00EA        GPDat%(81) = 0    'Graphics Workshop Fonts available
 0231   00EA        GPDat%(82) = 0    'Graphics Workshop Font Active
 0231   00EA        GPDat%(83) = 6    'Graphics Workshop Horizontal Font Spacin
                g
 0231   00EA        GPDat%(84) = 5    'Graphics Workshop Vertical Font Spacing
 0231   00EA        GPDat%(85) = 0    'Graphics Workshop Overall Font Height
 0231   00EA        GPDat%(86) = 0    'Color in the font when drawing it
 0231   00EA    
 0231   00EA        CALL InitMouse(GPDat%(73))
 0325   00EC    
 0325   00EC        'Now set the colors for the pulldown, vertical menus, messa
                ge boxes
 0325   00EC        IF (GPDat%(31) = 5 OR GPDat%(31) = 8) AND INSTR(COMMAND$, "
                /B") = 0 THEN
                                                                      PAGE  10
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 0325   00EC    
 0325   00EC            GPDat%(74) = 15 * 256 + 1     'Horizontal Bar Color
 0325   00EC            GPDat%(75) = 15 * 256 + 1     'Pulled Down Box Color
 0325   00EC            GPDat%(76) = 15 * 256 + 0     'Active Menu Choices
 0325   00EC            GPDat%(77) = 15 * 256 + 7     'InActive (non-selectable
                ) Menu Choices
 0325   00EC            GPDat%(78) = 1 * 256 + 15     'Menu Bar Color for Activ
                e Choices
 0325   00EC            GPDat%(79) = 4 * 256 + 0      'Menu Bar Color for InAct
                ive Choices
 0325   00EC            GPDat%(80) = 1 * 256 + 14     'Normal Screen Color
 0325   00EC    
 0325   00EC        ELSE
 03C1   00EC    
 03C1   00EC            GPDat%(74) = 7 * 256 + 0      'All variables serve the 
                same purpose
 03C1   00EC            GPDat%(75) = 7 * 256 + 0      ' as described above, but
                 are for the
 03C1   00EC            GPDat%(76) = 7 * 256 + 0      ' monochrome screen modes
                .
 03C1   00EC            GPDat%(77) = 7 * 256 + 0
 03C1   00EC            GPDat%(78) = 0 * 256 + 15
 03C1   00EC            GPDat%(79) = 5 * 256 + 0
 03C1   00EC            GPDat%(80) = 0 * 256 + 7
 03C1   00EC    
 03C1   00EC        END IF
 0426   00EC    
 0426   00EC      DRIVE = GetDrive%
 0426   00EC       STACK 0
 0426   00EC       CALL SETUP
 0447   00F0       CALL HITTINGLINES(L%(), P%(), P1%(), B7%(), B%(), VV(), VV1(
                ), B3%(), B4%(), K9!(), WF!)
 0496   00F0       CALL LOADSCREEN
 049B   00F0    
 049B   00F0    SUB LOADSCREEN
 04A9   00F0       CALL SCREEN12(0)
 04B7   00F0       CALL DisplayPCXFile (S$, VideoPage%)
 04C4   00F0       REM:i=12*16*4
 04C4   00F0       VA%=&HAA00                    'PLAY BY PLAY BOX WINDOW
 04C4   00F0       MEMNEED%=44*128*4+4
 04C4   00F0       REDIM VB%(MEMNEED%\2)
 04E9   00F0       CALL GMove4VE (20,48,44,128,VARSEG(VB%(0)),0)
 050F   00F0       CALL ClearVE
 0514   00F0       REM:VA%(0)=VA%+12800\16 + 1       'SAVE THE HOLD RUNNERS SEC
                TION
 0514   00F0       va%(0)=va%
 0514   00F0       call GMove2VE (53,400,12,16,VA%(0),0)
 0536   00F0       VA%(1)=VA%(0)+768\16 + 1      'INFIELD POSITIONING
 0536   00F0       CALL GMove2VE (52,416,14,16,VA%(1),0)
 055B   00F0       VA%(2)=VA%(1)+896\16 + 1     'GET CENTER FIELDER
 055B   00F0       CALL GMove2VE (38,224,10,32,VA%(2),0)
 0580   00F0       VA%(3)=VA%(2)+1280\16 + 1     'GET LEFT FIELDER
 0580   00F0       CALL GMove2VE (7,256,10,32,VA%(3),0)
 05A5   00F0       VA%(4)=VA%(3)+1280\16 + 1     'GET RIGHT FIELDER
                                                                      PAGE  11
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 05A5   00F0       CALL GMove2VE (65,256,10,32,VA%(4),0)
 05CA   00F0       VA%(5)=VA%(4)+1280\16 + 1     'GET SHORTSTOP
 05CA   00F0       CALL GMove2VE (30,272,10,32,VA%(5),0)
 05EF   00F0       VA%(6)=VA%(5)+1280\16 + 1     'GET SECOND BASE
 05EF   00F0       CALL GMove2VE (45,272,10,32,VA%(6),0)
 0614   00F0       VA%(7)=VA%(6)+1280\16 + 1     'GET THIRD BASE
 0614   00F0       CALL GMove2VE (15,304,10,32,VA%(7),0)
 0639   00F0       VA%(8)=VA%(7)+1280\16 + 1     'GET FIRST BASE
 0639   00F0       CALL GMove2VE (61,304,10,32,VA%(8),0)
 065E   00F0       VA%(9)=VA%(8)+1280\16 + 1     'GET PITCHER
 065E   00F0       CALL GMove2VE (35,336,13,32,VA%(9),0)
 0683   00F0       VA%(10)=VA%(9)+1664\16 + 1     'GET CATCHER
 0683   00F0       CALL GMove2VE (35,416,15,16,VA%(10),0)
 06A8   00F0       VA%(11)=VA%(10)+960\16 + 1     'RUNNER ON 2ND
 06A8   00F0       CALL GMove2VE (37,304,10,32,VA%(11),0)
 06CD   00F0       VA%(12)=VA%(11)+1280\16 + 1     'RUNNER ON 3RD
 06CD   00F0       CALL GMove2VE (15,336,10,32,VA%(12),0)
 06F2   00F0       VA%(13)=VA%(12)+1280\16 + 1     'RUNNER ON 1ST
 06F2   00F0       CALL GMove2VE (56,336,10,32,VA%(13),0)
 0717   00F0       VA%(16)=VA%(13)+1280\16 + 1     'LEFT HANDED BATTER
 0717   00F0       MEMNEED%=22*16*4+4
 0717   00F0       REDIM VC%(MEMNEED%\2)
 0740   00F0       CALL GMove4VE (30,400,22,16,VARSEG(VC%(0)),0)
 0766   00F0       CALL ClearVE
 076B   00F0       CALL GMove2VE (1,304,14,176,VA%(16),0)
 0787   00F0    END SUB
 078F   00F0       GOTO 5000
 078F   00F0    
 078F   00F0    2000 REM: BRANCH FOR RARE PLAYS
 0792   00F0         CALL RAREPLAYS (H6%, H7%, IP%)
 07A3   00F4         IF IP%=1 THEN IP% = 0:CALL RELIEVERS
 07B8   00F4         IF H6% <= 4 OR H6% > 5 AND H6% < 9 OR H6% >= 10 AND H6% <=
                 24 THEN gosub 2002:goto 5052
 07E7   00F4         IF H6% = 5 OR H6% >= 25 AND H6% <= 29 THEN gosub 2002:goto
                 3900
 0808   00F4         IF H6% = 9 THEN gosub 2002:goto 3240
 0818   00F4         IF H6% = 45 THEN gosub 2002:goto 3201
 0828   00F4         gosub 2002:GOTO 5052
 082B   00F4    2002 CALL HITTINGLINES(l%(), p%(), P1%(), B7%(), b%(), VV(), VV
                1(), B3%(), B4%(), K9!(), WF!)
 087D   00F4         CALL FLDDISP(BC%, p, U%, D)
 0892   00F4         CALL MAINSCREEN(D, p, BC%, U%, MO)
 08AB   00F6         return
 08AB   00F6    
 08AB   00F6    3050 CALL RANDNUM(RN)
 08B5   00F8         IF (((PC% = 1 OR PC% = 2 OR PC% = 3) AND RN = 2) OR (RD = 
                1 AND RN <= 5)) AND INNING% >= 2 AND RD% = 0 THEN H7% = 20:H6%=
                21:GOTO 2000
 08FC   00F8         H6% = INT(RND(1) * 1000) + 1
 08FC   00F8         IF H6% <= 3 AND IJ% = 0 THEN 2000
 0937   00F8         SN = 0: H6% = INT(RND(1) * 1000) + 1
 0937   00F8    IF O%(0)=0 AND S4%=4 AND INFPOS%<2 AND H6%=768 OR O%(0)=0 AND S
                4%=4 AND INFPOS% < 2 AND H6% = 123 OR O%(0) = 0 AND S4% = 7 AND
                 INFPOS% < 2 AND H6% = 245 OR O%(0)=0 AND S4%=7 AND INFPOS%<2 A
                                                                      PAGE  12
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                ND H6%=381 THEN CALL TRIPLEPLAY (D): GOTO 3900
 09F2   00FA         H7% = INT(RND(1) * 7500) + 1
 09F2   00FA         CALL NEWLINES
 0A21   00FA         IF H6% <= 4 THEN 3200
 0A2B   00FA         IF H6% <= 6 THEN 3210
 0A35   00FA         IF H6% <= 11 OR H6% <= 200 AND B%(D, B9%(D, 2), 22) <> 2 A
                ND B%(D, B9%(D, 2), 23) <> 2 AND B%(D, B9%(D, 2), 24) <> 2 AND 
                B%(D, B9%(D, 2), 25) <> 2 THEN 3220
 0A9A   00FA         IF H6% <= 19 THEN 3230
 0AA4   00FA         IF H7% = 27 THEN 3244
 0AAE   00FA         IF H7% = 28 THEN 3246
 0AB8   00FA         IF H6% <= B4%(P, 5, B1!(P)) + 25 THEN S2% = 2: GOTO 3240
 0AF3   00FC         IF P2 = 4 THEN 4100
 0AFD   00FE    3056 H6% = INT(RND(1) * 1000) + 1: H7% = INT(RND(1) * 1000) + 1
 0AFD   00FE         I4 = 0: IF P2 = 2 THEN I4 = -5
 0B64   0100         IF INFPOS% = 2 THEN SN = 70: I4 = I4 + 15
 0B76   0100         IF U% = 2 THEN I4 = I4 - 15
 0B82   0100         IF INFPOS% = 1 THEN SN = 20
 0B8F   0100         IF INNING% > 5 AND S8%(D, 0) <= P8%(D, P1%(D), 4) + P8%(D,
                 P1%(D), 1) AND S8%(D, 1) <= P8%(D, P1%(D), 2) THEN I4 = I4 + 4
                0
 0BDC   0100         IF P = 0 THEN I4 = I4 - 2
 0BE8   0100         IF P = 1 THEN I4 = I4 + 2
 0BF4   0100         IF H7% <= SN THEN CALL PBP ("It gets through the drawn-in 
                infield!"): CALL DELAY:GOTO 3063
 0C27   0104         IF H6% > B4%(P, 0, B1!(P)) + I4 THEN 3600
 0C5A   0104         H6% = INT(RND(1) * 1000) + 1
 0C5A   0104         IF H6% <= B4%(P, 1, B1!(P)) AND P2 <> 2 OR H6% <= B4%(P, 1
                , B1!(P)) * .5 AND P2 = 2 THEN S2% = 8: GOTO 3500
 0D07   0104         IF H6% <= B4%(P, 1, B1!(P)) + B4%(P, 2, B1!(P)) AND P2 <> 
                2 OR H6% <= B4%(P, 1, B1!(P)) * .5 + B4%(P, 2, B1!(P)) * .5 AND
                 P2 = 2 THEN S2% = 9: GOTO 3520
 0DD5   0104    
 0DD5   0104         CALL HITS2GAP (W%,P,I1,D)
 0DEA   0106         I3 = B4%(P, 1, B1!(P)) + B4%(P, 2, B1!(P))
 0DEA   0106         E2% = I3 + B4%(P, 3, B1!(P)): IF W% = 8 AND H6% <= E2% AND
                 P2 <> 2 OR W% = 8 AND H6% <= E2% * .5 AND P2 = 2 THEN S2% = 10
                : GOTO 3530
 0EA0   010A         E2% = I3 + B4%(P, 6, B1!(P)): IF W% = 7 AND H6% <= E2% AND
                 P2 <> 2 OR W% = 7 AND H6% <= E2% * .5 AND P2 = 2 THEN S2% = 10
                : GOTO 3530
 0F14   010A         E2% = I3 + B4%(P, 7, B1!(P)): IF W% = 9 AND H6% <= E2% AND
                 P2 <> 2 OR W% = 9 AND H6% <= E2% * .5 AND P2 = 2 THEN S2% = 10
                : GOTO 3530
 0F88   010A    3063 H6% = INT(RND(1) * 100) + 1: S2% = 7: IF B7%(P, B1!(P)) = 
                1 OR H7% <= SN THEN 3065
 0FEA   010A         IF H6% <= (B%(P, B3%(P, B1!(1)), 16) * 2.5) THEN S2% = 12:
                 CALL GETINFIELDER (W%,P,I1,D,S2%,P2): CALL FLDERR (F%,W%,D,I3,
                SB%,S2%,P): IF F% = 1 THEN 3900
 1078   010E    
 1078   010E    
 1078   010E    3065 REM:*** single ***
 1078   010E         CALL SINGLEROUTINE (W%,P,I1,D,S2%,P2)
 1095   010E         IF S2% = 12 THEN CALL SCOREBOARD: GOTO 5050
                                                                      PAGE  13
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 10A7   010E         F% = 0: PQ = 0: CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 10D4   0110         IF F% = 0 THEN CALL TRYFOREXTRABASE (LN%,S2%,P2,Z2%,D,W%,S
                AH%,SB%,I8,I9)
 110B   011A         CALL SCOREBOARD
 1110   011A         GOTO 3900
 1110   011A    
 1110   011A    
 1110   011A         
 1110   011A    3200 REM:*** hit by pitch ***
 1113   011A         CALL HITBYPITCH (S2%,D)
 1120   011A    3201 A5%(0) = 1: A5%(1) = 0: A5%(2) = 0: A5%(3) = 0
 1120   011A         IF B0%(1, 0) > 0 THEN A5%(1) = 1
 1145   011A         IF B0%(1, 0) > 0 AND B0%(2, 0) > 0 THEN A5%(2) = 1
 1159   011A         IF B0%(1, 0) > 0 AND B0%(2, 0) > 0 AND B0%(3, 0) > 0 THEN 
                A5%(3) = 1: IF W% = 2 AND S2% > 2 THEN A5%(3) = 11
 1191   011A         CALL ADVANCEMENT (P,D,S2%,F%,I3)
 11AA   011A         GOTO 5050
 11AA   011A    
 11AA   011A    
 11AA   011A    3210 REM:*** balk ***
 11AD   011A         IF S4% = 0 THEN 3100
 11B7   011A         S2% = 4: CALL NEWLINES
 11C2   011A         CALL RANDNUM(RN)
 11CB   011A         UN = INT(RND(1) * 4) + 1
 11CB   011A         IF RN <= 33 THEN F$="a balk has been called"
 1209   011C         IF RN > 33 AND RN <= 66 THEN CALL PBP ("and a BALK is call
                ed"):F$=P$(D, P1%(D))+" dropped the ball"
 1262   0120         IF RN > 66 THEN F$=U$(UN)+" calls a balk on "+P$(D, P1%(D)
                )
 12A7   0120         CALL PBP (F$): GOTO 3223
 12B0   0120    
 12B0   0120    3100 rem:*** fouled out of play ***
 12B3   0120         CALL FOULBALL
 12B8   0120         GOTO 5052
 12B8   0120    
 12B8   0120    
 12B8   0120    3220 REM:*** passed ball ***
 12BB   0120         IF S4% = 0 AND SO <> 1 THEN 3100
 12C9   0122         S2% = 5: CALL NEWLINES
 12D4   0122         CALL DELIVERY(D)
 12DD   0122         CALL RANDNUM(RN)
 12E6   0122         IF RN <= 50 THEN CALL PBP ("pitch gets by "+B$(D, B9%(D, 2
                )))
 1332   0126         IF RN > 50 THEN CALL PBP ("off "+B$(D, B9%(D, 2))+"'s glov
                e"):CALL PBP ("it gets away from him")
 13A7   012E         CALL PBP ("It's ruled a passed ball")
 13C6   0132         IF B0%(1, 0) = 0 AND I = 9 AND SO = 1 OR O%(0) > 1 AND I =
                 9 AND SO = 1 THEN O%(1) = O%(1) + 1
 13F4   0132    3222 I8 = INT(RND(1) * 10) + 1
 13F4   0132         IF S4% = 1 AND P2 = 2 AND I8 < B%(P, B3%(P, B0%(1, 0)), 16
                ) OR S4% = 5 AND P2 = 2 AND I8 < B%(P, B3%(P, B0%(1, 0)), 16) T
                HEN A5%(1) = 2: A5%(3) = 1: A5%(0) = 0: A5%(2) = 2: CALL ADVANC
                EMENT (P,D,S2%,F%,I3): GOTO 5051
 14C5   0132    3223 IF B0%(1, 0) = 0 AND I = 9 AND SO = 1 OR O%(0) > 1 AND I =
                                                                      PAGE  14
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                 9 AND SO = 1 THEN A5%(0) = 1: A5%(1) = 1: A5%(2) = 1: A5%(3) =
                 1: CALL ADVANCEMENT (P,D,S2%,F%,I3): GOTO 3900
 152C   0132         A5%(1) = 1: A5%(2) = 1: A5%(3) = 1: A5%(0) = 0: CALL ADVAN
                CEMENT (P,D,S2%,F%,I3): GOTO 5051
 155D   0132    3230 REM:*** wild pitch ***
 1560   0132         IF S4% = 0 AND SO <> 1 THEN 3100
 1571   0132    CALL WILDPITCH (S2%,D)
 157E   0132    3236 GOTO 3222
 157E   0132    
 157E   0132    3240 REM:*** base on balls ***
 1581   0132         CALL BASEONBALLS(S2%, D2, D, P)
 1596   0134         GOTO 3201
 1596   0134    
 1596   0134    
 1596   0134    3244 S2% = 2: CALL NEWLINES: CALL PBP (B$(D, B9%(D, 2))+" is ca
                lled for interference!!")
 15E6   0138         CALL PBP (Q$(0)+" trots to first base")
 160F   013C         GOTO 3201
 160F   013C    
 160F   013C    
 160F   013C    3246 CALL NEWLINES: CALL PBP (Q$(0)+" is out for obstruction!")
 1640   0140         W% = 2: CALL CREDITREGPO (W%,D): O%(0) = O%(0) + 1: O%(1) 
                = O%(1) + 1
 1653   0140         IF B7%(P, B1!(P)) <> 1 THEN I5 = B3%(P, B1!(P)): I6 = 0: C
                ALL INCBATOFF (P,I5,I6): GOTO 3248
 16B6   0144         I5 = P1%(P): I6 = 23: CALL INCPITOFF (P,I5,I6)
 16DA   0144    3248 I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6)
 16FE   0144         GOTO 3900
 16FE   0144    
 16FE   0144    3500 REM:*** double s2%=8 ***
 1701   0144         CALL GETOUTFIELDER (W%,P,I1,D)
 1716   0144         I5 = P1%(D): I6 = 1: CALL ADDPIT (D,I5,I6): CALL NEWLINES
 173F   0144         CALL DELIVERY(D)
 1748   0144         IF B7%(P, B1!(P)) <> 1 THEN
 1748   0144            I5 = B3%(P, B1!(P)): I6 = 0
 1748   0144            CALL INCBATOFF (P,I5,I6)
 17A0   0144            I6 = 1
 17A0   0144            CALL INCBATOFF (P,I5,I6)
 17B7   0144            I6 = 4
 17B7   0144            CALL INCBATOFF (P,I5,I6)
 17CE   0144         ELSE
 17D1   0144            I5 = P1%(P): I6 = 23
 17D1   0144            CALL INCPITOFF (P,I5,I6)
 17F5   0144            I6 = 24
 17F5   0144            CALL INCPITOFF (P,I5,I6)
 180C   0144            I6 = 27
 180C   0144            CALL INCPITOFF (P,I5,I6)
 1823   0144         END IF
 1823   0144         CALL RANDNUM(RN)
 182C   0144         if rn<=40 and w% = 7 then
 182C   0144            Y% = INT(RND(1) * 40) + 2900
 182C   0144            CALL GETRPBP(Y%, Y$, D)
 187B   014A            CALL STRIPRPBP (Y$,Y%,D)
 188C   014A            CALL PBP (Y$)
                                                                      PAGE  15
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 1895   014A            Y% = INT(RND(1) * 30) + 3020
 1895   014A            CALL GETRPBP(Y%, Y$, D)
 18D0   014A            CALL STRIPRPBP (Y$,Y%,D)
 18E1   014A            CALL PBP (Y$)
 18EA   014A            goto 3502
 18EA   014A         end if
 18ED   014A    
 18ED   014A         if rn<=40 and w% = 9 then
 18ED   014A            Y% = INT(RND(1) * 40) + 2940
 18ED   014A            CALL GETRPBP(Y%, Y$, D)
 193C   014A            CALL STRIPRPBP (Y$,Y%,D)
 194D   014A            CALL PBP (Y$)
 1956   014A            Y% = INT(RND(1) * 30) + 3020
 1956   014A            CALL GETRPBP(Y%, Y$, D)
 1991   014A            CALL STRIPRPBP (Y$,Y%,D)
 19A2   014A            CALL PBP (Y$)
 19AB   014A            goto 3502
 19AB   014A         end if
 19AE   014A    
 19AE   014A         if rn<=40 and w% = 8 then
 19AE   014A            Y% = INT(RND(1) * 40) + 2980
 19AE   014A            CALL GETRPBP(Y%, Y$, D)
 19FD   014A            CALL STRIPRPBP (Y$,Y%,D)
 1A0E   014A            CALL PBP (Y$)
 1A17   014A            Y% = INT(RND(1) * 30) + 3020
 1A17   014A            CALL GETRPBP(Y%, Y$, D)
 1A52   014A            CALL STRIPRPBP (Y$,Y%,D)
 1A63   014A            CALL PBP (Y$)
 1A6C   014A            goto 3502
 1A6C   014A         end if
 1A6F   014A    
 1A6F   014A    
 1A6F   014A         CALL RANDNUM(RN)
 1A78   014A         IF RN <= 25 THEN
 1A78   014A            CALL LONGFLY (D,W%)
 1A8F   014A            HW% = 1
 1A8F   014A            CALL WALLDOUBLE (HW%,W%)
 1AA2   014C            GOTO 3502
 1AA2   014C         END IF
 1AA5   014C         IF RN > 25 AND RN <= 50 THEN
 1AA5   014C            F$=Q$(0): CALL LDRIVE
 1ACB   014C            F$=F$+"one to the gap in "
 1ACB   014C            CALL OUTFLDLOCATION (W%)
 1AE2   014C            CALL PBP (F$)
 1AEB   014C            GOTO 3502
 1AEB   014C         END IF
 1AEE   014C         IF RN > 50 AND RN <= 60 THEN
 1AEE   014C            F$=Q$(0)+" hits a sinking liner into "
 1AEE   014C            CALL OUTFLDLOCATION (W%)
 1B1C   014C            CALL PBP (F$): CALL PBP ("It goes to the wall")
 1B44   0150            GOTO 3502
 1B44   0150         END IF
 1B47   0150         IF RN > 60 AND RN <= 75 THEN
 1B47   0150            F$=Q$(0)+" lines one to the alley in "
                                                                      PAGE  16
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 1B47   0150            CALL OUTFLDLOCATION (W%)
 1B75   0150            CALL PBP (F$)
 1B7E   0150            GOTO 3502
 1B7E   0150         END IF
 1B81   0150         IF RN > 75 AND RN <= 85 AND (W% = 7 OR W% = 9) THEN
 1B81   0150            F$=Q$(0)
 1B81   0150            CALL LDRIVE
 1BB8   0150            F$=F$+"one down the "+C$(W%)+" line": CALL PBP (F$)
 1BF4   0150            CALL PBP ("It rolls into the corner")
 1C13   0154            GOTO 3502
 1C13   0154         END IF
 1C16   0154         IF RN > 75 AND RN <= 85 AND W% = 8 THEN
 1C16   0154            F$=Q$(0): CALL LDRIVE
 1C46   0154            F$=F$+"one between the fielders": CALL PBP (F$)
 1C5D   0154            CALL PBP (Q$(4)+" cuts it off...")
 1C86   0158            GOTO 3502
 1C86   0158         END IF
 1C89   0158         IF RN > 85 AND RN <= 92 THEN
 1C89   0158            F$=Q$(0): CALL LDRIVE
 1CAF   0158            F$=F$+"a blue darter into "+C$(W%)
 1CAF   0158            CALL PBP (F$)
 1CE1   0158            GOTO 3502
 1CE1   0158         END IF
 1CE4   0158         IF RN > 92 THEN
 1CE4   0158            F$=Q$(0)+" lines one to "
 1CE4   0158            CALL OUTFLDLOCATION (W%)
 1D08   0158            CALL PBP (F$)
 1D11   0158            CALL PBP ("It's down and to the wall!")
 1D30   015C         END IF
 1D30   015C    3502 HW% = 0
 1D30   015C         IF INT(RND(1) * 100) + 1 <= 80 THEN F$="Double!!" ELSE F$=
                "2-Bagger!!"
 1D84   015C         CALL PBP (F$)
 1D8D   015C    
 1D8D   015C         FOR I = 0 TO 3: A5%(I) = 2: NEXT I: A5%(3) = 1
 1DA5   015C         IF B0%(1, 0) = 0 THEN 3511
 1DB5   015C         H6% = INT(RND(1) * 100) + 1
 1DB5   015C         BR% = B%(P, B3%(P, B0%(1, 0)), 16)
 1DB5   015C         IF B7%(P, B0%(1, 0)) = 1 THEN BR% = P%(P, P1%(P), 31)
 1E2A   015E         I3 = 0
 1E2A   015E         IF O%(0) = 0 AND W% = 7 THEN I3= 18 + BR% * 3
 1E4B   015E         IF O%(0) = 1 AND W% = 7 THEN I3= 16 + BR% * 3
 1E66   015E         IF O%(0) = 2 AND W% = 7 THEN I3= 34 + BR% * 3
 1E81   015E         IF O%(0) = 0 AND W% = 8 THEN I3= 37 + BR% * 3
 1E9C   015E         IF O%(0) = 1 AND W% = 8 THEN I3= 44 + BR% * 3
 1EB7   015E         IF O%(0) = 2 AND W% = 8 THEN I3= 65 + BR% * 3
 1ED2   015E         IF O%(0) = 0 AND W% = 9 THEN I3= 12 + BR% * 3
 1EED   015E         IF O%(0) = 1 AND W% = 9 THEN I3= 18 + BR% * 3
 1F08   015E         IF O%(0) = 2 AND W% = 9 THEN I3= 40 + BR% * 3
 1F23   015E         IF H6% <= I3 OR P2 = 2 THEN A5%(1) = 3
 1F39   015E    3511 CALL ADVANCEMENT (P,D,S2%,F%,I3)
 1F52   015E         F% = 0
 1F52   015E         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 1F79   015E         IF F% = 0 THEN
                                                                      PAGE  17
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 1F79   015E            CALL TRYFOREXTRABASE (LN%,S2%,P2,Z2%,D,W%,SAH%,SB%,I8,I
                9)
 1FB0   015E         END IF
 1FB0   015E         CALL SCOREBOARD
 1FB5   015E         GOTO 3900
 1FB5   015E    
 1FB5   015E    3520 REM:*** TRIPLE S2%=9 ***
 1FB8   015E         CALL OUTFLDNAME (W%,D)
 1FC5   015E         CALL DELIVERY(D)
 1FCE   015E         CALL NEWLINES
 1FD3   015E         IF B7%(P, B1!(P)) <> 1 THEN I5 = B3%(P, B1!(P)): I6 = 0: C
                ALL INCBATOFF (P,I5,I6): I6 = 1: CALL INCBATOFF (P,I5,I6): I6 =
                 5: CALL INCBATOFF (P,I5,I6): GOTO 3522
 205C   015E         I5 = P1%(P): I6 = 23: CALL INCPITOFF (P,I5,I6): I6 = 24: C
                ALL INCPITOFF (P,I5,I6): I6 = 28: CALL INCPITOFF (P,I5,I6)
 20AE   015E    3522 I5 = P1%(D): I6 = 1: CALL ADDPIT (D,I5,I6)
 20D2   015E         CALL RANDNUM(RN)
 20DB   015E         if rn<=30 and w% = 7 then
 20DB   015E            Y% = INT(RND(1) * 40) + 2900
 20DB   015E            CALL GETRPBP(Y%, Y$, D)
 212A   015E            CALL STRIPRPBP (Y$,Y%,D)
 213B   015E            CALL PBP (Y$)
 2144   015E            Y% = INT(RND(1) * 40) + 3050
 2144   015E            CALL GETRPBP(Y%, Y$, D)
 217F   015E            CALL STRIPRPBP (Y$,Y%,D)
 2190   015E            CALL PBP (Y$)
 2199   015E            goto 3524
 2199   015E         end if
 219C   015E    
 219C   015E         if rn<=30 and w% = 9 then
 219C   015E            Y% = INT(RND(1) * 40) + 2940
 219C   015E            CALL GETRPBP(Y%, Y$, D)
 21EB   015E            CALL STRIPRPBP (Y$,Y%,D)
 21FC   015E            CALL PBP (Y$)
 2205   015E            Y% = INT(RND(1) * 40) + 3050
 2205   015E            CALL GETRPBP(Y%, Y$, D)
 2240   015E            CALL STRIPRPBP (Y$,Y%,D)
 2251   015E            CALL PBP (Y$)
 225A   015E            goto 3524
 225A   015E         end if
 225D   015E    
 225D   015E         if rn<=30 and w% = 8 then
 225D   015E            Y% = INT(RND(1) * 40) + 2980
 225D   015E            CALL GETRPBP(Y%, Y$, D)
 22AC   015E            CALL STRIPRPBP (Y$,Y%,D)
 22BD   015E            CALL PBP (Y$)
 22C6   015E            Y% = INT(RND(1) * 40) + 3050
 22C6   015E            CALL GETRPBP(Y%, Y$, D)
 2301   015E            CALL STRIPRPBP (Y$,Y%,D)
 2312   015E            CALL PBP (Y$)
 231B   015E            goto 3524
 231B   015E         end if
 231E   015E    
 231E   015E    
                                                                      PAGE  18
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 231E   015E         CALL RANDNUM(RN)
 2327   015E    
 2327   015E         IF RN <= 10 AND W% <> 8 THEN 3570
 2338   015E         CALL LONGFLY (D,W%)
 2345   015E         ad$ = "wall": IF W% = 7 AND L%(1, 13) = 27 THEN ad$ = "scr
                een"
 236D   0162         bv = INT(RND(1) * 100) + 1: CALL RANDNUM(RN)
 23A0   0164         IF RN <= 20 THEN F$="It one-hops the "+ad$+"..."
 23C8   0164         IF RN <= 40 AND RN > 20 THEN F$="It's off the top of the "
                +ad$+"..."
 23F7   0164         IF RN <= 60 AND RN > 40 THEN CALL PBP ("It bounces fair"):
                F$="down into the corner..."
 2437   0168         IF RN <= 80 AND RN > 60 THEN CALL PBP ("It's in the gap"):
                F$="It rolls to the "+ad$
 247B   016C         IF RN <= 99 AND RN > 80 THEN F$="It hits at the base of th
                e "+ad$+"..."
 24AA   016C         IF RN > 99 THEN F$="The outfielders cross"
 24BE   016C         CALL PBP (F$)
 24C7   016C    3524 CALL RANDNUM(RN)
 24D0   016C         IF RN <= 90 THEN F$="Triple!!"
 24E4   016C         IF RN > 90 THEN F$="3-Bagger!"
 24F8   016C         CALL PBP (F$)
 2501   016C    3525 A5%(3) = 1: A5%(0) = 3: A5%(1) = 3: A5%(2) = 2
 2501   016C         CALL ADVANCEMENT (P,D,S2%,F%,I3)
 2532   016C         F% = 0
 2532   016C         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 2559   016C         IF F% = 0 THEN CALL TRYFOREXTRABASE (LN%,S2%,P2,Z2%,D,W%,S
                AH%,SB%,I8,I9)
 2590   016C         CALL SCOREBOARD: GOTO 3900
 2595   016C    
 2595   016C    3530 REM:*** HOME RUN S2%=10 ***
 2598   016C         CALL NEWLINES
 259D   016C         IF B7%(P, B1!(P)) <> 1 THEN I5 = B3%(P, B1!(P)): I6 = 0: C
                ALL INCBATOFF (P,I5,I6): I6 = 1: CALL INCBATOFF (P,I5,I6): I6 =
                 6: CALL INCBATOFF (P,I5,I6)
 2623   016C         I5 = P1%(D): I6 = 1: CALL ADDPIT (D,I5,I6)
 2647   016C         IF B7%(P, B1!(P)) = 1 THEN I5 = P1%(P): I6 = 23: CALL INCP
                ITOFF (P,I5,I6): I6 = 24: CALL INCPITOFF (P,I5,I6): I6 = 29: CA
                LL INCPITOFF (P,I5,I6)
 26BF   016C         CALL RANDNUM(RN)
 26C8   016C         IF RN <= 80 THEN CALL LONGFLY (D,W%): GOTO 3535
 26E2   016C         CALL RANDNUM(RN)
 26EB   016C         IF RN <= 20 AND (W% = 7 OR W% = 9) THEN
 26EB   016C             F$=Q$(0)+" hits it down the "+C$(W%)+" line"
 26EB   016C             CALL PBP (F$)
 2742   016C             CALL PBP ("It's long enough if it's fair...")
 2761   0170             GOTO 3536
 2761   0170         end if
 2764   0170         CALL PBP (Q$(0)+" swings...")
 278D   0174         IF RN > 20 AND RN <= 40 THEN CALL PBP ("NO DOUBT ABOUT THA
                T ONE!!"):F$="IT'S WAY OUT OF HERE!!"
 27CD   0178         IF RN > 40 AND RN <= 60 THEN F$=Q$(4)+" CAN ONLY LOOK UP!!
                "
 27EC   0178         IF RN > 60 AND RN <= 80 THEN F$=P$(D, P1%(D))+" WATCHES IT
                                                                      PAGE  19
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                 SAIL OUT!!"
 2820   0178         IF RN > 80 AND RN <= 90 THEN F$="GONE!!!"
 283B   0178         IF RN > 90 THEN F$="SAINTS AND HAYRAKES, LOOK AT 'ER SAIL!
                !"
 284F   0178         call pbp (F$)
 2858   0178    3536 CALL PBP ("HOME RUN!!"): CALL DELAY:GOTO 3544
 287C   017C    3535 CALL RANDNUM(RN)
 2888   017C         IF RN <= 5 AND L%(1, 13) = 8 AND W% = 7 THEN CALL PBP ("TH
                AT'S OUT OF THE PARK"): CALL PBP ("ON WAVELAND AVENUE!!!"):F$="
                HOME RUN...HOLY COW!!!": GOTO 3543
 28F4   0184         IF RN <= 15 AND L%(1, 13) = 8 AND W% = 7 THEN CALL PBP ("I
                T'S GONE"):F$="LAST SEEN BOUNCING DOWN WAVELAND AVENUE!!!": GOT
                O 3543
 2941   0188         IF RN <= 25 THEN 3580
 294B   0188    3545 CALL RANDNUM(RN)
 2954   0188         IF RN <= 7 THEN F$="GOODBYE!! IT'S A HOME RUN!!"
 2968   0188         IF RN > 7 AND RN <= 14 THEN F$="ADIOS!! IT'S A HOME RUN !!
                !"
 2983   0188         IF RN > 14 AND RN <= 21 THEN F$="SAY GOOD-BYE TO THAT ONE!
                !!"
 299E   0188         IF RN > 21 AND RN <= 28 THEN F$="TOUCH 'EM ALL!!"
 29B9   0188         IF RN > 28 AND RN <= 35 THEN F$="SEE YOU LATER!!"
 29D4   0188         IF RN > 35 AND RN <= 42 THEN F$="GOOD-BYE MR. SPALDING!! H
                OME RUN!!!"
 29EF   0188         IF RN > 42 AND RN <= 49 THEN F$="HOME RUN!! MY OH MY!!"
 2A0A   0188         IF RN > 49 AND RN <= 56 THEN F$="IT'S OVER THE WALL...OH D
                OCTOR!!!"
 2A25   0188         IF RN > 56 AND RN <= 63 THEN F$="LONG, LONG, AND GONE!!"
 2A40   0188         IF RN > 63 AND RN <= 70 THEN F$="HEY! HEY!...IT'S A HOME R
                UN !!!"
 2A5B   0188         IF RN > 70 AND RN <= 77 THEN F$="IT'S LONG, IT'S LONG, IT'
                S GONE!!!"
 2A76   0188         IF RN > 77 AND RN <= 84 THEN F$="HOLY COW!! IT'S A HOME RU
                N!!!"
 2A91   0188         IF RN > 84 AND RN <= 89 THEN F$="OPEN THE WINDOW AUNT MINN
                IE...HERE SHE COMES"
 2AAC   0188         IF RN > 89 AND RN <= 95 THEN CALL PBP ("WAAYYY BACK..."):F
                $="YOU CAN PUT IT ON THE BOARD, YYESSS!!"
 2AEC   018C         IF RN > 95 THEN CALL PBP ("IT'S WAY OUT OF HERE!! HOME RUN
                !!!"):F$="HOW 'BOUT THAT!!!"
 2B22   0190    3543 CALL PBP (F$):CALL DELAY
 2B30   0190    3544 A5%(3) = 1: A5%(2) = 2: A5%(1) = 3: A5%(0) = 4
 2B30   0190         I5 = P1%(D): I6 = 14: CALL ADDPIT (D,I5,I6)
 2B6C   0190         CALL ADVANCEMENT (P,D,S2%,F%,I3)
 2B85   0190         CALL SCOREBOARD
 2B8A   0190         GOTO 3900
 2B8A   0190    
 2B8A   0190    3570 CALL RANDNUM(RN): X$ = "1st"
 2B96   0190         IF W% = 7 THEN X$ = "3rd"
 2BB7   0194         IF RN <= 50 THEN CALL PBP (Q$(0)+" hits a hot smash")
 2BEA   0198         IF RN > 50 THEN CALL PBP (Q$(0)+" lines one")
 2C1D   019C         CALL PBP ("Fair past "+X$+"!!"): CALL PBP ("It rolls into 
                the "+C$(W%)+" corner")
 2C8B   01A4         CALL PBP ("It's a triple!!"): GOTO 3525
                                                                      PAGE  20
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 2CAA   01A8    3580 IF L%(1, 13) = 21 AND W% = 7 THEN CALL PBP ("IT CLEARS THE
                 GREEN MONSTER!!"):F$="HOME RUN!!!": GOTO 3543
 2CF0   01AC         IF L%(1, 13) = 27 AND W% = 7 THEN CALL PBP ("IT CLEARS THE
                 SCREEN!!"):F$="HOME RUN!!!": GOTO 3543
 2D33   01B0         IF L%(1, 13) = 33 AND P = 1 THEN CALL PBP ("ADIOS!! THAT'S
                 A HOME RUN!!"):F$="THE BUSCH EAGLE FLAPS ITS WINGS": GOTO 3543
 2D76   01B4         IF L%(1, 13) = 25 AND P = 1 THEN CALL PBP ("IT'S OUT OF HE
                RE FOR A HOMER!!!"): F$="THERE GOES THE EXPLODING SCOREBOARD!":
                 GOTO 3543
 2DB9   01B8         IF L%(1, 13) = 7 AND W% = 9 THEN CALL PBP ("IT CLEARS THE 
                WAGON GATE!!"): F$="THAT'S A HOME RUN!!": GOTO 3543
 2DFC   01BC         IF L%(1, 13) = 7 AND P = 1 THEN CALL PBP ("ADIOS!! THAT'S 
                A HOME RUN!!"): F$="THERE GO THE CANNONS!!": GOTO 3543
 2E3F   01C0         IF L%(1, 13) = 8 OR L%(1, 13) = 40 THEN F$="IT CLEARS THE 
                IVY FOR A HOME RUN!!": GOTO 3543
 2E5D   01C0         IF L%(1, 13) = 23 AND (W% = 7 OR W% = 9) THEN CALL PBP ("I
                T'S LONG, IT'S LONG, IT'S GONE!!"):F$="THAT ONE'S IN THE UPPER 
                DECK": GOTO 3543
 2EA7   01C4         GOTO 3545
 2EA7   01C4    
 2EA7   01C4    
 2EA7   01C4    3600 REM:*** strikeout ***
 2EAA   01C4         H6% = INT(RND(1) * 1000) + 1
 2EAA   01C4         IF H6% > B4%(P, 4, B1!(P)) THEN 3610
 2F06   01C4    
 2F06   01C4    
 2F06   01C4    3601 CALL NEWLINES
 2F0B   01C4         CALL STRIKEOUT (U%,D)
 2F18   01C4    3602 W% = 2: CALL CREDITREGPO (W%,D)
 2F2B   01C4         O%(0) = O%(0) + 1
 2F2B   01C4         O%(1) = O%(1) + 1
 2F2B   01C4         SO = 1
 2F2B   01C4         IF B7%(P, B1!(P)) <> 1 THEN I5 = B3%(P, B1!(P)): I6 = 0: C
                ALL INCBATOFF (P,I5,I6): I6 = 8: CALL INCBATOFF (P,I5,I6): IF P
                2 = 2 THEN U% = 3
 2FB5   01C4         I5 = P1%(D): I6 = 5: CALL ADDPIT (D,I5,I6): I6 = 0: CALL A
                DDPIT (D,I5,I6)
 2FF0   01C4         IF B7%(P, B1!(P)) = 1 THEN I5 = P1%(P): I6 = 23: CALL INCP
                ITOFF (P,I5,I6): I6 = 31: CALL INCPITOFF (P,I5,I6): IF P2 = 2 T
                HEN U% = 3
 305E   01C4         IF P2 = 2 AND O%(0) < 3 THEN SO = 7: GOTO 4800
 3075   01C4    
 3075   01C4         REM:*** WILD PITCH OR PASSED BALL ON A STRIKEOUT
 3075   01C4         I = INT(RND(1) * 600) + 1
 3075   01C4         IF B0%(1, 0) = 0 AND I = 9 AND SO = 1 OR O%(0) = 3 AND I =
                 9 THEN
 3075   01C4            O%(0) = O%(0) - 1: O%(1) = O%(1) - 1
 3075   01C4            I5 = P1%(D): P8%(D, I5, 0) = P8%(D, I5, 0) - 1
 3075   01C4            P5%(D, I5, 0) = P5%(D, I5, 0) - 1
 3075   01C4            B8%(D, B9%(D, 2), 16) = B8%(D, B9%(D, 2), 16) - 1
 3075   01C4            B5%(D, B9%(D, 2), 16) = B5%(D, B9%(D, 2), 16) - 1
 3075   01C4            I1 = INT(RND(1) * 100) + 1: IF I1 < 77 THEN 3230 ELSE 3
                220
 3147   01C4         END IF
                                                                      PAGE  21
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 3147   01C4         GOTO 3900
 3147   01C4    
 3147   01C4    
 3147   01C4    3610 REM:*** ground ball for out ***
 314A   01C4         H6% = INT(RND(1) * 100) + 1
 314A   01C4         E2% = B%(P, B3%(P, B1!(P)), 18) + P%(D, P1%(D), 12) - 52
 314A   01C4         E3% = 23 + P%(D, P1%(D), 12)
 314A   01C4         E4% = 0: IF H6% > E2% AND B7%(P, B1!(P)) <> 1 THEN E4% = 1
 31FF   01C8         IF H6% > E3% AND B7%(P, B1!(P)) = 1 THEN E4% = 1
 3231   01C8         IF E4% = 1 THEN 4000
 323B   01C8         S2% = 13
 323B   01C8         CALL GETINFIELDER (W%,P,I1,D,S2%,P2): CALL NEWLINES: S2% =
                 13
 3263   01C8         CALL DELIVERY(D)
 3272   01C8         CALL GROUNDERPBP (W%,D)
 327F   01C8         IF W% = 2 THEN 3612
 3289   01C8         IF W% = 1 THEN F$=F$+"the pitcher":CALL PBP (F$):GOTO 3612
 32AD   01C8         F$=F$+F$(W%):CALL PBP (F$)
 32CC   01C8    3612 IF (S4% = 1 OR S4% = 4 OR ((S4% = 7 OR S4% = 5) AND INFPOS
                % < 2)) AND O%(0) <= 1 and RN<=50 THEN
 32CC   01C8            CALL DPPBP
 330E   01C8            DPC% = 1
 330E   01C8         END IF
 3314   01CA         IF B7%(P, B1!(P)) <> 1 THEN
 3314   01CA            I5 = B3%(P, B1!(P)): I6 = 0
 3314   01CA            CALL INCBATOFF (P,I5,I6)
 336C   01CA         ELSE
 336F   01CA            I5 = P1%(P): I6 = 23
 336F   01CA            CALL INCPITOFF (P,I5,I6)
 3393   01CA         END IF
 3393   01CA         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 33B4   01CA         IF F% = 1 THEN 3900
 33BE   01CA         REM:*** 2 outs, bases empty, runner 2nd, runner 3rd, or 2n
                d&3rd ***
 33BE   01CA         IF O%(0) = 2 OR S4% = 0 OR S4% = 2 OR S4% = 3 OR S4% = 6 T
                HEN 3650
 33F0   01CA         H6% = INT(RND(1) * 1000) + 1: E2% = ((L%(D, 5) - 80) * 4)
 33F0   01CA         E3% = ((5 - B%(P, B3%(P, B1!(P)), 16)) * 9)
 33F0   01CA         IF W% = 2 AND H6% > 250 + E2% + E3% THEN 3650
 3487   01CA         IF H6% > 490 + E2% + E3% THEN 3650
 349A   01CA         IF P2 = 2 THEN 3650
 34A4   01CA         S2% = 13
 34A4   01CA         IF S4% = 4 AND W% = 5 AND INT(RND(1) * 3) + 1 = 1 THEN 363
                3
 34EC   01CA         IF S4% = 4 AND W% = 2 THEN CALL CREDITASSIST (W%,D): GOTO 
                3633
 3510   01CA         IF S4% = 7 AND W% = 1 THEN CALL CREDITASSIST (W%,D): TB = 
                9: W% = 2: CALL PBP ("He throws home"): GOTO 3631
 355F   01D0         IF S4% = 5 AND S6%(P, 0) - S6%(D, 0) >= 0 AND INNING% > 7 
                AND O%(0) = 0 AND INFPOS% > 0 AND W% = 5 OR S4% = 5 AND S6%(P, 
                0) - S6%(D, 0) >= 0 AND INNING% > 7 AND O%(0) = 0 AND INFPOS% >
                 0 AND W% = 3 THEN 3650
 35DB   01D0         IF S4% = 7 AND INFPOS% > 0 AND (W% = 5 OR W% = 3) THEN CAL
                L CREDITASSIST (W%,D): TB = 9: W% = 2: CALL PBP ("He fires it h
                                                                      PAGE  22
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                ome"): GOTO 3631
 363B   01D4         IF S4% = 7 AND INFPOS% = 2 AND W% = 4 THEN CALL CREDITASSI
                ST (W%,D): TB = 9: W% = 2: CALL PBP ("He throws home for the fo
                rce"): GOTO 3631
 3694   01D8         IF S4% = 7 AND INFPOS% = 2 AND W% = 6 THEN CALL CREDITASSI
                ST (W%,D): TB = 9: W% = 2: CALL PBP ("He goes home with it"): G
                OTO 3631
 36ED   01DC         IF W% <= 4 THEN
 36ED   01DC            CALL CREDITASSIST (W%,D)
 3704   01DC            W% = 6
 3704   01DC            CALL PBP ("He throws to "+B$(D, B9%(D, 6)))
 374C   01E0         ELSE
 374F   01E0            CALL CREDITASSIST (W%,D)
 375C   01E0            W% = 4
 375C   01E0            CALL PBP ("He throws to "+B$(D, B9%(D, 4)))
 37A4   01E4         END IF
 37A4   01E4    
 37A4   01E4         A5%(1) = 11: A5%(2) = 0: A5%(3) = 0: A5%(0) = 0
 37A4   01E4    
 37A4   01E4         IF S4% = 7 AND (W% = 2 OR W% = 1) THEN
 37A4   01E4            A5%(3) = 11: A5%(2) = 1: A5%(1) = 1: A5%(0) = 1
 37A4   01E4         END IF
 37E9   01E4         GOTO 3634
 37E9   01E4    
 37E9   01E4    3631 A5%(3) = 11: A5%(1) = 0: A5%(2) = 0: A5%(0) = 0: GOTO 3634
 37EC   01E4    3633 A5%(3) = 0: A5%(2) = 11: A5%(1) = 0: A5%(0) = 0
 3807   01E4    3634 I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6): O%(0) = O%(0) 
                + 1: O%(1) = O%(1) + 1
 3843   01E4         Q$(4) = B$(D, B9%(D, W%))
 3843   01E4    
 3843   01E4    
 3843   01E4         CALL ADVANCEMENT (P,D,S2%,F%,I3)
 388C   01E4         CALL CREDITREGPO (W%,D)
 3899   01E4    
 3899   01E4    
 3899   01E4         S2% = 15
 3899   01E4         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 38C0   01E4    
 38C0   01E4    
 38C0   01E4         IF F% = 1 THEN 3900
 38CA   01E4         CALL CREDITASSIST (W%,D)
 38D7   01E4         IF W% = 5 AND O%(0) < 2 AND INT(RND(1) * 10) + 1 <= B%(P, 
                B3%(P, B0%(1, 0)), 16) THEN 3643
 3936   01E4         A5%(0) = 11: A5%(1) = 1: A5%(2) = 0: A5%(3) = 0
 3936   01E4         IF O%(0) < 2 THEN A5%(2) = 1: A5%(3) = 1
 3961   01E4         GOTO 3644
 3961   01E4    3643 A5%(0) = 1: A5%(1) = 11: A5%(2) = 0: A5%(3) = 0
 3964   01E4         IF O%(0) < 2 THEN A5%(2) = 1: A5%(3) = 1
 398F   01E4    3644 O%(0) = O%(0) + 1: O%(1) = 2: I5 = P1%(D): I6 = 0
 398F   01E4         CALL DPRELAY
 39B1   01E4         CALL ADDPIT (D,I5,I6)
 39C2   01E4    
 39C2   01E4         CALL ADVANCEMENT (P,D,S2%,F%,I3)
 39DB   01E4    
                                                                      PAGE  23
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 39DB   01E4    
 39DB   01E4         CALL CREDITPUTOUT (I3,FB2P%,AST%,D)
 39F0   01E8    
 39F0   01E8    
 39F0   01E8         CALL RANDNUM(RN)
 39F9   01E8         DPC% = 0
 39F9   01E8         IF RN <= 80 THEN F$=" --- DOUBLE PLAY ---"
 3A13   01E8         IF RN > 80 THEN F$=" --- TWIN KILLING ---"
 3A27   01E8         CALL PBP (F$)
 3A30   01E8         DP%(D) = DP%(D) + 1: D3%(D) = D3%(D) + 1
 3A30   01E8         TB = 0: CALL INCREMENTHIT (P,D,MO): GOTO 3900
 3A55   01E8    3650 IF O%(0) < 2 THEN 3690
 3A62   01E8         I = INT(RND(1) * 10) + 1: S2% = 13
 3A62   01E8         IF W% = 5 AND I <= 5 AND (S4% = 4 OR S4% = 7) THEN CALL PI
                TCHERNAME (W%,D): CALL PBP (Q$(4)+" gloves it and heads for 3rd
                "): GOTO 3670
 3AF0   01EC         IF W% = 5 THEN CALL PITCHERNAME (W%,D): CALL GROUNDERS (W%
                ,D): CALL THROW2FIRST (D): GOTO 3672
 3B20   01EC         IF W% = 6 AND I <= 8 AND (S4% = 1 OR S4% = 4 OR S4% = 5 OR
                 S4% = 7) THEN CALL PITCHERNAME (W%,D): CALL GROUNDERS (W%,D): 
                CALL DPPIVOT (W%,D): ast% = 6: GOTO 3671
 3B83   01EC         IF W% = 6 THEN CALL PITCHERNAME (W%,D): CALL GROUNDERS (W%
                ,D): CALL THROW2FIRST (D): GOTO 3672
 3BB3   01EC         IF W% = 4 AND I <= 5 AND (S4% = 1 OR S4% = 4 OR S4% = 5 OR
                 S4% = 7) THEN CALL PITCHERNAME (W%,D): CALL GROUNDERS (W%,D): 
                CALL DPPIVOT (W%,D): ast% = 4: GOTO 3671
 3C16   01EC         CALL RANDNUM(RN)
 3C1F   01EC         IF W% = 3 AND RN <= 94 THEN CALL PITCHERNAME (W%,D): CALL 
                GROUNDERS (W%,D): CALL PBP ("He takes it to the bag unassisted"
                ): fbu% = 1: GOTO 3672
 3C75   01F2         IF W% = 3 THEN CALL PITCHERNAME (W%,D): CALL GROUNDERS (W%
                ,D): W% = 1: CALL PITCHERNAME (W%,D): CALL PBP ("He flips it to
                 "+Q$(4)+" covering"): fb2p% = 1: W% = 3: GOTO 3672
 3CEE   01F6         CALL PITCHERNAME (W%,D): CALL GROUNDERS (W%,D): CALL SECON
                D2FIRST (D): GOTO 3672
 3D11   01F6    3670 A5%(0) = 0: A5%(1) = 0: A5%(2) = 11: A5%(3) = 0: GOTO 3684
 3D14   01F6    3671 A5%(0) = 0: A5%(1) = 11: A5%(2) = 0: A5%(3) = 0: GOTO 3684
 3D2F   01F6    3672 A5%(0) = 11: A5%(1) = 0: A5%(2) = 0: A5%(3) = 0
 3D4A   01F6    
 3D4A   01F6    3684 IF fbu% = 0 THEN CALL CREDITASSIST (W%,D)
 3D79   01F6         fbu% = 0
 3D79   01F6         if dpc% = 1 and a5%(0) = 1 then dpc% = 2
 3D93   01F6         CALL ADVANCEMENT (P,D,S2%,F%,I3)
 3DAC   01F6         IF DPC% = 2 THEN
 3DAC   01F6            DPC% = 0
 3DAC   01F6            CALL DPSAFE
 3DC1   01F6         END IF
 3DC1   01F6         IF I3>4 THEN I3=1
 3DCE   01F6         CALL CREDITPUTOUT (I3,FB2P%,AST%,D)
 3DE3   01F6    
 3DE3   01F6    
 3DE3   01F6         O%(0) = O%(0) + 1
 3DE3   01F6         O%(1) = O%(1) + 1
 3DE3   01F6         I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6)
                                                                      PAGE  24
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 3E0F   01F6         GOTO 3900
 3E0F   01F6    
 3E0F   01F6    3690 I = INT(RND(1) * 100) + 1
 3E12   01F6         IF I <= 90 AND P2 <> 2 OR S4% = 0 THEN 3720
 3E57   01F6         IF I <= 10 AND P2 = 2 THEN 3720
 3E68   01F6         S2% = 13: A5%(1) = 1: A5%(2) = 1: A5%(3) = 1: A5%(0) = 11
 3E68   01F6         I = INT(RND(1) * 100) + 1
 3E68   01F6         IF S4% = 1 OR S4% = 4 OR S4% = 5 OR S4% = 7 THEN 3713
 3ED8   01F6    3693 I = INT(RND(1) * 100) + 1
 3ED8   01F6         A5%(1) = 0: A5%(2) = 0: A5%(3) = 0
 3ED8   01F6         IF W% = 5 AND I <= 25 AND INFPOS% < 2 THEN A5%(2) = 1
 3F2F   01F6         IF W% = 5 AND I <= 83 AND INFPOS% = 0 THEN A5%(3) = 1:REM 
                WAS 50
 3F4A   01F6         IF W% = 5 AND I <= 10 AND INFPOS% > 0 THEN A5%(3) = 1
 3F65   01F6         IF W% = 5 AND I < 5 AND INFPOS% < 2 AND S4% = 2 AND S6%(P,
                 0) - S6%(D, 0) > -2 OR W% = 5 AND I < 5 AND INFPOS% < 2 AND S4
                % = 6 AND A5%(3) = 1 AND S6%(P, 0) - S6%(D, 0) > -2 THEN A5%(2)
                 = 11: A5%(0) = 1: CALL PBP ("NO, he's going to third")
 4013   01FA         IF W% = 6 AND I <= 20 AND INFPOS% < 2 THEN A5%(2) = 1
 402E   01FA         IF W% = 6 AND I <= 92 AND INFPOS% < 2 THEN A5%(3) = 1
 4049   01FA         IF W% = 6 AND I <= 5 AND INFPOS% = 2 THEN A5%(3) = 1
 4064   01FA         IF W% = 6 AND I < 6 AND INFPOS% < 2 AND S4% = 2 AND S6%(P,
                 0) - S6%(D, 0) > -2 OR W% = 6 AND I < 6 AND INFPOS% < 2 AND S4
                % = 6 AND A5%(3) = 1 AND S6%(P, 0) - S6%(D, 0) > -2 THEN A5%(2)
                 = 11: A5%(0) = 1: CALL PBP ("NO, he's going to third")
 4112   01FE         IF W% = 4 AND I <= 90 AND INFPOS% < 2 THEN A5%(2) = 1
 412D   01FE         IF W% = 4 AND I <= 90 AND INFPOS% < 2 THEN A5%(3) = 1
 4148   01FE         IF W% = 4 AND I <= 65 AND INFPOS% = 2 THEN A5%(2) = 1
 4163   01FE         IF W% = 4 AND I <= 5 AND INFPOS% = 2 THEN A5%(3) = 1
 417E   01FE         IF W% = 3 AND I <= 95 THEN A5%(2) = 1
 4192   01FE         IF W% = 3 AND I <= 88 AND INFPOS% = 0 THEN A5%(3) = 1:REM:
                 WAS 60
 41AD   01FE         IF W% = 3 AND I <= 15 AND INFPOS% > 0 THEN A5%(3) = 1
 41C8   01FE         IF W% = 1 AND I <= 30 THEN A5%(2) = 1
 41DC   01FE         IF W% = 1 AND I <= 50 AND INFPOS% = 0 THEN A5%(3) = 1
 41F7   01FE         IF W% = 1 AND I <= 10 AND INFPOS% > 0 THEN A5%(3) = 1
 4212   01FE         IF W% = 2 AND I <= 45 THEN A5%(2) = 1
 4226   01FE    3713 GOTO 3684
 4226   01FE    3720 S2% = 14
 4229   01FE         IF S4% = 0 OR S4% = 2 OR S4% = 3 OR S4% = 6 THEN A5%(0) = 
                11: CALL OUTATFIRST (W%,D,FBU%,FB2P%): GOTO 3693
 426C   01FE         I = INT(RND(1) * 100) + 1
 426C   01FE         A5%(0) = 1: A5%(1) = 1: A5%(2) = 1: A5%(3) = 1: IF INFPOS%
                 = 0 AND W% = 2 THEN A5%(3) = 0
 42C2   01FE         IF S4% = 5 OR S4% = 7 OR S4% = 4 THEN 3725
 42E0   01FE         A5%(1) = 11: GOTO 3743
 42E0   01FE    3725 IF S4% = 4 OR S4% = 7 THEN 3732
 42FD   01FE         IF S6%(P, 0) - S6%(D, 0) >= 0 AND INNING% > 6 AND O%(0) = 
                0 AND INFPOS% > 0 AND W% = 5 OR S6%(P, 0) - S6%(D, 0) >= 0 AND 
                INNING% > 6 AND O%(0) = 0 AND INFPOS% > 0 AND W% = 3 THEN A5%(3
                ) = 11: GOTO 3743
 436E   01FE         IF INFPOS% = 0 AND W% <> 2 THEN A5%(1) = 11: GOTO 3743
 4385   01FE         IF INFPOS% > 0 AND W% = 5 OR INFPOS% > 0 AND W% = 3 THEN A
                5%(3) = 0: A5%(1) = 11: GOTO 3743
                                                                      PAGE  25
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 43B0   01FE         IF INFPOS% > 0 AND (W% = 1 OR W% = 3) THEN A5%(3) = 0: A5%
                (1) = 1: A5%(0) = 11: GOTO 3743
 43DA   01FE         IF INFPOS% = 2 AND W% = 4 OR INFPOS% = 2 AND W% = 6 AND I 
                <= 90 THEN A5%(3) = 0: A5%(1) = 11: GOTO 3743
 440C   01FE         A5%(1) = 11: GOTO 3743
 440C   01FE    3732 IF W% = 6 AND I < 6 AND INFPOS% < 2 AND INNING% < 9 OR W% 
                = 5 AND I < 6 AND INFPOS% < 2 AND INNING% < 9 THEN A5%(2) = 11:
                 GOTO 3684
 4456   01FE         IF S4% = 7 THEN 3740
 4460   01FE         I = INT(RND(1) * 10) + 1: A5%(0) = 1: A5%(1) = 11: A5%(2) 
                = 1: A5%(3) = 0
 4460   01FE         IF W% = 5 AND I <= 5 THEN A5%(1) = 1: A5%(2) = 11: A5%(3) 
                = 0
 44C2   01FE         IF W% = 1 AND I <= 3 THEN A5%(1) = 1: A5%(2) = 11: A5%(3) 
                = 0
 44E2   01FE         IF W% = 2 AND B%(P, B3%(P, B0%(2, 0)), 16) < 7 AND B%(P, B
                3%(P, B0%(2, 0)), 16) > 0 THEN A5%(1) = 1: A5%(2) = 11: A5%(3) 
                = 0: GOTO 3743
 4529   01FE         IF W% = 2 AND B%(P, B3%(P, B0%(2, 0)), 16) > 6 THEN A5%(1)
                 = 1: A5%(2) = 1: A5%(0) = 11
 4566   01FE         GOTO 3743
 4566   01FE    3740 I = INT(RND(1) * 100) + 1: A5%(1) = 11: A5%(2) = 1: A5%(3)
                 = 1: A5%(0) = 1
 4569   01FE         IF INFPOS% > 0 AND W% = 5 OR INFPOS% > 0 AND W% = 3 OR INF
                POS% = 2 AND W% = 4 OR INFPOS% = 2 AND W% = 6 OR W% = 2 OR W% =
                 1 THEN A5%(3) = 11: A5%(0) = 1: A5%(1) = 1: A5%(2) = 1: GOTO 3
                743
 460C   01FE         IF W% = 5 AND I <= 5 OR W% = 1 OR W% = 2 THEN A5%(3) = 11:
                 A5%(2) = 1: A5%(1) = 1: A5%(0) = 1
 4640   01FE    3743 GOTO 3684
 4640   01FE    
 4640   01FE    
 4640   01FE    3900 CALL GMove4VE (20,48,44,128,VARSEG(VB%(0)),-1)
 466A   01FE         CALL ClearVE
 466F   01FE         I$=INKEY$
 466F   01FE         IF UCASE$(I$) = "Q" THEN call SCREEN0(0): END
 46AA   0204    
 46AA   0204         REM:CALL GMove2VE (17,128,46,80,VA%(17),0)
 46AA   0204         DPC% = 0:H0% = 0: INFPOS% = 0: F% = 0: PQ = 0: H0%(0) = 0
 46AA   0204         IF O%(0) = 3 THEN 5000
 46D8   0206         GOTO 5050
 46D8   0206    
 46D8   0206    3955 CALL GMove4VE (20,48,44,128,VARSEG(VB%(0)),-1)
 4702   0206         CALL ClearVE
 4707   0206         RETURN
 4707   0206    
 4707   0206    4000 rem:balls hit to the air
 4708   0206         I = INT(RND(1) * 100) + 1
 4708   0206         A5%(0) = 0: A5%(1) = 0: A5%(2) = 0: A5%(3) = 0
 4708   0206         IF I <= 73 THEN 4020:rem flyout
 4754   0206         IF I <= 89 THEN 4010:rem popup
 475E   0206         S2% = 21
 475E   0206         CALL GETINFIELDER (W%,P,I1,D,S2%,P2)
 4781   0206         CALL NEWLINES
                                                                      PAGE  26
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 4786   0206         CALL DELIVERY(D)
 478F   0206    
 478F   0206         Y% = INT(RND(1) * 42) + 70
 478F   0206         CALL GETRPBP(Y%, Y$, D)
 47CA   0206         CALL STRIPRPBP (Y$,Y%,D)
 47DB   0206         CALL PBP (Y$)
 47E4   0206    
 47E4   0206         Y% = INT(RND(1) * 34) + 120
 47E4   0206         CALL GETRPBP(Y%, Y$, D)
 481F   0206         CALL STRIPRPBP (Y$,Y%,D)
 4830   0206         CALL PBP (Y$)
 4839   0206    
 4839   0206         IF B7%(P, B1!(P)) = 1 THEN
 4839   0206            I5 = P1%(P): I6 = 23: CALL INCPITOFF (P,I5,I6)
 4883   0206         ELSE
 4886   0206            I5 = B3%(P, B1!(P)): I6 = 0: CALL INCBATOFF (P,I5,I6)
 48C0   0206         END IF
 48C0   0206    
 48C0   0206         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 48E1   0206         IF F% = 1 THEN 3900
 48EB   0206    
 48EB   0206         O%(0) = O%(0) + 1
 48EB   0206         O%(1) = O%(1) + 1
 48EB   0206         CALL CREDITREGPO (W%,D)
 4900   0206         I5 = P1%(D): I6 = 0
 4900   0206         CALL ADDPIT (D,I5,I6)
 4924   0206         IF O%(0) = 3 THEN 3900
 492E   0206    
 492E   0206         I = INT(RND(1) * 100) + 1
 492E   0206         IF (S4% = 1 OR S4% = 5) AND I >= 80 OR (S4% = 1 OR S4% = 5
                ) AND P2 = 2 THEN 4012
 4988   0206         IF (S4% = 4 OR S4% = 2) AND I >= 80 OR S4% = 4 AND P2 = 2 
                THEN 4014
 49B1   0206    4009 CALL ADVANCEMENT (P,D,S2%,F%,I3): GOTO 3900
 49CA   0206    
 49CA   0206    4010 rem: infield popup
 49CD   0206         CALL GETINFIELDER (W%,P,I1,D,S2%,P2): S2% = 20: CALL NEWLI
                NES
 49F5   0206         IF W% = 1 THEN W% = 2: Q$(4) = B$(D, B9%(D, W%))
 4A2A   0206         IF (W% = 2 OR W% = 5 OR W% = 3) AND INT(RND(1) * 100) + 1 
                <= 30 THEN fo% = 1
 4A76   0208         if fo%=0 and (s4%=4 or s4%=7) and o%(0)<2 then call pbp("I
                NFIELD FLY RULE CALLED")
 4ABA   020C          if fo%=1 and w%=2 then y% = INT(RND(1) * 24) + 180
 4AF2   020C          if fo%=1 and (w%=3 or w%=4) then y% = INT(RND(1) * 31) + 
                210
 4B31   020C          if fo%=1 and (w%=5 or w%=6) then y% = INT(RND(1) * 31) + 
                250
 4B70   020C          if fo%<>1 and w%=2 then y% = INT(RND(1) * 50) + 400
 4BA8   020C          if fo%<>1 and w%=3 then y% = INT(RND(1) * 60) + 450
 4BE0   020C          if fo%<>1 and w%=5 then y% = INT(RND(1) * 60) + 510
 4C18   020C          if fo%<>1 and w%=6 then y% = INT(RND(1) * 60) + 570
 4C50   020C          if fo%<>1 and w%=4 then y% = INT(RND(1) * 60) + 630
 4C88   020C          CALL GETRPBP(Y%, Y$, D): CALL STRIPRPBP (Y$,Y%,D)
                                                                      PAGE  27
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 4CAA   020C          CALL PBP (Y$)
 4CB3   020C    
 4CB3   020C          if fo%=1 and w%=2 then y% = INT(RND(1) * 12) + 321
 4CEB   020C          if fo%=1 and (w%=3 or w%=4) then y% = INT(RND(1) * 25) + 
                340
 4D2A   020C          if fo%=1 and (w%=5 or w%=6) then y% = INT(RND(1) * 25) + 
                370
 4D69   020C          if fo%<>1 then y% = INT(RND(1) * 25) + 690
 4D9A   020C          CALL GETRPBP(Y%, Y$, D): CALL STRIPRPBP (Y$,Y%,D)
 4DBC   020C          CALL PBP (Y$)
 4DC5   020C    
 4DC5   020C    
 4DC5   020C    4011 IF B7%(P, B1!(P)) = 1 THEN
 4DC5   020C            I5 = P1%(P): I6 = 23
 4DC5   020C            CALL INCPITOFF (P,I5,I6)
 4E0F   020C         ELSE
 4E12   020C            I5 = B3%(P, B1!(P)): I6 = 0
 4E12   020C            CALL INCBATOFF (P,I5,I6)
 4E4C   020C         END IF
 4E4C   020C    
 4E4C   020C         IF S4% = 4 THEN 4017
 4E56   020C         IF INT(RND(1) * 100) + 1 <= 25 AND (L%(1, 13) = 11 OR L%(1
                , 13) = 8) THEN CALL PBP ("fights the wind...")
 4EBA   0210         IF INT(RND(1) * 100) + 1 <= 15 AND (L%(1, 13) = 2 OR L%(1,
                 13) = 4 OR L%(1, 13) = 13 OR L%(1, 13) = 24) THEN CALL PBP ("f
                ights the lights...")
 4F2C   0214         IF fo% <> 1 THEN CALL FLDERR (F%,W%,D,I3,SB%,S2%,P): IF F%
                 = 1 THEN 3900
 4F61   0214    
 4F61   0214    4017 fo% = 0
 4F61   0214         CALL PBP (Q$(4)+" makes the catch")
 4F90   0218         CALL CREDITREGPO (W%,D)
 4F9D   0218         O%(0) = O%(0) + 1
 4F9D   0218         O%(1) = O%(1) + 1
 4F9D   0218         I5 = P1%(D): I6 = 0
 4F9D   0218         CALL ADDPIT (D,I5,I6)
 4FC9   0218         GOTO 3900
 4FC9   0218    
 4FC9   0218    4012 rem:runner doubled off of 1st
 4FCC   0218         A5%(1) = 10: O%(0) = O%(0) + 1: O%(1) = O%(1) + 1
 4FCC   0218         CALL ADDPIT (D,I5,I6)
 4FEB   0218         D3%(D) = D3%(D) + 1: DP%(D) = DP%(D) + 1
 4FEB   0218         if w%<>3 then
 4FEB   0218            Y% = INT(RND(1) * 10) + 160
 4FEB   0218         else
 502D   0218            y% = int(rnd(1) * 10) + 170
 502D   0218         end if
 5057   0218         CALL GETRPBP(Y%, Y$, D)
 5068   0218         CALL STRIPRPBP (Y$,Y%,D)
 5079   0218         call pbp(Y$)
 5082   0218         I3 = 1
 5082   0218         CALL CREDITPUTOUT (I3,FB2P%,AST%,D)
 509D   0218         call pbp(" --- DOUBLE PLAY ---")
 50BC   021C         IF W%<> 3 THEN CALL CREDITASSIST (W%,D)
                                                                      PAGE  28
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 50D3   021C         GOTO 4009
 50D3   021C    
 50D3   021C    4014 rem:runner doubled off of 2nd
 50D6   021C         A5%(2) = 10: O%(0) = O%(0) + 1: O%(1) = O%(1) + 1
 50D6   021C         CALL ADDPIT (D,I5,I6)
 50F5   021C         D3%(D) = D3%(D) + 1:DP%(D) = DP%(D) + 1
 50F5   021C         I3 = 2
 50F5   021C         CALL CREDITPUTOUT (I3,FB2P%,AST%,D)
 511E   021C         call pbp(" --- DOUBLE PLAY ---")
 513D   0220         CALL CREDITASSIST (W%,D)
 514A   0220         GOTO 4009
 514A   0220    
 514A   0220    
 514A   0220    
 514A   0220    
 514A   0220    4020 REM:*** FLY  OUTS ***
 514D   0220         CALL GETOUTFIELDER (W%,P,I1,D)
 5162   0220         IF B7%(P, B1!(P)) <> 1 THEN
 5162   0220            I5 = B3%(P, B1!(P)): I6 = 0
 5162   0220            CALL INCBATOFF (P,I5,I6)
 51BA   0220         ELSE
 51BD   0220            I5 = P1%(P): I6 = 23
 51BD   0220            CALL INCPITOFF (P,I5,I6)
 51E1   0220         END IF
 51E1   0220         I = INT(RND(1) * 100) + 1
 51E1   0220         IF I <= 17 THEN 4050
 5215   0220         IF I <= 33 THEN 4060
 521F   0220         REM:*** regular fly out ***
 521F   0220         S2% = 18: CALL NEWLINES
 522A   0220         X$ = C$(W%)
 522A   0220         IF INT(RND(1) * 100) <= 25 AND W% = 7 THEN X$ = "lcf"
 527F   0220         IF INT(RND(1) * 100) <= 25 AND W% = 9 THEN X$ = "rcf"
 52BF   0220         CALL DELIVERY (D)
 52C8   0220         CALL RANDNUM(RN)
 52D1   0220         Y% = INT(RND(1) * 90) + 1070
 52D1   0220         IF (W% = 7 or W% = 9) AND RN<=10 THEN X$="":Y% = INT(RND(1
                ) * 10) + 1160
 5347   0220         CALL GETRPBP (Y%, Y$, D)
 5358   0220         CALL STRIPRPBP (Y$,Y%,D)
 5369   0220         CALL PBP (Y$+ " "+ X$)
 539C   0224         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 53BD   0224         IF F% = 1 THEN 3900
 53C7   0224    4025 CALL CREDITREGPO (W%,D)
 53D4   0224         CALL CAUGHTFLY (I,S2%,D)
 53E5   0224         O%(0) = O%(0) + 1: O%(1) = O%(1) + 1
 53E5   0224         I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6)
 5411   0224         IF O%(0) = 3 THEN 3900
 541B   0224         I = INT(RND(1) * 100) + 1
 541B   0224         IF S2%=19 AND S4%=1 AND I<=33 AND P2=2 OR S2%=19 AND S4%=5
                 AND I<=33 THEN
 541B   0224            A5%(1)=10
 541B   0224            O%(0)=O%(0)+1:O%(1)=O%(1)+1
 541B   0224            CALL ADDPIT (D,I5,I6)
 549E   0224            D3%(D)=D3%(D)+1:DP%(D)=DP%(D)+1
                                                                      PAGE  29
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 549E   0224            CALL CREDITASSIST (W%,D)
 54B9   0224            GOTO 4009
 54B9   0224         END IF
 54BC   0224         IF B0%(3,0)>0 THEN I8=4:LN%=3308:CALL TRYFOREXTRABASE (LN%
                ,S2%,P2,Z2%,D,W%,SAH%,SB%,I8,I9)
 54FF   0224         IF I9=1 THEN I9=0:GOTO 4074
 550F   0224         GOTO 4066
 550F   0224    
 550F   0224    4050 REM:*** shallow fly ball ***
 5512   0224         S2% = 19
 5512   0224         CALL NEWLINES
 551D   0224         X$ = C$(W%)
 551D   0224         IF INT(RND(1) * 100) <= 25 AND W% = 7 THEN X$ = "lcf"
 5572   0224         IF INT(RND(1) * 100) <= 25 AND W% = 9 THEN X$ = "rcf"
 55B2   0224         CALL DELIVERY(D)
 55BB   0224         CALL RANDNUM(RN)
 55C4   0224         Y% = INT(RND(1) * 60) + 1170
 55C4   0224         CALL GETRPBP (Y%, Y$, D)
 55FF   0224         CALL STRIPRPBP (Y$,Y%,D)
 5610   0224         CALL PBP (Y$+ " "+ X$)
 5643   0228         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 5664   0228         IF F% = 1 THEN 3900
 566E   0228         GOTO 4025
 566E   0228    
 566E   0228    4060 REM:*** deep fly out ***
 5671   0228         S2% = 17
 5671   0228         CALL NEWLINES
 567C   0228         CALL LONGFLY (D,W%)
 5689   0228         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 56AA   0228         IF F% = 1 THEN 3900
 56B4   0228         CALL CREDITREGPO (W%,D)
 56C1   0228         CALL CAUGHTFLY (I,S2%,D)
 56D2   0228         O%(0) = O%(0) + 1
 56D2   0228         O%(1) = O%(1) + 1
 56D2   0228         I5 = P1%(D): I6 = 0
 56D2   0228         CALL ADDPIT (D,I5,I6)
 56FE   0228         IF O%(0) = 3 THEN 3900
 5708   0228         IF B0%(3, 0) = 0 THEN 4066
 5712   0228         A5%(3) = 1: I5 = P1%(D): I6 = 16: CALL ADDPIT (D,I5,I6)
 573C   0228         IF B7%(P, B1!(P)) = 1 THEN I5 = P1%(P): I6 = 23: CALL PITO
                FF (P,I5,I6): I5 = P1%(P): I6 = 41: CALL INCPITOFF (P,I5,I6): G
                OTO 4066
 57AD   0228         I5 = B3%(P, B1!(P)): I6 = 0: CALL BATOFF (P,I5,I6): I5 = B
                3%(P, B1!(P)): I6 = 19: CALL INCBATOFF (P,I5,I6)
 5821   0228    
 5821   0228    4066 IF B0%(2, 0) = 0 THEN 4072
 582B   0228         I4 = (B%(P, B3%(P, B0%(2, 0)), 16) - 5) * 25: ZM = (B%(D, 
                B9%(D, W%), 15) - 5) * 25
 582B   0228         I4 = I4 - ZM
 582B   0228         I = INT(RND(1) * 1000) + 1
 582B   0228         IF W%=9 AND S2%=17 AND I<=800+I4 AND P2<>2 OR W%=9 AND S2%
                =18 AND I<=400+I4 AND P2<>2 OR W%=8 AND S2%=17 AND I<=700 + I4 
                AND P2 <> 2 OR W% = 8 AND S2% = 18 AND I <= 350 + I4 AND P2<>2 
                OR W%=7 AND S2%=17 AND I<=250+I4 AND P2<>2 THEN A5%(2)=1
                                                                      PAGE  30
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 5964   022A         IF P2 = 2 AND B%(P, B3%(P, B0%(2, 0)), 16) > 6 AND W% = 9 
                AND S2% = 17 AND I <= 400 + I4 OR P2 = 2 AND B%(P, B3%(P, B0%(2
                , 0)), 16) > 6 AND W% = 8 AND S2% = 17 AND I <= 400 + I4 THEN A
                5%(2) = 1
 59F4   022A         IF A5%(2) <> 1 AND S2% = 18 AND W% = 9 AND P2 <> 2 AND S4%
                 < 6 AND I > 800 THEN I8 = 3: LN% = 3308: CALL TRYFOREXTRABASE 
                (LN%,S2%,P2,Z2%,D,W%,SAH%,SB%,I8,I9):GOTO 4072
 5A6D   022A         IF A5%(2) <> 1 AND S2% = 18 AND W% = 8 AND P2 <> 2 AND S4%
                 < 6 AND I > 840 THEN I8 = 3: LN% = 3308: CALL TRYFOREXTRABASE 
                (LN%,S2%,P2,Z2%,D,W%,SAH%,SB%,I8,I9):GOTO 4072
 5AE6   022A         IF A5%(2) <> 1 AND W% = 7 AND P2 <> 2 AND S4% < 6 AND I > 
                880 THEN I8 = 3: LN% = 3308: CALL TRYFOREXTRABASE (LN%,S2%,P2,Z
                2%,D,W%,SAH%,SB%,I8,I9)
 5B52   022A    4072 IF B0%(1, 0) = 0 THEN 4074
 5B5C   022A         I = INT(RND(1) * 1000) + 1: A5%(1) = 0
 5B5C   022A         I3 = (B%(P, B3%(P, B0%(1, 0)), 16) - 5) * 25
 5B5C   022A         I4 = (B%(D, B9%(D, W%), 15) - 5) * 25: J5 = I3 - I4
 5B5C   022A         IF S2% = 17 AND P2 <> 2 AND S4% = 1 AND I <= 100 + J5 THEN
                 I8 = 2: LN% = 3308: CALL TRYFOREXTRABASE (LN%,S2%,P2,Z2%,D,W%,
                SAH%,SB%,I8,I9)
 5C55   022C    4074 CALL ADVANCEMENT (P,D,S2%,F%,I3): GOTO 3900
 5C6E   022C    4095 I$=INKEY$:IF I$="" THEN 4095
 5C8D   022C         RETURN
 5C8D   022C    4100 REM:*** BUNT ROUTINE ***
 5C8E   022C         CALL NEWLINES: FOR I = 0 TO 3: A5%(I) = 0: NEXT: SH = 2: S
                2% = 23
 5CAB   022C         IF (S4% = 3 OR S4% > 4) AND O%(0) < 2 THEN CALL SQUEEZECHO
                ICE (SH)
 5CDB   022E         CALL RANDNUM(RN)
 5CE4   022E         IF B7%(P, B1!(P)) = 1 THEN BR = P%(P, P1%(P), 32)
 5D26   022E         IF B7%(P, B1!(P)) <> 1 THEN BR = B%(P, B3%(P, B1!(P)), 30)
 5D76   022E         IF INFPOS% > 0 THEN BR = BR - 2
 5D82   022E         IF BR <= 1 THEN BR = 1
 5D8F   022E         FOR I = 1 TO 9: IF RN <= BT%(L%(1, 10), BR, I) THEN 4107
 5DB6   022E         NEXT
 5DC2   022E    4107 WW% = INT(RND(1) * 10)
 5DC2   022E         IF WW% <= 2 THEN W% = 5
 5DF4   0230         IF WW% > 2 AND WW% <= 4 THEN W% = 1
 5E08   0230         IF WW% > 4 AND WW% <= 7 THEN W% = 3
 5E1C   0230         IF WW% > 7 THEN W% = 2
 5E29   0230         CALL GETFIELDNAME (W%,D)
 5E36   0230         CALL RANDNUM(RN)
 5E3F   0230         IF RN <= 52 THEN 4175
 5E49   0230         ON I GOTO 4110, 4120, 4130, 4140, 4150, 4160, 4170, 4180, 
                4175
 5E65   0230    4110 REM:PU
 5E65   0230         CALL PBP (Q$(0)+ " bunts it in the air...")
 5E8E   0234         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P): IF F% = 1 THEN 3900
 5EB9   0234         CALL PBP (Q$(4)+ " makes the catch")
 5EE2   0238         CALL ADDSTTS (P,D)
 5EEF   0238         O%(0) = O%(0) + 1: O%(1) = O%(1) + 1: CALL CREDITREGPO (W%
                ,D)
 5F04   0238         IF O%(0) = 3 OR SH = 2 THEN 3900
 5F18   0238    4111 IF W% <> 5 THEN CALL CREDITASSIST (W%,D): W% = 5: CALL CRE
                                                                      PAGE  31
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                DITREGPO (W%,D): Q$(5) = Q$(4): CALL GETFIELDNAME (W%,D): GOTO 
                4115
 5F5F   0238         CALL CREDITASSIST (W%,D): W% = 6: CALL CREDITREGPO (W%,D):
                 Q$(5) = Q$(4): CALL GETFIELDNAME (W%,D)
 5F99   0238    4115 CALL PBP (Q$(5)+" throws to "+Q$(4)+" at 3rd")
 5FD6   023C         A5%(3) = 10: CALL ADVANCEMENT (P,D,S2%,F%,I3)
 5FF5   023C         O%(0) = O%(0) + 1: O%(1) = O%(1) + 1: I5 = P1%(D): I6 = 0:
                 CALL ADDPIT (D,I5,I6)
 6021   023C         IF O%(0) < 3 AND SH = 1 THEN 5051
 6032   023C         IF O%(0) >= 3 AND SH = 1 THEN B1!(P) = B1!(P) - 1
 6059   023C         GOTO 3900
 6059   023C    4120 REM:DP
 605C   023C         IF S4% = 1 OR S4% = 4 OR S4% = 5 OR S4% = 7 THEN 4125
 6084   023C         CALL PBP (Q$(0)+" lays down the bunt...")
 60AD   0240         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P): IF F% = 1 THEN 3900
 60D8   0240         CALL PBP (Q$(4)+" makes a nice fielding play")
 6101   0244         CALL CREDITASSIST (W%,D): A5%(0) = 11
 610E   0244         IF SH = 1 AND (S4% = 3 OR S4% = 6) THEN A5%(3) = 11: FOR I
                 = 0 TO 2: A5%(I) = 1: NEXT
 614D   0244    4122 CALL ADDSTTS (P,D)
 615A   0244         O%(0) = O%(0) + 1: O%(1) = O%(1) + 1: CALL ADVANCEMENT (P,
                D,S2%,F%,I3): CALL CREDITPUTOUT (I3,FB2P%,AST%,D)
 6190   0244         GOTO 3900
 6190   0244    4125 CALL PBP (Q$(0)+" lays down a good bunt")
 61BC   0248         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P): IF F% = 1 THEN 3900
 61E7   0248         CALL PBP (Q$(4)+" fields it cleanly")
 6210   024C         IF SH = 1 AND (S4% = 5 OR S4% = 7) THEN 4127
 622B   024C         IF S4% = 7 AND O%(0) < 2 THEN 4128
 623C   024C         CALL PBP ("He throws to 2nd"):CALL CREDITASSIST (W%,D): A5
                %(1) = 11
 6268   0250         CALL ADDSTTS (P,D)
 627B   0250         O%(0) = O%(0) + 1: O%(1) = O%(1) + 1: CALL ADVANCEMENT (P,
                D,S2%,F%,I3): CALL CREDITPUTOUT (I3,FB2P%,AST%,D)
 62B1   0250         IF O%(0) >= 3 THEN 3900
 62BB   0250         A5%(0) = 11: CALL CREDITASSIST (W%,D): A5%(2) = 1
 62CE   0250         CALL PBP ("over to first..."): CALL ADVANCEMENT (P,D,S2%,F
                %,I3): CALL PBP ("DOUBLE PLAY!!")
 632B   0258         CALL CREDITPUTOUT (I3,FB2P%,AST%,D): O%(0) = O%(0) + 1: O%
                (1) = O%(1) + 1: I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6)
 636C   0258         GOTO 3900
 636C   0258    4127 IF W% = 2 THEN CALL PBP ("and catches "+Q$(3)+" heading ho
                me!"): CALL CREDITREGPO (W%,D)
 63B9   025C         IF W% <> 2 THEN CALL PBP ("and throws home to nail "+Q$(3)
                +"!"): CALL CREDITASSIST (W%,D): W% = 2: CALL CREDITREGPO (W%,D
                )
 6416   0260         A5%(3) = 11: FOR I = 0 TO 2: A5%(0) = 1: NEXT: GOTO 4122
 6431   0260    4128 A5%(3) = 11
 6434   0260         IF W% = 2 THEN CALL PBP ("He steps on home for one..."): C
                ALL CREDITREGPO (W%,D): CALL CREDITASSIST (W%,D)
 647D   0264         IF W% <> 2 THEN CALL PBP ("He throws home for the force"):
                 CALL CREDITASSIST (W%,D): W% = 2: CALL CREDITREGPO (W%,D): CAL
                L CREDITASSIST (W%,D)
 64D3   0268         CALL ADVANCEMENT (P,D,S2%,F%,I3)
 64EC   0268         CALL PBP ("Back to first..."): A5%(0) = 11:CALL ADVANCEMEN
                                                                      PAGE  32
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                T (P,D,S2%,F%,I3): CALL CREDITPUTOUT (I3,FB2P%,AST%,D): CALL PB
                P ("DOUBLE PLAY!!")
 655E   0270         O%(0) = O%(0) + 2: O%(1) = O%(1) + 2
 655E   0270         CALL ADDSTTS (P,D)
 6575   0270         I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6)
 6599   0270         IF O%(0) >= 3 THEN 3900
 65A3   0270         A5%(2) = 1: A5%(1) = 1: CALL ADVANCEMENT (P,D,S2%,F%,I3): 
                GOTO 3900
 65C8   0270    4130 REM:LDRNRCTDN
 65CB   0270         IF S4% = 7 OR S4% = 6 OR S4% = 5 OR S4% = 3 THEN A5%(3) = 
                11: FOR I = 0 TO 2: A5%(I) = 1: NEXT
 6609   0270         IF S4% = 2 OR S4% = 4 THEN A5%(2) = 11: A5%(0) = 1: A5%(1)
                 = 1
 6629   0270         IF S4% = 1 THEN A5%(1) = 11: A5%(0) = 1
 663C   0270         IF S4% = 0 THEN A5%(0) = 11
 6649   0270         IF PLB = 0 THEN CALL PBP (Q$(0)+" bunts it hard!")
 667C   0276         IF PLB = 0 THEN CALL PBP (Q$(4)+" makes an easy play")
 66AF   027A         PLB = 0: O%(0) = O%(0) + 1: O%(1) = O%(1) + 1
 66AF   027A         CALL ADDSTTS (P,D)
 66CA   027A         CALL CREDITASSIST (W%,D): CALL ADVANCEMENT (P,D,S2%,F%,I3)
                : CALL CREDITPUTOUT (I3,FB2P%,AST%,D): GOTO 3900
 6705   027A    4140 REM:SHGOOD
 6708   027A         CALL PBP (Q$(0)+" lays down a good bunt...")
 6731   027E         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P): IF F% = 1 THEN 3900
 675C   027E         CALL PBP (Q$(4)+" makes a nice play")
 6785   0282         IF S4% = 0 THEN
 6785   0282            S2% = -12
 6785   0282            CALL PBP (Q$(0)+" beats out an infield hit!")
 67BE   0286            GOTO 3065
 67BE   0286         end if
 67C1   0286    4141 I5 = P1%(D): I6 = 15: CALL ADDPIT (D,I5,I6)
 67E5   0286         IF B7%(P, B1!(P)) = 1 THEN I5 = P1%(P): I6 = 40: CALL INCP
                ITOFF (P,I5,I6)
 682F   0286         IF B7%(P, B1!(P)) <> 1 THEN I5 = B3%(P, B1!(P)): I6 = 18: 
                CALL INCBATOFF (P,I5,I6)
 6887   0286         I = INT(RND(1) * 100) + 1
 6887   0286         IF S4% = 5 AND SH = 2 AND I > 98 OR I > 97 THEN
 6887   0286            S2% = -12
 6887   0286            CALL PBP (Q$(0)+" beats it out!")
 68FF   028A            GOTO 3065
 68FF   028A         END IF
 6902   028A         A5%(0) = 11
 6902   028A         CALL PBP ("The only play is to first")
 6927   028E         I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6)
 694B   028E         O%(0) = O%(0) + 1: O%(1) = O%(1) + 1
 694B   028E         CALL CREDITASSIST (W%,D): CALL ADVANCEMENT (P,D,S2%,F%,I3)
                : CALL CREDITPUTOUT (I3,FB2P%,AST%,D)
 698E   028E         IF O%(0) >= 3 THEN 3900
 6998   028E         FOR I = 1 TO 3: A5%(I) = 1: NEXT: CALL ADVANCEMENT (P,D,S2
                %,F%,I3)
 69CA   028E         GOTO 3900
 69CA   028E    4150 REM:C@3
 69CD   028E         IF SH = 1 THEN 4160
 69D7   028E         CALL RANDNUM(RN)
                                                                      PAGE  33
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 69E0   028E         IF B7%(P, B1!(P)) = 1 THEN RR = 2
 6A09   0290         IF B7%(P, B1!(P)) <> 1 THEN RR = B%(P, B3%(P, B1!(P)), 16)
 6A59   0290         IF INFPOS% > 0 THEN RR = RR - 2
 6A65   0290         IF RR <= 2 THEN RR = 2
 6A72   0290         FOR I = 0 TO 2
 6A78   0290         IF RN <= CF%(RR, I) THEN 4155
 6A92   0290         NEXT
 6A9E   0290    4155 ON I + 1 GOTO 4156, 4157, 4158
 6AAF   0290    4156 IF S4% > 0 THEN 4157
 6AB9   0290         CALL PBP (Q$(0)+" drops it right down the line")
 6AE2   0294         CALL PBP (Q$(4)+" lets it roll...")
 6B0B   0298         CALL PBP (Q$(0)+" is trying for 2nd!!")
 6B34   029C         CALL PBP (Q$(4)+" fields and throws too late!!")
 6B5D   02A0         CALL PBP ("You won't see that play very often")
 6B7C   02A4         A5%(0) = 2: I5 = P1%(D): I6 = 1: CALL ADDPIT (D,I5,I6)
 6BA6   02A4         IF B7%(P, B1!(P)) <> 1 THEN I5 = B3%(P, B1!(P)): I6 = 1: C
                ALL INCBATOFF (P,I5,I6): I6 = 4: CALL INCBATOFF (P,I5,I6): I6 =
                 0: CALL INCBATOFF (P,I5,I6)
 6C2C   02A4         IF B7%(P, B1!(P)) = 1 THEN I5 = P1%(P): I6 = 23: CALL INCP
                ITOFF (P,I5,I6): I6 = 24: CALL INCPITOFF (P,I5,I6): I6 = 27: CA
                LL INCPITOFF (P,I5,I6)
 6CA4   02A4         CALL ADVANCEMENT (P,D,S2%,F%,I3): CALL SCOREBOARD: GOTO 39
                00
 6CC2   02A4    4157 S2% = 12
 6CC5   02A4         CALL PBP (Q$(0)+" lays down a great bunt...")
 6CF4   02A8         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P): IF F% = 1 THEN 3900
 6D1F   02A8         CALL PBP (Q$(4)+" fields... but too late!")
 6D48   02AC         s2% = -12
 6D48   02AC         GOTO 3065
 6D48   02AC    4158 GOTO 4140
 6D51   02AC    4160 REM:PLYLDBS
 6D54   02AC         IF B7%(P, B1!(P)) = 1 THEN RR = 2
 6D7D   02AC         IF B7%(P, B1!(P)) <> 1 THEN RR = B%(P, B3%(P, B1!(P)), 16)
 6DCD   02AC         IF INFPOS% > 0 THEN RR = RR - 2
 6DD9   02AC         IF RR <= 2 THEN RR = 2
 6DE6   02AC         IF S4% = 0 THEN 4150
 6DF0   02AC         IF S4% = 1 THEN I3 = 1: J3$ = "2nd"
 6E0A   02B0         IF S4% = 2 OR S4% = 4 THEN I3 = 2: J3$ = "3rd"
 6E2B   02B0         IF S4% = 3 OR S4% > 4 THEN I3 = 3: J3$ = "home"
 6E4C   02B0         CALL PBP (Q$(0)+" gets the bunt down...")
 6E75   02B4         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P): IF F% = 1 THEN 3900
 6EA0   02B4         CALL PBP (Q$(4)+" fields it quickly...")
 6EC9   02B8         CALL PBP ("Looks like a close play at "+J3$+"!!")
 6EFC   02BC         CALL PBP ("1- Throw to "+J3$+" 2- Throw to 1st")
 6F2F   02C0         IF U6 = 2 OR U6 = 1 AND P <> U9 THEN I$ = "1": GOTO 4162
 6F56   02C0    4161 I$ = INKEY$: IF I$ = "" THEN 4161
 6F72   02C0         I5 = VAL(I$): IF I5 < 1 OR I5 > 2 THEN 4161
 6F95   02C0    4162 IF I5 = 2 THEN 4141
 6F9F   02C0         CALL RANDNUM(RN)
 6FA8   02C0         FOR I = 0 TO 1
 6FAE   02C0         IF RN <= LB%(RR, I) THEN 4163
 6FC8   02C0         NEXT
 6FD4   02C0    4163 IF I = 0 THEN PLB = 1: GOTO 4130
 6FE4   02C0         CALL PBP (Q$(4)+" throws to "+J3$+"... SAFE!!")
                                                                      PAGE  34
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 7021   02C4         IF B7%(P, B1!(P)) <> 1 THEN I5 = B3%(P, B1!(P)): I6 = 0: C
                ALL INCBATOFF (P,I5,I6)
 7079   02C4         IF B7%(P, B1!(P)) = 1 THEN I5 = P1%(P): I6 = 23: CALL INCP
                ITOFF (P,I5,I6)
 70C3   02C4         FOR I = 0 TO 3: A5%(I) = 1: NEXT: CALL ADVANCEMENT (P,D,S2
                %,F%,I3): GOTO 3900
 70F4   02C4    4170 REM:FLKSO
 70F7   02C4         CALL RANDNUM(RN)
 7100   02C4         IF P%(D, P1%(D), 6) = 0 THEN BR=0:GOTO 4173
 7127   02C4         BR = P%(D, P1%(D), 9) / P%(D, P1%(D), 6)
 7127   02C4    4173 IF BR <= 4 THEN PR = 5
 7164   02C6         IF BR > 4 AND BR <= 5.4 THEN PR = 4
 7184   02C6         IF BR > 5.4 AND BR <= 6.9 THEN PR = 3
 71B0   02C6         IF BR > 6.9 AND BR <= 8.4 THEN PR = 2
 71DC   02C6         IF BR > 8.4 AND BR <= 11.9 THEN PR = 1
 7208   02C6         IF BR > 11.9 THEN PR = 0
 7221   02C6         FOR I = 0 TO 2
 7226   02C6         IF RN <= SO%(PR, I) THEN 4171
 7240   02C6         NEXT
 724C   02C6    4171 ON I + 1 GOTO 4172, 4175, 4140
 725D   02C6    4172 GOTO 3601
 725D   02C6    4175 U% = U% + 1
 7260   02C6         REM:IF U% = 3 THEN 3601
 7260   02C6         GPRINT0VE 29,64,STR$(U%),15
 7295   02CA         CALL NEWLINES
 729A   02CA         CALL RANDNUM(RN)
 72A3   02CA         F$=Q$(0)+ " "
 72A3   02CA         IF RN <= 13 OR SH = 1 AND RN <= 42 THEN F$=F$+"misses the 
                pitch"
 72D7   02CA         IF RN > 13 AND RN <= 42 AND SH <> 1 THEN F$=F$+"takes a ca
                lled strike"
 72FA   02CA         IF RN > 42 THEN F$=F$+"bunts it foul"
 730F   02CA         CALL PBP (F$)
 7318   02CA         IF U% = 3 THEN 3601
 7322   02CA         IF SH = 1 AND RN <= 42 THEN W% = 2: CALL GETFIELDNAME (W%,
                D): GOTO 4111
 734C   02CA         F$="He has"+STR$(U%)+" strike"
 734C   02CA         if u%>1 then F$="He has"+STR$(U%)+" strikes": CALL PBP (F$
                )
 73AD   02CA         IF S4% = 4 OR S4% = 2 THEN INFPOS% = 0
 73C1   02CA         CALL GMove4VE (20,48,44,128,VARSEG(VB%(0)),-1)
 73E8   02CA         CALL ClearVE
 73ED   02CA         GOTO 5080
 73ED   02CA    4180 REM:TFPLY
 73F0   02CA         CALL PBP (Q$(0)+" lays down the bunt...")
 7419   02CE         CALL PBP (Q$(4)+" has a tough play")
 7442   02D2         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P): IF F% = 1 THEN 3900
 746D   02D2         IF W% = 1 THEN RR = 3
 747A   02D2         IF W% <> 1 THEN RR = B%(D, B9%(D, W%), 17)
 74A6   02D2         IF INFPOS% > 0 AND S4% <> 0 THEN RR = RR + 1 + L%(1, 10)
 74BF   02D2         IF INFPOS% > 0 AND S4% = 0 THEN RR = RR + L%(1, 10)
 74D4   02D2         IF INFPOS% = 0 AND S4% = 0 THEN RR = RR - 1
 74E6   02D2         IF RR > 11 THEN RR = 11
 74F3   02D2         IF RR < 0 THEN RR = 0
                                                                      PAGE  35
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 7500   02D2         CALL RANDNUM(RN)
 7509   02D2         FOR I = 0 TO 2
 750E   02D2         IF RN <= TP%(RR, I) THEN 4182
 7528   02D2         NEXT
 7534   02D2    4182 ON I + 1 GOTO 4183, 4184, 4185
 7545   02D2    4183 S2% = 12
 7545   02D2         CALL PBP ("but too late...base hit!")
 756A   02D6         GOTO 3065
 756A   02D6    4184 PLB = 1: GOTO 4130
 756D   02D6    4185 GOTO 4141
 7576   02D6    
 7576   02D6    4795 IF P2 <> 2 THEN
 7579   02D6            CALL NEWLINES
 7588   02D6            SB% = 1
 7588   02D6            CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 75AF   02D6            SB% = 0
 75AF   02D6            IF F% = 1 THEN
 75AF   02D6               B1!(P) = B1!(P) - 1
 75AF   02D6               CALL WHOSON1ST (S4%)
 75E1   02D6               GOTO 3900
 75E1   02D6            END IF
 75E4   02D6         END IF
 75E4   02D6         GOTO 4804
 75E4   02D6    
 75E4   02D6    4800 SH% = 0: S2% = 16: W% = 1: Q$(4) = P$(D, P1%(D))
 75E7   02D6         IF S4% = 0 THEN 5051
 7625   02D6         IF S4% = 1 OR S4% = 5 THEN TGTBASE% = 2: GOTO 4795
 763C   02D6         IF S4% = 2 OR S4% = 4 THEN TGTBASE% = 3: GOTO 4795
 7653   02D6         IF S4% = 3 OR S4% >= 6 THEN TGTBASE% = 4
 7667   02D6    4804 I2 = B3%(P, B0%(TGTBASE% - 1, 0))
 7667   02D6         FOR I3 = 1 TO 2
 7688   02D8         A5%(I3) = 1
 7688   02D8         A5%(3) = 0
 7688   02D8         NEXT I3
 76A1   02D8         CALL STEALCHANCE (AA,I2,TGTBASE%,CHANCE%)
 76B6   02DC         IF B7%(P, B0%(TGTBASE% - 1, 0)) = 1 THEN CHANCE% = 0
 76D6   02DC         IF TGTBASE% = 4 THEN CHANCE% = CHANCE% * .05: REM *** REDU
                CTION FOR STEALING HOME ***
 76EE   02DC    4809 IF B%(P, I2, 14)>0 THEN Q0 = INT((B%(P, I2, 13) / (B%(P, I
                2, 13) + B%(P, I2, 14))) * 1000): GOTO 4813
 7741   02DE         IF B%(P, I2, 13) > 31 THEN Q0 = 700 + ((B%(P, I2, 13) - 30
                ) * 2): GOTO 4813
 776C   02DE         IF B%(P, I2, 13) > 10 THEN Q0 = 600 + ((B%(P, I2, 13) - 10
                ) * 10): GOTO 4813
 779A   02DE         IF B%(P, I2, 13) > 0 THEN Q0 = 400 + ((B%(P, I2, 13) * 20)
                )
 77BE   02DE         Q0 = 100
 77BE   02DE    4813 IF B7%(P, B0%(TGTBASE% - 1, 0)) = 1 THEN Q0 = 100
 77E4   02DE         CALL STEAL3RD (TGTBASE%,AA,Q0,H0%,D): REM*** SUCCESS OF 3B
                 STEAL ***
 77FD   02DE         IF P%(D, P1%(D), 0) = 1 AND TGTBASE% = 2 THEN CHANCE% = CH
                ANCE% + 25: Q0 = Q0 + 10
 7827   02DE         IF P%(D, P1%(D), 0) = -1 AND TGTBASE% = 2 THEN CHANCE% = C
                HANCE% - 50: Q0 = Q0 - 30
                                                                      PAGE  36
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 7851   02DE         IF P2 = 2 THEN 4838
 785B   02DE         B0%(TGTBASE% - 1, 2) = B0%(TGTBASE% - 1, 2) + 1
 785B   02DE         I4 = INT(RND(1) * 100) + 1
 785B   02DE         IF I4 > B0%(TGTBASE% - 1, 2) THEN 4825
 78A0   02DE    
 78A0   02DE         S2% = 22: W% = 1: Q$(4) = P$(D, P1%(D))
 78A0   02DE    4820 CALL NEWLINES
 78D3   02DE         CALL PBP (Q$(TGTBASE% - 1)+" caught off base in a rundown!
                ")
 7905   02E2         A5%(1) = 0: A5%(2) = 0: A5%(3) = 0: A5%(TGTBASE% - 1) = 11
 7905   02E2         O%(0) = O%(0) + 1: O%(1) = O%(1) + 1: CALL PUTOUT (TGTBASE
                %,D,P)
 793D   02E2         CALL ADVANCEMENT (P,D,S2%,F%,I3): CALL CREDITPUTOUT (I3,FB
                2P%,AST%,D)
 796B   02E2         I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6)
 798F   02E2         IF O%(0) >= 3 THEN B1!(P) = B1!(P) - 1: GOTO 3900
 79B2   02E2         INFPOS% = 0
 79B2   02E2         GOTO 5051
 79B2   02E2    
 79B2   02E2    4825 REM:RUNNER HAS A CHANCE TO STEAL
 79BB   02E2         B0%(TGTBASE% - 1, 2) = B0%(TGTBASE% - 1, 2) + 17
 79BB   02E2         I9 = INT(RND(1) * 1000) + 1
 79BB   02E2    
 79BB   02E2         IF I9 > CHANCE% * 1.388 AND D5 <> 3 THEN
 79BB   02E2            CALL NEWLINES
 7A1F   02E4            CALL NOJUMP (D)
 7A28   02E4            CALL GMove4VE (20,48,44,128,VARSEG(VB%(0)),-1)
 7A4F   02E4            CALL ClearVE
 7A54   02E4            GOTO 5060
 7A54   02E4         END IF
 7A57   02E4    
 7A57   02E4    4826 CALL NEWLINES
 7A5C   02E4         TGBASE%=B3%(P, B0%(TGTBASE% - 1, 0))
 7A5C   02E4         Y% = INT(RND(1) * 20) + 3090
 7A5C   02E4         CALL GETRPBP(Y%, Y$, D)
 7AB1   02E6         CALL STRIPRPBP (Y$,Y%,D)
 7AC2   02E6         CALL PBP (Y$)
 7ACB   02E6         Y% = INT(RND(1) * 13) + 3110
 7ACB   02E6         CALL GETRPBP(Y%, Y$, D)
 7B06   02E6         CALL STRIPRPBP (Y$,Y%,D)
 7B17   02E6         CALL PBP (Y$)
 7B20   02E6         CALL PITCHOUT (S4%,TGTBASE%,Q0)
 7B31   02E6         IF S4% <> 5 THEN 4888: REM*** DOUBLE STEAL ***1st&3rd
 7B3B   02E6         IF SH% = 1 THEN I9 = INT(RND(1) * 1000) + 1: GOTO 4828
 7B6F   02E6         IF U6 = 2 OR U6 = 1 AND P <> U9 THEN I$ = "Y": GOTO 4887
 7B96   02E6         CALL PBP ("Throw to 2B (YN) ")
 7BB5   02EA    4886 I$ = INKEY$: IF I$ = "" THEN 4886
 7BD1   02EA    4887 IF UCASE$(I$) <> "Y" THEN PJ = 7: GOTO 4829
 7BEF   02EC    4888 W% = 2: Q$(4) = B$(D, B9%(D, 2))
 7BEF   02EC         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 7C3C   02EC         IF F% = 1 THEN I5 = TGBASE%: I6 = 9: CALL INCBATOFF (P,I5,
                I6): CALL PITSWAP(TGTBASE%): B1!(P) = B1!(P) - 1: GOTO 3900
 7C88   02EC    4827 CALL WHICHRUNNER (TGTBASE%,S4%,D5)
 7C99   02EC         I9 = INT(RND(1) * 1000) + 1
                                                                      PAGE  37
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 7C99   02EC         Q0 = Q0 - ((B%(D, B9%(D, 2), 15) - 5) * 25)
 7C99   02EC    4828 RN = INT(RND(1) * 11) + 1
 7CEF   02EC         IF TGTBASE% = 4 THEN 4837
 7D23   02EC         IF RN = 1 THEN f$ = B$(D, B9%(D, 2))+ " rifles it to "+ h$
                (TGTBASE%)
 7D6C   02EC         IF RN = 2 THEN f$ = B$(D, B9%(D, 2))+ " fires it to "+ h$(
                TGTBASE%)
 7DB5   02EC         IF RN = 3 THEN f$ = B$(D, B9%(D, 2))+ " unloads it"
 7DE6   02EC         IF RN = 4 THEN f$ = B$(D, B9%(D, 2))+ " is up and firing"
 7E17   02EC         IF RN = 5 THEN f$ = B$(D, B9%(D, 2))+ " comes up firing"
 7E48   02EC         IF RN = 6 THEN f$ = B$(D, B9%(D, 2))+ " lets it fly"
 7E79   02EC         IF RN = 7 THEN f$ = B$(D, B9%(D, 2))+ " throws down"
 7EAA   02EC         IF RN = 8 THEN f$ = B$(D, B9%(D, 2))+ " gets it off"
 7EDB   02EC         IF RN = 9 THEN f$ = B$(D, B9%(D, 2))+ " fires a missile"
 7F0C   02EC         IF RN =10 THEN f$ = B$(D, B9%(D, 2))+ " throws quickly"
 7F3D   02EC         IF RN =11 THEN f$ = B$(D, B9%(D, 2))+ " throws"
 7F6E   02EC         CALL PBP (F$)
 7F77   02EC    4837 IF B0%(TGTBASE% - 1, 2) = 18 AND I9 > Q0 OR B0%(TGTBASE% -
                 1, 2) > 18 AND I9 > Q0 - 200 THEN 4830
 7FB6   02EC    4829 RN = INT(RND(1) * 100) + 1
 7FB6   02EC         IF RN <= 20 THEN F$="He beats the throw!"
 7FF4   02EC         IF RN > 20 AND RN <= 40 THEN F$="He's in there!"
 800F   02EC         IF RN > 40 AND RN <= 50 THEN F$="Throw is off-line..."
 802A   02EC         IF RN > 50 AND RN <= 60 THEN F$="Throw is high..."
 8045   02EC         IF RN > 60 AND RN <= 80 THEN F$="He slides under the tag!"
 8060   02EC         IF RN > 80 AND TGTBASE% <> 4 THEN F$=U$(TGTBASE% + 1)+" wi
                th the call"
 8087   02EC         IF RN > 80 AND TGTBASE% = 4 THEN F$=U$(1)+" with the call"
 80A6   02EC         CALL PBP (F$): CALL PBP ("safe @ "+h$(TGTBASE%)+ "!")
 80EA   02F0         B0%(TGTBASE% - 1, 2) = 0
 80EA   02F0         INFPOS% = 0
 80EA   02F0         CALL PITSWAP(TGTBASE%): CALL ADVANCEMENT (P,D,S2%,F%,I3)
 8123   02F0         I5 = B9%(D, 2): I6 = 20: CALL INCBATDF (D,I5,I6)
 814C   02F0         IF SH% <> 1 THEN 4892
 8156   02F0         SH% = 0: GOTO 5051
 8156   02F0    4830 RN = INT(RND(1) * 100) + 1
 815F   02F0         IF RN <= 20 THEN F$=B$(D, B9%(D, 2))+" nails "+Q$(TGTBASE%
                 - 1)
 81D3   02F0         IF RN > 20 AND RN <= 40 THEN F$=Q$(TGTBASE% - 1)+" is pegg
                ed at "+h$(TGTBASE%)
 8213   02F0         IF RN > 40 AND RN <= 60 THEN F$="Great throw by "+B$(D, B9
                %(D, 2))+ "!!"
 825B   02F0         IF RN > 60 AND RN <= 80 THEN F$=Q$(TGTBASE% - 1)+" slides 
                into the tag"
 8283   02F0         IF RN > 80 AND TGTBASE% <> 4 THEN F$=U$(TGTBASE% + 1)+" wi
                th the call"
 82AA   02F0         IF RN > 80 AND TGTBASE% = 4 THEN F$=U$(1)+ " with the call
                "
 82C9   02F0         CALL PBP (F$)
 82D2   02F0         A5%(TGTBASE% - 1) = 11: INFPOS% = 0
 82D2   02F0         I5 = B3%(P, B0%(TGTBASE% - 1, 0)): I6 = 10: CALL INCBATOFF
                 (P,I5,I6)
 830F   02F0         I5 = P1%(D): I6 = 0: CALL ADDPIT (D,I5,I6)
 8333   02F0         O%(0) = O%(0) + 1: O%(1) = O%(1) + 1: W% = 2
                                                                      PAGE  38
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 8333   02F0         CALL CREDITASSIST (W%,D): CALL ADVANCEMENT (P,D,S2%,F%,I3)
 8367   02F0         CALL CREDITPUTOUT (I3,FB2P%,AST%,D)
 837C   02F0         I5 = B9%(D, 2): I6 = 21: CALL INCBATDF (D,I5,I6)
 83A5   02F0         IF O%(0) >= 3 THEN B1!(P) = B1!(P) - 1: CALL STRIKEOUTCS (
                SO): GOTO 3900
 83D4   02F0    4831 IF O%(0) >= 3 OR P2 = 2 AND U% = 3 THEN 3900
 83EF   02F0         IF SH% = 1 THEN SH% = 0: GOTO 5051
 83FF   02F0         IF AA < 20 OR S4% <> 5 OR B7%(P, B0%(3, 0)) = 1 THEN 5051
 8429   02F0         CALL NEWLINES
 842E   02F0         IF U6 = 2 OR U6 = 1 AND P = U9 THEN I$ = "N": GOTO 4835
 8455   02F0         CALL PBP ("TRY TO STEAL HOME (YN)")
 8474   02F4    4834 I$ = INKEY$: IF I$ = "" THEN 4834
 8490   02F4    4835 IF UCASE$(I$) <> "Y" THEN 5051
 84A8   02F4         SH% = 1: GOTO 4890
 84A8   02F4    4838 CHANCE% = 100: Q0 = Q0 - 200: W% = 2: Q$(4) = B$(D, B9%(D,
                 2))
 84B1   02F4         TGBASE%=B3%(P, B0%(TGTBASE% - 1, 0))
 84B1   02F4         B0%(TGTBASE% - 1, 2) = 18
 84B1   02F4         CALL FLDERR (F%,W%,D,I3,SB%,S2%,P)
 852D   02F4         IF F% = 1 THEN I5 = TGBASE%: I6 = 9: CALL INCBATOFF (P,I5,
                I6): B1!(P) = B1!(P) - 1: CALL STRIKEOUTCS (SO): GOTO 3900
 8579   02F4         GOTO 4827
 8579   02F4    
 8579   02F4    
 8579   02F4    
 8579   02F4    
 8579   02F4    4890 TGTBASE% = 4: A5%(1) = 0: A5%(2) = 0: A5%(3) = 1
 857C   02F4         I2 = B3%(P, B0%(TGTBASE% - 1, 0)): CHANCE% = 100
 857C   02F4         Q0 = 700
 857C   02F4         GOTO 4826: REM *** STEAL HOME ***
 857C   02F4    4892 IF S4% <> 5 OR S4% = 5 AND PJ = 7 THEN 4831: REM*** PICK O
                FF IF NOT STEALING HOME ***
 85D8   02F4         PJ = 0: TGTBASE% = 4: SS% = INT(RND(1) * 20) + 1: IF SS% =
                 6 THEN 4820
 8618   02F6         GOTO 4831
 8618   02F6    
 8618   02F6    
 8618   02F6    4900 call SCREEN0(0)
 862A   02F8         P9 = D: B1!(P) = B1!(P) + 1: U% = 0: IF B1!(P) = 10 THEN B
                1!(P) = 1
 866E   02F8         CLS : COLOR 15: PRINT "DOES "; B$(D, B3%(D, B9%(D, 0))); "
                 STAY IN THE GAME (YN)"
 866E   02F8    4902 I$ = INKEY$: IF I$ = "" THEN 4902
 86E0   02F8         IF UCASE$(I$) = "N" THEN I5 = 77: GOTO 5504
 86FE   02F8         I5 = 66
 86FE   02F8         LOCATE 5, 1
 86FE   02F8         FOR I = 1 TO 9: COLOR 3, 0
 8720   02F8         IF BP(P9) = I THEN COLOR 9
 8759   02F8         LOCATE I + 4, 5: PRINT USING "# "; I;
 8759   02F8         IF B7%(P9, I) = 1 AND I5 = 66 THEN PRINT B$(P9, B3%(P9, I)
                );
 87BC   02F8         IF B7%(P9, I) = 1 AND I5 <> 66 THEN PRINT P$(P9, B3%(P9, I
                ));
 87EE   02F8         IF B7%(P9, I) <> 1 THEN PRINT B$(P9, B3%(P9, I));
                                                                      PAGE  39
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 8819   02F8         PRINT " "; C$(B7%(P9, I));
 8819   02F8         COLOR 3
 8819   02F8         NEXT I
 8860   02F8         I5 = 0
 8860   02F8         COLOR 15: LOCATE 3, 1: PRINT "WHAT LINEUP SLOT WILL THE PI
                TCHER BAT IN (1-9)"
 8860   02F8    4905 I$ = INKEY$: IF I$ = "" THEN 4905
 88B2   02F8         I2 = VAL(I$)
 88B2   02F8         IF I2 < 1 OR I2 > 9 THEN 4905
 88D5   02F8         IF B7%(D, I2) = 10 THEN B7%(D, I2) = 1
 88EE   02F8         INFPOS% = 0
 88EE   02F8         B7%(D, B9%(D, 0)) = B7%(D, I2): B9%(D, B7%(D, B9%(D, 0))) 
                = B3%(D, B9%(D, 0)): B7%(D, I2) = 1
 88EE   02F8         I7% = D: I8% = B9%(D, 0): I9% = B3%(D, B9%(D, 0))
 88EE   02F8         CALL REPLACEMENTS (I7%,I8%,I9%)
 8966   02FA         I5 = 66: GOTO 5504
 8966   02FA    4950 I1 = IJ0%
 896F   02FA         I2 = B%(D,IJ0%,21)-40
 896F   02FA    4952 b%(D, I1, 21) = 1
 898D   02FC         B3%(D, I2) = I1
 898D   02FC         B9%(D, B7%(D, I2)) = I1
 898D   02FC    
 898D   02FC         D0%(D) = D0%(D) + 1: X0%(D, 0, D0%(D)) = B3%(D, I2)
 898D   02FC         X0%(D, 1, D0%(D)) = B7%(D, I2): X0%(D, 2, D0%(D)) = (I2 * 
                10) + (D0%(D) - 9)
 898D   02FC         W5 = D: W6 = D: VV(D) = I2: VV1(D) = I2
 898D   02FC         FOR xx = 22 TO 25
 8A2C   02FC         IF B7%(D, I2) = b%(D, I1, xx) THEN b%(D, I1, 15) = b%(D, I
                1, 33 + (xx - 22) * 2): b%(D, I1, 17) = b%(D, I1, 34 + (xx - 22
                ) * 2): b%(D, I1, 19) = b%(D, I1, xx + 4): GOTO 4955
 8AD2   02FE         NEXT
 8AE1   02FE    4955 CALL HITTINGLINES(l%(), p%(), P1%(), B7%(), b%(), VV(), VV
                1(), B3%(), B4%(), K9!(), WF!)
 8B30   02FE         CALL FLDDISP(BC%, p, U%, D): CALL MAINSCREEN(D, p, BC%, U%
                , MO)
 8B5E   02FE         REM:CALL NEWLINES
 8B5E   02FE         REM:LOCATE 15, 1:COLOR 15,0
 8B5E   02FE         REM:PRINT M$(D); " is sending in a defensive sub"
 8B5E   02FE         REM:CALL DELAY: CALL DELAY
 8B5E   02FE         VV(D)=1:VV1(D)=9
 8B5E   02FE         RETURN
 8B5E   02FE    4956 FOR I2=1 TO 9
 8B78   02FE         IF B7%(D,I2)=MG%(D,576+IJ0%) THEN 4957
 8BA1   02FE         NEXT
 8BAD   02FE    4957 RETURN
 8BAD   02FE    4998 S8%(I,0)=S8%(I,0)+6:S8%(I,1)=6
 8BAE   02FE         RETURN
 8BAE   02FE    5000 F% = 0: PQ = 0
 8BC5   02FE         FOR I = 0 TO 1: O%(I) = 0
 8BD6   02FE         NEXT I
 8BE9   02FE         L0%(P) = L0%(P) + MO
 8BE9   02FE         MO = 0
 8BE9   02FE         H0% = 0
 8BE9   02FE         FOR I = 1 TO 3
                                                                      PAGE  40
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 8C08   02FE         FOR I1 = 0 TO 1
 8C0E   02FE         B0%(I, I1) = 0: B1%(I, I1) = 0
 8C0E   02FE         NEXT I1
 8C2F   02FE         B0%(I, 2) = 0
 8C2F   02FE         NEXT I
 8C4B   02FE         S4% = 0
 8C4B   02FE         IF P = 1 THEN INNING% = INNING% + 1: CZ%(1) = 0: CZ%(0) = 
                0
 8C68   02FE         P = 1 - P: D = 1 - P
 8C68   02FE         IF INNING% = 7 AND L%(1, 13) = 8 AND P = 1 AND VAL(LEFT$(A
                $(1), 2)) > 75 THEN CALL NEWLINES: CALL PBP ("ALL RIGHT..."): C
                ALL PBP ("LEMME HEAR YA..."):CALL PBP ("A ONE, A TWO...")
 8D21   030A    
 8D21   030A         GOTO 5004
 8D21   030A    
 8D21   030A         IF CGERA%>0 AND INNING%=8 AND P=0 AND S6%(1,0)>S6%(0,0) AN
                D P%(1,P1%(1),1)>0 AND P6%(1)=1 AND INT(P%(1,P1%(1),5)/P%(1,P1%
                (1),1)*100+.5)<=75 AND INT(RND(1)*100)+1<=INT(P%(1,P1%(1),16)/P
                %(1,P1%(1),1)*100+.5) THEN I=1:GOSUB 4998
 8D24   030A         IF CGERA%>0 AND INNING%=8 AND P=0 AND S6%(0,0)>S6%(1,0) AN
                D P%(0,P1%(0),1)>0 AND P6%(0)=1 AND INT(P%(0,P1%(0),5)/P%(0,P1%
                (0),1)*100+.5)<=75 AND INT(RND(1)*100)+1<=INT(P%(0,P1%(0),16)/P
                %(0,P1%(0),1)*100+.5) THEN I=0:GOSUB 4998
 8E0B   030A    
 8E0B   030A         IF P%(1,P1%(1),1)=0 OR P6%(1)<>1 THEN 5002
 8E2B   030A         CALL RANDNUM(RN)
 8E34   030A         IF CGERA%>0 AND INNING%=8 AND P=0 AND S6%(1,0)>=S6%(0,0) A
                ND INT(P%(1,P1%(1),5)/P%(1,P1%(1),1)*100+.5)>75 AND INT(P%(1,P1
                %(1),5)/P%(1,P1%(1),1)*100+.5)<=100 AND RN<=INT(P%(1,P1%(1),16)
                /P%(1,P1%(1),1)*100+.5) THEN I=1:GOSUB 4998
 8F0F   030A    5002 IF P%(0,P1%(0),1)=0 OR P6%(0)<>1 THEN 5003
 8F2F   030A         CALL RANDNUM(RN)
 8F38   030A         IF CGERA%>0 AND INNING%=8 AND P=0 AND S6%(0,0)>=S6%(1,0) A
                ND INT(P%(0,P1%(0),5)/P%(0,P1%(0),1)*100+.5)>75 AND INT(P%(0,P1
                %(0),5)/P%(0,P1%(0),1)*100+.5)<=100 AND RN<=INT(P%(0,P1%(0),16)
                /P%(0,P1%(0),1)*100+.5) THEN I=0:GOSUB 4998
 9013   030A    
 9013   030A    5003 IF CGERA%>0 AND INNING%=8 AND P=0 AND (S6%(1,0)>=S6%(0,0) 
                OR S6%(0,0)-S6%(1,0)<=2) AND P%(1, P1%(1), 1) > 0 AND P6%(1)=1 
                AND INT(P%(1, P1%(1), 16) / P%(1, P1%(1), 1) * 100 + .5)>100 TH
                EN I=1:GOSUB 4998
 90A3   030A         IF CGERA%>0 AND INNING%=8 AND P=0 AND (S6%(0,0)>=S6%(1,0) 
                OR S6%(1,0)-S6%(0,0)<=2) AND P%(0, P1%(0), 1) > 0 AND P6%(0)=1 
                AND INT(P%(0, P1%(0), 16) / P%(0, P1%(0), 1) * 100 + .5)>100 TH
                EN I=0:GOSUB 4998
 9133   030A    
 9133   030A    
 9133   030A    5004 IF INNING% > 9 AND D = 1 AND S6%(1, 0) <> S6%(0, 0) OR INN
                ING% = 28 OR INNING% >= 9 AND P = 1 AND S6%(P, 0) - S6%(D, 0) >
                 0 THEN 8500
 9180   030A         IF RD = 1 AND INNING% >= RE AND RE >= 6 AND (S6%(1, 0) > S
                6%(0, 0) AND P = 1 OR S6%(0, 0) > S6%(1, 0) AND P = 0) THEN cal
                l SCREEN0(0):PRINT "THIS GAME HAS BEEN CALLED ON ACCOUNT OF RAI
                N!!!":PRINT "ALL RECORDS ARE OFFICIAL!!":CALL GETAKEY:GOTO 8500
                                                                      PAGE  41
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 91ED   030C         IF RD = 1 AND P = 0 AND INNING% = 4 THEN CALL PBP ("THE RA
                IN IS FALLING A LITTLE MORE STEADILY"): CALL PBP ("THIS GAME MA
                Y NOT GO 9!"): CALL GETAKEY
 924E   0314         CALL FLDDISP (BC%,P,U%,D)
 9263   0314         FOR IJ0%=0 TO 22
 9268   0314         IF B%(D,IJ0%,21)>39 AND B%(D,IJ0%,21)<=49 THEN GOSUB 4950
 928C   0314         NEXT
 9298   0314         A1 = S6%(D, 0) - S6%(P, 0)
 9298   0314         IF MG%(D,560)<>999 OR INNING%<8 OR U6 = 0 OR U6 = 1 AND P 
                = U9 THEN 5025
 92E5   0316         FOR IJ0%=1 TO 4
 92EC   0316         IF MG%(D,560+IJ0%)=-1 OR B%(D,MG%(D,564+IJ0%),21)<>0 THEN 
                5010
 932C   0316         CALL RANDNUM (RN)
 9335   0316         IF B9%(D,MG%(D,576+IJ0%))=MG%(D,560+IJ0%) AND RN<=MG%(D,56
                8+IJ0%) AND A1>=MG%(D,572+IJ0%) THEN I1=MG%(D,564+IJ0%):GOSUB 4
                956:GOSUB 4952
 93BD   0316    5010 NEXT
 93CC   0316    5025 IF B9%(D, 1) = 99 AND U6 = 0 OR B9%(D, 1) = 99 AND U6 = 1 
                AND U9 = 1 - D THEN 4900
 940F   0316    5050 SH = 0: F% = 0: PQ = 0: SO = 0
 940F   0316         B1!(P) = B1!(P) + 1: INFPOS% = 0: U% = 0
 940F   0316         IF B1!(P) = 10 THEN B1!(P) = 1
 946B   0316    5051 CALL WHOSON1ST (S4%)
 9474   0316         CALL PLAYERNAME (P)
 947D   0316         CALL MAINSCREEN (D,P,BC%,U%,MO)
 9496   0316    
 9496   0316         P2 = 0
 9496   0316         D2 = 0
 9496   0316         IF INNING% >= 9 AND P = 1 AND S6%(P, 0) - S6%(D, 0) > 0 TH
                EN 8500
 94CB   0316    5052 CALL GMove4VE (20,48,44,128,VARSEG(VB%(0)),-1)
 94F2   0316         CALL ClearVE
 94F7   0316         I2 = INNING%: I = P
 94F7   0316         IF S%(P, INNING%) > 0 THEN CALL INNDISP (I2,I)
 9524   0316         FORMATTED$=FUSING$(STR$(S6%(I,0)),"##")
 9524   0316         GPRINT0VE I+29,53,FORMATTED$,15
 9598   0326         FORMATTED$=FUSING$(STR$(S6%(D,2)),"##")
 9598   0326         GPRINT0VE 1-I+29,59,FORMATTED$,15
 9614   0332         Z2% = B0%(2, 0): F% = 0: PQ = 0: GOTO 5080
 9614   0332    5054 D2 = VAL(I$): IF D2 < 1 OR D2 > 9 THEN 5052
 9652   0332    5055 IF D2 = 4 THEN INFPOS% = 1:F$="INF:CORNERS IN"
 966C   0332         IF D2 = 3 THEN INFPOS% = 2:F$="INF:INFIELD IN"
 9686   0332         IF D2 = 5 THEN INFPOS% = 0:F$="INF:NORMAL    "
 96A0   0332         IF D2=3 OR D2=4 OR D2=5 THEN CALL GMove2VE (52,416,14,16,V
                A%(1),-1):GPRINT1VE 27,52,F$,0: GOTO 5052
 96EC   0332    5058 IF D2 = 2 THEN CALL NEWLINES: GOTO 3240
 96FE   0332         IF D2 = 6 THEN P9 = D: W5 = -1: W6 = -1: GOTO 5500
 971A   0332    5060 GOTO 5085
 971A   0332    5061 I$ = INKEY$: IF I$ = "" THEN 5061
 9739   0332         CALL GMove2VE (1,304,14,176,VA%(16),-1)
 9756   0332         IF UCASE$(I$) = "Q" THEN call SCREEN0(0): END
 9782   0334         IF UCASE$(I$) = "D" THEN CALL VIEWTEAM: GOTO 5580
 97A2   0334         IF UCASE$(I$) = "W" THEN CALL WEATHER: GOTO 5580
                                                                      PAGE  42
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 97C2   0334         IF UCASE$(I$) = "S" THEN CALL POPUPSTATS: GOTO 5580
 97E2   0334         IF UCASE$(I$) = "L" THEN CALL POPUP: GOTO 5580
 9802   0334         IF UCASE$(I$) = "O" THEN CALL OPTIONS:GOTO 5580
 9822   0334         P2 = VAL(I$)
 9822   0334         IF P2 < 1 OR P2 > 5 THEN 5060
 984B   0334    5064 IF P2 = 5 THEN P9 = P: W5 = -1: W6 = -1: GOTO 5500
 9867   0334         IF P2 = 3 THEN 4800
 9871   0334         IF P2 = 2 AND O%(0) = 2 OR P2 = 2 AND S4% <> 1 AND S4% <> 
                4 AND S4% <> 5 THEN 5051
 98A1   0334    5067 IF P2 <> 2 THEN 5100
 98AB   0334         IF S4% = 4 THEN I = 3 ELSE I = 2
 98C1   0334         I3 = INT(RND(1) * 100) + 1
 98C1   0334         IF I3>=6 THEN 5068
 98F5   0334         CALL PICKEDOFF (D,I): PO = 1: A5%(I - 1) = 10: O%(0) = O%(
                0) + 1
 9902   0334         O%(1) = O%(1) + 1: W% = 1: CALL CREDITASSIST (W%,D): CALL 
                ADVANCEMENT (P,D,S2%,F%,I3)
 9949   0336         CALL CREDITPUTOUT (I3,FB2P%,AST%,D): I5 = P1%(D): I6 = 0: 
                CALL ADDPIT (D,I5,I6)
 9982   0336         IF O%(0) >= 3 THEN B1!(P) = B1!(P) - 1: PO = 0: GOTO 3900
 99AB   0336    5068 IF PO = 1 THEN PO = 0: GOTO 5051
 99BB   0336         CALL NEWLINES: I3 = INT(RND(1) * 1000) + 1: I9 = INT(RND(1
                ) * 1000) + 1
 99C0   0336         IF I3 > 350 THEN CALL PBP ("Runner(s) going")
 9A3E   033A         IF I3<=350 THEN CALL PBP ("Count not favorable...hit away"
                ): P2 = 1
 9A6E   033E         CALL DELAY
 9A73   033E         IF I3 <= 350 THEN 3050
 9A7E   033E         IF I9 <= (B4%(P, 4, B1!(P)) * 2 * .33) THEN U% = U% + 1: C
                ALL PBP (Q$(0)+" swings and misses"): CALL DELAY:IF U% = 3 THEN
                 GOTO 3601 ELSE GOTO 4800
 9B05   0342         IF I9 <= B4%(P, 4, B1!(P)) * 2 THEN CALL PBP (Q$(0)+" foul
                s off the pitch...hit away"): CALL DELAY:P2 = 1
 9B6D   0346         GOTO 3050
 9B6D   0346    5080 IF U6 = 2 OR U6 = 1 AND P <> U9 THEN 8700
 9B8D   0346         IF S4% = 1 OR S4% = 5 THEN H0% = 1: CALL HOLDSTATUS (H0%)
 9BAD   0346    5081 F$=LEFT$(A$(D), 3)+NN$(D)
 9BAD   0346         CALL SPA (F$,8)
 9BF2   0348         GPRINT1VE 20,1,F$,0
 9C06   0348         F1$(1)="1-PITCH       "
 9C06   0348         F1$(2)="2-INT WALK    "
 9C06   0348         F1$(3)="3-INF IN      "
 9C06   0348         F1$(4)="4-CORNERS IN  "
 9C06   0348         F1$(5)="5-INF NORMAL  "
 9C06   0348         F1$(6)="6-PERSONNEL   "
 9C06   0348         F1$(7)="8-PITCH AROUND"
 9C06   0348         F1$(8)="G-GUARD LINES "
 9C06   0348         F1$(9)="H-HOLD RUNNER "
 9C06   0348        F1$(10)="S/D/B/P STATS "
 9C06   0348         FOR I=21 TO 30
 9C8E   0348         GPRINT1VE I,1,F1$(I-20),0
 9CAD   0348         NEXT
 9CB9   0348    
 9CB9   0348         GOTO 5090
                                                                      PAGE  43
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 9CB9   0348    5085 IF U6 = 2 OR U6 = 1 AND P = U9 THEN 8900
 9CD9   0348         F$=LEFT$(A$(P), 3)+NN$(P)
 9CD9   0348         CALL SPA (F$,8)
 9D1E   034A         GPRINT1VE 20,1,F$,0
 9D32   034A         F1$(1)="1-HIT AWAY    "
 9D32   034A         F1$(2)="2-HIT AND RUN "
 9D32   034A         F1$(3)="3-STEAL       "
 9D32   034A         F1$(4)="4-BUNT        "
 9D32   034A         F1$(5)="5-PERSONNEL   "
 9D32   034A         F1$(6)="O-GAME OPTIONS"
 9D32   034A         F1$(7)="D/S/P/B STATS "
 9D32   034A         F1$(8)="W-WEATHER COND"
 9D32   034A         F1$(9)="L-SHOW LINEUPS"
 9D32   034A        F1$(10)="Q-QUIT GAME   "
 9D32   034A         FOR I=21 TO 30
 9DBA   034A         GPRINT1VE I,1,F1$(I-20),0
 9DD9   034A         NEXT
 9DE5   034A         GOTO 5061
 9DE5   034A    5090 I$ = INKEY$: IF I$ = "" THEN 5090
 9E04   034A         CALL GMove2VE (1,304,14,176,VA%(16),-1)
 9E21   034A         IF UCASE$(I$) = "S" THEN CALL POPUPSTATS: GOTO 5580
 9E41   034A         IF UCASE$(I$) = "L" THEN CALL POPUP: GOTO 5580
 9E61   034A         IF UCASE$(I$) = "W" THEN CALL WEATHER: GOTO 5580
 9E81   034A         IF UCASE$(I$) = "G" THEN INFPOS% = 3:F$="INF:GUARD LINE":C
                ALL GMove2VE (52,416,14,16,VA%(1),-1):GPRINT1VE 27,52,F$,0: GOT
                O 5052
 9EE0   034A         IF UCASE$(I$) = "D" THEN CALL VIEWTEAM: GOTO 5580
 9F00   034A         IF UCASE$(I$) = "O" THEN CALL OPTIONS:GOTO 5580
 9F20   034A         IF UCASE$(I$) = "Q" THEN call SCREEN0(0): END
 9F4C   034C         IF UCASE$(I$) = "H" THEN H0% = 1 - H0%:CALL HOLDSTATUS (H0
                %):GOTO 5081
 9F7A   034C         IF VAL(I$) = 7 THEN P2 = 1: D2 = 1: GOTO 3050
 9FA5   034C    
 9FA5   034C         GOTO 5054
 9FA5   034C    5100 IF D2 <> 8 THEN 3050
 9FB2   034C         CALL NEWLINES
 9FB7   034C         CALL RANDNUM(RN): IF P2 = 4 OR RN <= 50 AND P2 = 1 THEN 30
                50
 9FDB   034C         GOTO 3240
 9FDB   034C    
 9FDB   034C    5500 call SCREEN0(0)
 9FED   034E         TG = 0: PG = 0: RG = 0
 9FED   034E         CLS
 9FED   034E         COLOR 12: PRINT TAB(33); "PERSONNEL MENU": PRINT
 9FED   034E         COLOR 14: PRINT "(0) "; : COLOR 15: PRINT "RESUME PLAY": P
                RINT
 9FED   034E         COLOR 14: PRINT "(1) "; : COLOR 15: PRINT "RELIEF PITCHER"
                : PRINT
 9FED   034E         COLOR 14: PRINT "(2) "; : COLOR 15: PRINT "CHANGE BATTER/F
                IELDER"
 9FED   034E    5501 I$ = INKEY$: IF I$ = "" THEN 5501
 A107   0354         I = VAL(I$): I5 = 0: IF I > 2 THEN 5501
 A129   0354         ON I + 1 GOTO 5580, 5504, 5540
 A13A   0354    5504 IF P2 = 5 THEN CALL TIRING (P9): GOTO 5501
                                                                      PAGE  44
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 A14F   0354    5505 CALL PITDISP (P9)
 A158   0354         LOCATE 23, 1: PRINT "SELECT RELIEVER (Z = NO CHANGE) ";
 A158   0354         IF B9%(P9, 1) <> 99 THEN CALL TIRING (P9)
 A194   0354         PRINT
 A194   0354    5507 I$ = INKEY$: IF I$ = "" THEN 5507
 A1B9   0354         IF UCASE$(I$) = "Z" THEN 5500
 A1D1   0354         CALL LET2NUM (I$)
 A1DA   0354         I1 = VAL(I$): IF I1 > 21 THEN 5507
 A1F6   0354         IF P%(P9, I1, 15) > 0 THEN 5507
 A20D   0354         LOCATE 23, 1: PRINT STRING$(78, 32): LOCATE 23, 1: PRINT P
                $(P9, I1); " "; B1$(P%(P9, I1, 0) + 2); " ";
 A20D   0354         PRINT "ARE YOU SURE (YN)";
 A20D   0354    5515 I$ = INKEY$: IF I$ = "" THEN 5515
 A2B6   0354         IF UCASE$(I$) = "N" THEN 5505
 A2CE   0354         PPH = 0: PR% = 0
 A2CE   0354         IF S1%(P9) <> -1 AND P6%(P9) > 1 THEN I5 = P1%(P9): I6 = 2
                2: CALL OFFPIT (P9,I5,I6)
 A312   0354         P1%(P9) = I1: P6%(P9) = P6%(P9) + 1: P%(P9, I1, 15) = P6%(
                P9): CALL PITSTAM (P9): CALL CHECKSAVE (D,P,S4%)
 A352   0354    5518 P9 = 1 - P9: W5 = P9: W6 = W5: VV(P9) = 1: VV1(P9) = 9
 A352   0354         CALL HITTINGLINES(L%(), P%(), P1%(), B7%(), B%(), VV(), VV
                1(), B3%(), B4%(), K9!(), WF!)
 A3C6   0354         P9 = 1 - P9: IF DH% = 1 OR I5 = 66 OR I5 = 77 THEN 5538
 A3EE   0354         CLS : LOCATE , 14: COLOR 14: PRINT "DO YOU WISH TO MAKE A 
                FLIP FLOP OR DOUBLE SWITCH (YN)";
 A3EE   0354         COLOR 15
 A3EE   0354    5520 I$ = INKEY$: IF I$ = "" THEN 5520
 A452   0354         IF UCASE$(I$) = "N" THEN 5538
 A46A   0354         CLS : CALL BATDISP (PG,P9)
 A480   0354    5523 CALL CHANGELINEUP(P9,P): LOCATE 12, 30: PRINT "LINEUP SLOT
                 FOR PITCHER TO BAT IN (1-9)"
 A48D   0354    5524 I$ = INKEY$: IF I$ = "" THEN 5524
 A4CB   0354         IF ASC(I$) = 32 AND PG = 0 THEN PG = 1: CLS : CALL BATDISP
                 (PG,P9): GOTO 5523
 A505   0354         IF ASC(I$) = 32 AND PG = 1 THEN PG = 0: CLS : CALL BATDISP
                 (PG,P9): GOTO 5523
 A53F   0354         IF ASC(I$) = 9 AND TG = 0 THEN CALL DISPFLDG (PG,P9,TG): G
                OTO 5523
 A56E   0354         IF ASC(I$) = 9 AND TG = 1 THEN TG = 0: CALL BATDISP (PG,P9
                ): GOTO 5523
 A59F   0354         V2 = VAL(I$): IF V2 < 1 OR V2 > 9 THEN 5524
 A5C8   0356    5526 LOCATE 13, 30: PRINT "WHO WILL REPLACE "; B$(D, B3%(D, V2)
                ); " @ "; C$(B7%(D, V2));
 A5C8   0356    5527 I$ = INKEY$: IF I$ = "" THEN 5527
 A645   0356         IF ASC(I$) = 32 AND PG = 0 THEN PG = 1: CALL BATDISP (PG,P
                9): GOTO 5526
 A676   0356         IF ASC(I$) = 32 AND PG = 1 THEN PG = 0: CALL BATDISP (PG,P
                9): GOTO 5526
 A6A7   0356         IF ASC(I$) = 9 AND TG = 0 THEN CALL DISPFLDG (PG,P9,TG): G
                OTO 5526
 A6D6   0356         IF ASC(I$) = 9 AND TG = 1 THEN TG = 0: CALL BATDISP (PG,P9
                ): GOTO 5526
 A707   0356         CALL LET2NUM (I$): V3 = VAL(I$): IF V3 > 22 THEN 5527
 A72F   0358         LOCATE 16, 29: PRINT B$(D, V3)
                                                                      PAGE  45
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 A72F   0358         LOCATE 17, 29: PRINT "ARE YOU SURE (YN)";
 A72F   0358    5531 I$ = INKEY$: IF I$ = "" THEN 5531
 A79D   0358         IF UCASE$(I$) = "N" THEN 5518
 A7B5   0358         D0%(D) = D0%(D) + 1: X0%(D, 0, D0%(D)) = V3: X0%(D, 1, D0%
                (D)) = B7%(D, V2)
 A7B5   0358         FOR V0 = 1 TO 9
 A7F4   0358         IF B7%(D, V0) = 1 THEN X0%(D, 2, D0%(D)) = (V0 * 10) + (D0
                %(D) - 9)
 A82F   0358         NEXT V0
 A83B   035A         FOR V0 = 1 TO 9
 A842   035A         IF B7%(D, V0) = 1 THEN B7%(D, V0) = B7%(D, V2): B3%(D, V0)
                 = V3: B9%(D, B7%(D, V0)) = V3: P9 = D: W5 = D: W6 = D: VV(D) =
                 V0: VV1(D) = V0: CALL HITTINGLINES(L%(), P%(), P1%(), B7%(), B
                %(), VV(), VV1(), B3%(), B4%(), K9!(), WF!)
 A8ED   035A         VV(D)=1:VV1(D)=9
 A8ED   035A         NEXT V0
 A90E   035A         B%(D, V3, 21) = 1
 A90E   035A         I7% = D: I8% = V2: I9% = V3
 A90E   035A         CALL REPLACEMENTS (I7%,I8%,I9%)
 A947   035A         I5 = 0
 A947   035A         FOR V0 = 1 TO 9
 A954   035A         IF V0 = V2 THEN B7%(D, V2) = 1: B3%(D, V2) = P1%(D): B9%(D
                , 1) = P1%(D): VV(D) = V0: VV1(D) = V0: CALL HITTINGLINES(L%(),
                 P%(), P1%(), B7%(), B%(), VV(), VV1(), B3%(), B4%(), K9!(), WF
                !)
 A9DF   035A         NEXT V0
 A9EE   035A    5537 VV(D)=1:VV1(D)=9
 A9EE   035A         GOTO 5500
 A9EE   035A    5538 I5 = 0
 AA03   035A         FOR V0 = 1 TO 9
 AA10   035A         IF B7%(D, V0) = 1 OR B7%(D, V0) = 10 THEN
 AA10   035A            B3%(D, V0) = P1%(D)
 AA10   035A            B9%(D, 1) = P1%(D)
 AA10   035A            B7%(D, V0) = 1
 AA10   035A            P9 = D: W5 = D: W6 = D
 AA10   035A            VV(D) = V0: VV1(D) = V0
 AA10   035A            CALL HITTINGLINES(L%(), P%(), P1%(), B7%(), B%(), VV(),
                 VV1(), B3%(), B4%(), K9!(), WF!)
 AABC   035A            GOTO 5537
 AABC   035A         END IF
 AABF   035A         NEXT V0
 AACE   035A    5540 CLS : CALL BATDISP (PG,P9): CALL CHANGELINEUP (P9,P)
 AAF1   035A    5546 LOCATE 14, 29: COLOR 12: PRINT "SELECT:"
 AAF1   035A         LOCATE , 30: COLOR 14: PRINT " (1) "; : COLOR 15: PRINT "S
                ELECT A PINCH-HITTER"
 AAF1   035A         LOCATE , 30: COLOR 14: PRINT " (2) "; : COLOR 15: PRINT "S
                WAP POSITIONS BETWEEN PLAYERS"
 AAF1   035A         LOCATE , 30: COLOR 14: PRINT " (3) "; : COLOR 15: PRINT "S
                UBSTITUTE PLAYER IN LINEUP"
 AAF1   035A         LOCATE , 30: COLOR 14: PRINT " (Z) "; : COLOR 15: PRINT "R
                ESUME PLAY"
 AAF1   035A         LOCATE , 30: COLOR 14: PRINT "<SPACE> "; : COLOR 15: PRINT
                 "TOGGLE ROSTER"; : COLOR 14: PRINT " <TAB> "; : COLOR 15: PRIN
                T "TOGGLE FIELDING/BATTING"
                                                                      PAGE  46
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 AAF1   035A    5547 I$ = INKEY$: IF I$ = "" THEN 5547
 ACDC   035A         IF ASC(I$) = 32 AND PG = 0 THEN PG = 1: CALL BATDISP (PG,P
                9): GOTO 5547
 AD0C   035A         IF ASC(I$) = 32 AND PG = 1 THEN PG = 0: CALL BATDISP (PG,P
                9): GOTO 5547
 AD3C   035A         GOTO 5590
 AD3C   035A    
 AD3C   035A    
 AD3C   035A    5550 LOCATE 20, 30: PRINT "LINEUP SLOT TO REPLACE (1-9) (Z)=NO 
                CHANGE"
 AD3F   035A    5552 I$ = INKEY$: IF I$ = "" THEN 5552
 AD7D   035A         IF ASC(I$) = 32 AND PG = 0 THEN PG = 1: CALL BATDISP (PG,P
                9): CALL CHANGELINEUP (P9,P): GOTO 5552
 ADBA   035A         IF ASC(I$) = 32 AND PG = 1 THEN PG = 0: CALL BATDISP (PG,P
                9): CALL CHANGELINEUP (P9,P): GOTO 5552
 ADF8   035A         IF ASC(I$) = 9 AND TG = 0 THEN CALL DISPFLDG (PG,P9,TG): C
                ALL CHANGELINEUP (P9,P): GOTO 5552
 AE34   035A         IF ASC(I$) = 9 AND TG = 1 THEN TG = 0: CALL BATDISP (PG,P9
                ): CALL CHANGELINEUP (P9,P): GOTO 5552
 AE72   035A         IF UCASE$(I$) = "Z" THEN 5540
 AE8A   035A         I2 = VAL(I$): IF I2 < 1 OR I2 > 9 OR P9 = D AND B7%(P9, I2
                ) = 1 THEN 5552
 AED2   035A         LOCATE , 30
 AED2   035A         IF B7%(P9, I2) = 1 THEN PRINT P$(P9, P1%(P9));
 AF17   035A         IF B7%(P9, I2) <> 1 THEN PRINT B$(P9, B3%(P9, I2));
 AF42   035A    5555 LOCATE 22, 30: PRINT "# OF SUB"
 AF42   035A    5556 I$ = INKEY$: IF I$ = "" THEN 5556
 AF80   035A         IF ASC(I$) = 32 AND PG = 0 THEN PG = 1: CALL BATDISP (PG,P
                9): CALL CHANGELINEUP (P9,P): GOTO 5556
 AFBD   035A         IF ASC(I$) = 32 AND PG = 1 THEN PG = 0: CALL BATDISP (PG,P
                9): CALL CHANGELINEUP (P9,P): GOTO 5556
 AFFB   035A         IF ASC(I$) = 9 AND TG = 0 THEN CALL DISPFLDG (PG,P9,TG): C
                ALL CHANGELINEUP (P9,P): GOTO 5556
 B037   035A         IF ASC(I$) = 9 AND TG = 1 THEN TG = 0: CALL BATDISP (PG,P9
                ): CALL CHANGELINEUP (P9,P): GOTO 5556
 B075   035A         CALL LET2NUM (I$): I1 = VAL(I$): IF I1 > 22 THEN 5555
 B09D   035A         IF B%(P9, I1, 21) > 0 THEN 5555
 B0B7   035A         LOCATE 23, 30: PRINT B$(P9, I1); "... ARE YOU SURE (YN)"
 B0B7   035A    5560 I$ = INKEY$: IF I$ = "" THEN 5560
 B10C   035A         IF UCASE$(I$) = "N" THEN 5540
 B124   035A         B%(P9, I1, 21) = 1: B3%(P9, I2) = I1: B9%(P9, B7%(P9, I2))
                 = I1
 B124   035A         IF B7%(P9, I2) = 1 OR B7%(P9, I2) = 10 THEN B9%(P9, 1) = 9
                9: B9%(P9, 0) = I2: B7%(P9, I2) = 10
 B194   035A         D0%(P9) = D0%(P9) + 1: X0%(P9, 0, D0%(P9)) = B3%(P9, I2)
 B194   035A         X0%(P9, 1, D0%(P9)) = B7%(P9, I2): X0%(P9, 2, D0%(P9)) = (
                I2 * 10) + (D0%(P9) - 9)
 B194   035A         W5 = P9: W6 = P9: VV(P9) = I2: VV1(P9) = I2
 B194   035A         I7% = P9: I8% = I2: I9% = I1
 B194   035A         CALL REPLACEMENTS (I7%,I8%,I9%)
 B222   035A         CALL HITTINGLINES(L%(), P%(), P1%(), B7%(), B%(), VV(), VV
                1(), B3%(), B4%(), K9!(), WF!)
 B271   035A         VV(P9)=1:VV1(P9)=9
 B271   035A         GOTO 5540
                                                                      PAGE  47
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 B271   035A    5567 LOCATE 20, 29: PRINT "B.O. #1 (1-9)"
 B286   035A    5568 I$ = INKEY$: IF I$ = "" THEN 5568
 B2C4   035A         I1 = VAL(I$): IF I1 < 1 OR I1 > 9 THEN 5568
 B2E7   035A         IF B7%(P9, I1) = 1 THEN 5568
 B2FA   035A         LOCATE 21, 29: PRINT "B.O. #2 (1-9)"
 B2FA   035A    5572 I$ = INKEY$: IF I$ = "" THEN 5572
 B338   035A         I2 = VAL(I$): IF I2 < 1 OR I2 > 9 THEN 5572
 B35B   035A         IF B7%(P9, I2) = 1 THEN 5572
 B36E   035A         I3 = B7%(P9, I2): B7%(P9, I2) = B7%(P9, I1): B7%(P9, I1) =
                 I3
 B36E   035A         B9%(P9, B7%(P9, I1)) = B3%(P9, I1)
 B36E   035A         B9%(P9, B7%(P9, I2)) = B3%(P9, I2)
 B36E   035A         I7% = P9: I8% = I2: I9% = B3%(P9, I2)
 B36E   035A         CALL REPLACEMENTS (I7%,I8%,I9%)
 B3E9   035A         I7% = P9: I8% = I1: I9% = B3%(P9, I1)
 B3E9   035A         CALL REPLACEMENTS (I7%,I8%,I9%)
 B417   035A         GOTO 5540
 B417   035A    5580 FOR I = 1 TO 9
 B420   035A         IF B7%(P9, I) = 1 THEN 154
 B434   035A         B%(P9, B3%(P9, I), 21) = 1
 B434   035A    154  NEXT I
 B463   035A         CALL LOADSCREEN
 B468   035A         CALL FLDDISP (BC%,P,U%,D)
 B47D   035A         GOTO 5051
 B47D   035A    5590 IF ASC(I$) = 9 AND TG = 0 THEN CALL DISPFLDG (PG,P9,TG): G
                OTO 5547
 B4AF   035A         IF ASC(I$) = 9 AND TG = 1 THEN TG = 0: CALL BATDISP (PG,P9
                ): GOTO 5547
 B4E0   035A         IF UCASE$(I$) = "Z" THEN 5500
 B4F8   035A         I1 = VAL(I$): IF I1 = 2 THEN 5567
 B517   035A         IF I1 = 3 THEN 5550
 B521   035A         IF D2 = 6 THEN 5550
 B52B   035A         I2 = B1!(P): GOTO 5555
 B52B   035A         FOR I5 = 20 TO 23: LOCATE I5, 28
 B542   035A         PRINT "                                                   
                 "
 B542   035A         NEXT I5
 B56D   035A         RETURN
 B56D   035A    8500 IF S6%(0, 0) > S6%(1, 0) THEN CALL PBP (A$(0)+" defeats "+
                A$(1)+"!") ELSE CALL PBP (A$(1)+" defeats "+A$(0)+"!")
 B5F7   0362         IF AP% = 1 AND U6 = 2 THEN 8607
 B608   0362         G4=1
 B608   0362         CALL PBP ("PRESS ANY KEY TO CONTINUE")
 B633   0366         IF DRIVE>=67 THEN 8606
 B63D   0366         CALL PBP ("INSERT PROGRAM DISK # 2")
 B65C   036A    8606 I$ = INKEY$: IF I$ = "" THEN 8606
 B678   036A    8607 call SCREEN0(0):CHAIN "POSTGAME.exe"
 B687   036C         END
 B687   036C    8700 H0% = 0: CALL HOLDSTATUS (H0%)
 B6A4   036C         A1 = S6%(D, 0) - S6%(P, 0)
 B6A4   036C         IF A1 > 1 OR S4% = 3 OR S4% >= 6 THEN 8800
 B6D7   036C         IF S4% <> 1 AND S4% <> 5 THEN I2 = 2: GOTO 8800
 B6EE   036C         I2 = 1
 B6EE   036C         J = B0%(I2, 0): IF J = 0 THEN 8800
                                                                      PAGE  48
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 B708   036E         IF B7%(P, J) = 1 THEN 8800
 B71E   036E         IF B7%(P, J) <> 1 AND B%(P, B3%(P, J), 13) >= 10 THEN H0% 
                = 1: CALL HOLDSTATUS (H0%)
 B75E   036E    8800 IF SU%(D,0)<>-1 AND MG%(D,589)=0 AND INNING%=MG%(D,588) TH
                EN CALL PITSTRAT
 B796   036E         IF SU%(D,1)<>-1 AND MG%(D,589)=0 AND INNING%>MG%(D,588) TH
                EN CALL PITSTRAT
 B7D6   036E         if SU%(D,1)<>-1 AND MG%(D,589)<>0 AND INNING%>=MG%(D,588) 
                THEN CALL PITSTRAT
 B816   036E    
 B816   036E    
 B816   036E         IF PZ=1 THEN PZ=0:GOTO 5055
 B826   036E         A1 = S6%(D, 0) - S6%(P, 0)
 B826   036E         CALL RANDNUM (RN)
 B846   036E         IF INNING% < 9 OR CZ%(D)=-1 OR MG%(D,581)=999 THEN 8725
 B86F   036E    
 B86F   036E    
 B86F   036E         CZ%(D) = -1
 B86F   036E         IF A1 > 3 OR A1 <0 THEN 8725
 B88F   036E         IF P6%(D) <> 1 THEN 8730
 B89F   036E         IF S6%(P, 0) = 0 AND P%(D, P1%(D), 5) > 0 AND RN <= INT(P%
                (D, P1%(D), 16) / P%(D, P1%(D), 5) * 100 + .5) + 10 THEN 8725
 B903   036E         IF P%(D, P1%(D), 5) > 0 AND RN <= INT(P%(D, P1%(D), 16) / 
                P%(D, P1%(D), 5) * 100 + .5) THEN 8725
 B955   036E         IF CGERA%>0 AND INNING%>7 AND S6%(D,0)>S6%(P,0) AND P%(D,P
                1%(D),1)>0 AND P6%(D)=1 AND INT(P%(D,P1%(D),16)/P%(D,P1%(D),1)*
                100+.5)<=100 AND INT(RND(1)*100)+1<=INT(P%(D,P1%(D),16)/P%(D,P1
                %(D),1)*100+.5) THEN 8725
 BA24   036E         IF CGERA%>0 AND INNING%>7 AND (S6%(D,0)>=S6%(P,0) OR S6%(P
                ,0)-S6%(D,0)<=2) AND P%(D, P1%(D), 1) > 0 AND P6%(D)=1 AND INT(
                P%(D, P1%(D), 16) / P%(D, P1%(D), 1) * 100 + .5)>=100 THEN 8725
 BAAF   036E         IF CGERA%>=8 THEN 8725
 BAB9   036E         GK%(D) = 1
 BAB9   036E         GOTO 8725
 BAB9   036E    8730 CALL RANDNUM(RN)
 BAD1   036E         IF RN <= 80 AND P%(D, P1%(D), 3) < 15 THEN GK%(D) = 1
 BAFC   036E    8725 IF GK%(D) = 1 THEN GK%(D) = 0: CALL RELIEVERS :GOSUB 3955:
                 GOTO 5055
 BB1D   036E         IF B7%(P, B1!(P)) = 1 THEN BR = 0
 BB46   036E         IF B7%(P, B1!(P)) <> 1 THEN BR = B%(P, B3%(P, B1!(P)), 30)
 BB96   036E         IF p% (P, P1%(P), 11) <> 999 THEN I7! = p%(I, P1%(I), 11):
                GOTO 8726
 BBDB   0372         IF p%(P, P1%(P), 20) = 0 THEN I7!=0:GOTO 8726
 BC08   0372         I7! = INT((p%(P, P1%(P), 22) / p%(P, P1%(P), 20)*1000+.5))
 BC08   0372    8726 D2 = 1:IF INFPOS%>0 THEN 8820
 BC59   0372    
 BC59   0372         IF MG%(D,690)<>999 THEN 8801
 BC6E   0372    REM: PROFILE INFIELD IN WITH 3RD OCCUPIED
 BC6E   0372         IF S4%<3 OR S4%=4 THEN 8801
 BC82   0372         CALL RANDNUM (RN)
 BC8B   0372         IF O%(0)=0 AND A1>=MG%(D,691)*-1 AND A1<=MG%(D,692)*-1 AND
                 INNING%>=MG%(D,693) AND RN<=MG%(D,694) THEN INFPOS%=2:D2=3:GOT
                O 5055
 BCEF   0372         IF O%(0)=0 AND A1>=MG%(D,695)*-1 AND A1<=MG%(D,696)*-1 AND
                                                                      PAGE  49
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                 INNING%>=MG%(D,697) AND RN<=MG%(D,698) THEN INFPOS%=2:D2=3:GOT
                O 5055
 BD53   0372         IF O%(0)=1 AND (S4%=5 OR S4%=7) AND A1>=MG%(D,699)*-1 AND 
                A1<=MG%(D,700)*-1 AND INNING%>=MG%(D,701) AND RN<=MG%(D,702) TH
                EN INFPOS%=2:D2=3:GOTO 5055
 BDC5   0372         IF O%(0)=1 AND (S4%=5 OR S4%=7) AND A1>=MG%(D,703)*-1 AND 
                A1<=MG%(D,704)*-1 AND INNING%>=MG%(D,705) AND RN<=MG%(D,706) TH
                EN INFPOS%=2:D2=3:GOTO 5055
 BE37   0372    8801 IF MG%(D,707)<>999 THEN 8802
 BE4C   0372         IF S4%<>0 THEN 8802
 BE56   0372         CALL RANDNUM (RN)
 BE5F   0372    REM: PROFILE CORNERS IN AGAINST A BUNT HIT
 BE5F   0372         IF BR>=MG%(D,708) AND RN<=MG%(D,709) OR br>=MG%(D,710) AND
                 RN<=MG%(D,711) OR br>=MG%(D,712) AND RN<=MG%(D,713) THEN 8811
 BEDA   0372    8802 IF MG%(D,714)<>999 OR B7%(P,B1!(P))=1 THEN 8803
 BF15   0372         IF O%(0)<>0 THEN 8803
 BF1F   0372         IF S4%<>1 AND S4%<>4 THEN 8803
 BF30   0372    REM: PROFILE CORNERS IN VS HITTER IN SAC BUNT SITUATION
 BF30   0372         CALL RANDNUM (RN)
 BF39   0372         IF A1<=MG%(D,715) AND A1>=MG%(D,716)*-1 AND S4%=1 AND BR>=
                MG%(D,717) AND RN<=MG%(D,718) THEN 8811
 BF8F   0372         IF A1<=MG%(D,719) AND A1>=MG%(D,720)*-1 AND S4%=1 AND BR>=
                MG%(D,721) AND RN<=MG%(D,722) THEN 8811
 BFE5   0372         IF A1<=MG%(D,723) AND A1>=MG%(D,724)*-1 AND S4%=4 AND BR>=
                MG%(D,725) AND RN<=MG%(D,726) THEN 8811
 C03B   0372         IF A1<=MG%(D,727) AND A1>=MG%(D,728)*-1 AND S4%=4 AND BR>=
                MG%(D,729) AND RN<=MG%(D,730) THEN 8811
 C091   0372    8803 IF MG%(D,731)<>999 OR B7%(P,B1!(P))<>1 OR O%(0)=2 THEN 880
                4
 C0D6   0372         IF S4%<>1 AND S4%<>2 AND S4%<>4 THEN 8804
 C0EE   0372    REM: PROFILE CORNERS IN VS A PITCHER IN SAC BUNT SITUATION
 C0EE   0372         CALL RANDNUM (RN)
 C0F7   0372         IF I7!<=MG%(D,732) AND RN<=MG%(D,733) AND S4%=1 AND O%(0)<
                =1 THEN 8811
 C137   0372         IF I7!<=MG%(D,734) AND RN<=MG%(D,735) AND S4%=1 AND O%(0)<
                =1 THEN 8811
 C177   0372         IF I7!<=MG%(D,736) AND RN<=MG%(D,737) AND (S4%=2 OR S4%=4)
                 AND O%(0)=0 THEN 8811
 C1BE   0372         IF I7!<=MG%(D,738) AND RN<=MG%(D,739) AND (S4%=2 OR S4%=4)
                 AND O%(0)=0 THEN 8811
 C205   0372    8804 IF MG%(D,740)<>999 THEN 8805
 C21A   0372         IF O%(0)=2 OR S4%<>3 AND S4%<5 THEN 8805
 C235   0372    REM: PROFILE CORNERS IN FOR A SQUEEZE
 C235   0372         CALL RANDNUM (RN)
 C23E   0372         IF O%(0)=0 AND A1<=MG%(D,741) AND A1>=MG%(D,742) AND br>=M
                G%(D,743) AND RN<=MG%(D,744) THEN 8811
 C292   0372         IF O%(0)=1 AND A1<=MG%(D,745) AND A1>=MG%(D,746) AND br>=M
                G%(D,747) AND RN<=MG%(D,748) THEN 8811
 C2E6   0372    8805 IF MG%(D,756)<>999 THEN 8806
 C2FB   0372         IF S4%=1 OR S4%=4 OR S4%=5 OR S4%=7 THEN 8806
 C323   0372         MOB%=0
 C323   0372         FOR I=1 TO 3
 C330   0374         IF B0%(I, 0)>0 THEN MOB%=MOB%+1
 C33F   0374         NEXT
                                                                      PAGE  50
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 C34B   0374         IF A1+MOB%+1>=0 THEN 8806:REM BATTER NOT TYING OR WINNING 
                RUN
 C35A   0374         CALL RANDNUM (RN)
 C363   0374         IF b%(P, B3%(P, B1!(P)), 4) = 0 THEN I7! = 0: I6!=0: GOTO 
                8806
 C3B2   0378         I6! = INT((b%(P, B3%(P, B1!(P)), 6)+b%(P, B3%(P, B1!(P)), 
                7)+b%(P, B3%(P, B1!(P)), 8)*2+b%(P, B3%(P, B1!(P)), 9)*3)/b%(P,
                 B3%(P, B1!(P)), 4)*1000+.5)
 C3B2   0378         IF I6!<=MG%(D,757) AND INNING%>=MG%(D,758) AND RN<=MG%(D,7
                59) THEN D2=8:GOTO 8850
 C4FC   0378         IF I6!<=MG%(D,760) AND INNING%>=MG%(D,761) AND RN<=MG%(D,7
                62) THEN D2=8:GOTO 8850
 C546   0378         IF I6!<=MG%(D,763) AND INNING%>=MG%(D,764) AND RN<=MG%(D,7
                65) THEN D2=8:GOTO 8850
 C590   0378    8806 A1 = S6%(D, 0) - S6%(P, 0)
 C590   0378         IF A1 >= -1 AND A1 <= 1 AND INNING% >= 8 AND (S4% = 3 OR S
                4% >= 5) AND O%(0) < 2 THEN 8809
 C5D0   0378         IF A1 > 0 OR O%(0) > 0 OR S4% <= 2 OR S4% = 4 OR S4% = 5 A
                ND O%(0) = 1 OR INNING% <= 5 AND A1 < -2 OR INNING% > 5 AND A1 
                < -4 THEN 8810
 C62B   0378    8809 INFPOS% = 2: D2 = 3: GOTO 5055
 C62B   0378    8810 IF S4% = 0 OR S4% = 2 OR S4% = 3 OR S4% >= 5 OR O%(0) = 2 
                OR B1!(P) >= 3 AND B1!(P) <= 6 OR INNING% <= 6 AND A1 >= 3 OR I
                NNING% <= 6 AND A1 <= -3 THEN 8820
 C6BF   0378         IF INNING% > 7 AND A1 >= 1 OR INNING% > 7 AND A1 < -1 THEN
                 8820
 C6E1   0378    8811 INFPOS% = 1: D2 = 4: GOTO 5055
 C6E1   0378    8820 IF A1 <= 0 OR A1 = 0 AND S4% <= 1 OR A1 = 0 AND S4% = 4 OR
                 S4% = 7 OR B7%(P, B1!(P)) = 1 THEN 8850
 C74C   0378         IF INNING% >= 9 AND P = 1 AND O%(0) < 2 AND A1 = 0 AND S4%
                 >= 2 AND S4% <= 3 OR INNING% >= 9 AND P = 1 AND O%(0) = 2 AND 
                A1 = 0 AND S4% >= 5 AND S4% <= 6 THEN 8835
 C7A6   0378         I = B4%(P, 0, B1!(P)): I1 = B4%(P, 3, B1!(P)): IF B1!(P) =
                 9 THEN I2 = B4%(P, 0, 0): I3 = B4%(P, 3, 0)
 C81E   0378         IF B1!(P) < 9 THEN I2 = B4%(P, 0, B1!(P) + 1): I3 = B4%(P,
                 3, B1!(P) + 1)
 C889   0378         IF S4% <> 2 AND S4% <> 6 THEN 8850
 C89A   0378         IF I - I2 >= 50 AND I1 - I3 >= 50 AND A1 < 1 AND INNING% >
                 8 OR I >= 280 AND I1 >= 140 AND INNING% > 8 AND I1 > I3 AND A1
                 < 1 THEN 8835
 C8ED   0378         REM:IF I-I2>=50 AND I1-I3>=50 OR I>=280 AND I1>=140 AND I1
                >I3 THEN 8835
 C8ED   0378         GOTO 8850
 C8ED   0378    8835 D2 = 2: GOTO 5058
 C8F0   0378    8850 IF S8%(D, 0) <= P8%(D, P1%(D), 4) + P8%(D, P1%(D), 1) AND 
                S8%(D, 1) <= P8%(D, P1%(D), 2) THEN CALL RELIEVERS :GOSUB 3955:
                 GOTO 5055
 C94B   0378         IF B9%(D, 1) = 99 THEN CALL RELIEVERS
 C964   0378         GOSUB 3955
 C967   0378         GOTO 5055
 C967   0378    8900 JM = B3%(P, B1!(P))
 C96A   0378         IF PPH = 1 THEN 8905
 C997   037A         A1 = S6%(P, 0) - S6%(D, 0)
 C997   037A         IF B7%(P, B1!(P)) <> 1 THEN 8906
                                                                      PAGE  51
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 C9D4   037A         FOR I = 0 TO 21
 C9DA   037A         IF P%(P, I, 15) = 0 THEN 8903
 C9F1   037A         NEXT
 C9FD   037A         GOTO 8941
 C9FD   037A    8903 IF MG%(P,590)=999 THEN 8985
 CA15   037A         IF INNING% > 4 AND INNING% < 7 AND A1 < -2 AND S6%(P, 0) >
                 0 THEN 8930
 CA3A   037A         IF INNING% > 4 AND INNING% < 7 AND A1 < -3 THEN 8930
 CA52   037A         IF INNING% > 6 AND A1 < 0 OR A1 = 0 AND INNING% > 6 AND IN
                NING% < 9 AND S4% > 1 THEN 8930
 CA82   037A         IF A1 = 0 AND INNING% >= 9 AND S4% > 0 OR A1 = 0 AND INNIN
                G% >= 9 AND O%(0) = 0 THEN 8930
 CAB2   037A         IF P%(P, P1%(P), 6) / P%(P, P1%(P), 4) <= 2 AND P8%(P, P1%
                (P), 0) >= 6 THEN 8930
 CAF9   037A    8905 GOTO 8941
 CAF9   037A    8906 IF MG%(P,847)=999 THEN 8991
 CB11   037A         IF B%(P, JM, 4) = 0 THEN 8909
 CB2B   037A         IF B%(P, JM, 6) / B%(P, JM, 4) * 1000 > 233 OR B%(P, JM, 9
                ) >= 15 THEN 8908
 CB77   037A         IF INNING% > 6 AND A1 < -2 OR A1 <= 0 AND INNING% >= 8 OR 
                A1 = 0 AND INNING% >= 9 THEN 8909
 CBAA   037A    8908 GOTO 8941
 CBAA   037A    8909 REM:GET A PINCH HITTER FOR A POSITION PLAYER
 CBAD   037A         IF MG%(P,540)=999 THEN 8993
 CBC2   037A    8935 FOR I = 0 TO 22: IF B%(P, I, 21) > 0 OR B$(P, I) = "XXX" O
                R B%(P, I, 4) = 0 THEN 8917
 CC0E   037A         IF B7%(P, B1!(P)) <> B%(P, I, 22) AND B7%(P, B1!(P)) <> B%
                (P, I, 23) AND B7%(P, B1!(P)) <> B%(P, I, 24) AND B7%(P, B1!(P)
                ) <> B%(P, I, 25) THEN 8917
 CCBB   037A         IF P%(D, P1%(D), 0) = 1 AND B%(P, I, 0) > 0 AND B%(P, I, 6
                ) / B%(P, I, 4) * 1000 > B%(P, JM, 6) / B%(P, JM, 4) * 1000 + 3
                5 THEN 8916
 CD3F   037A         IF P%(D, P1%(D), 0) = -1 AND B%(P, I, 0) < 0 AND B%(P, I, 
                6) / B%(P, I, 4) * 1000 > B%(P, JM, 6) / B%(P, JM, 4) * 1000 + 
                45 THEN 8916
 CDC3   037A         IF B%(P, I, 0) = 0 AND B%(P, I, 6) / B%(P, I, 4) * 1000 > 
                B%(P, JM, 6) / B%(P, JM, 4) * 1000 + 30 THEN 8916
 CE2E   037A         GOTO 8917
 CE2E   037A    8916 PPH = 1: D0%(P) = D0%(P) + 1: X0%(P, 0, D0%(P)) = I: X0%(P
                , 1, D0%(P)) = B7%(P, B1!(P)): X0%(P, 2, D0%(P)) = (B1!(P) * 10
                ) + (D0%(P) - 9): GOTO 8919
 CE31   037A    8917 NEXT I
 CEC1   037A         GOTO 8925
 CEC1   037A    8919 B%(P, I, 21) = 1: B3%(P, B1!(P)) = I: B9%(P, B7%(P, B1!(P)
                )) = I
 CEC4   037A         IF B7%(P, B1!(P)) = 1 OR B7%(P, B1!(P)) = 10 THEN B9%(P, 1
                ) = 99: B9%(P, 0) = B1!(P): B7%(P, B1!(P)) = 10
 CF9C   037A         I7% = P: I8% = B1!(P): I9% = B3%(P, B1!(P))
 CF9C   037A         CALL REPLACEMENTS (I7%,I8%,I9%)
 CFE0   037A         GOTO 8938
 CFE0   037A    8925 GOTO 8941
 CFE3   037A    8930 REM:GET A PINCH HITTER FOR THE PITCHER
 CFE6   037A         IF MG%(P,540)=999 THEN 8990
 CFFB   037A    8933 J% = 0: GP% = 0
                                                                      PAGE  52
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 CFFB   037A    
 CFFB   037A         IF CGERA%>1 AND INNING%<4 THEN 8941
 D018   037C         IF CGERA%>2 AND INNING%<7 THEN 8941
 D029   037C         IF CGERA%>3 AND inning%<9 then 8941
 D03A   037C         IF CGERA%>=8 THEN 8941
 D044   037C         IF CGERA%>0 AND INNING%>7 AND S6%(P,0)>S6%(D,0) AND P%(P,P
                1%(P),1)>0 AND P6%(P)=1 AND INT(P%(P,P1%(P),16)/P%(P,P1%(P),1)*
                100+.5)<=100 AND INT(RND(1)*100)+1<=INT(P%(P,P1%(P),16)/P%(P,P1
                %(P),1)*100+.5) THEN 8941
 D113   037C         IF CGERA%>0 AND INNING%>7 AND (S6%(P,0)>=S6%(D,0) OR S6%(D
                ,0)-S6%(P,0)<=2) AND P%(P, P1%(P), 1) > 0 AND P6%(P)=1 AND INT(
                P%(P, P1%(P), 16) / P%(P, P1%(P), 1) * 100 + .5)>=100 THEN 8941
 D19E   037C    
 D19E   037C         FOR I = 0 TO 22
 D1A4   037C         IF B$(P, I) = "XXX" OR B%(P, I, 21) > 0 OR B%(P, I, 4) = 0
                 THEN 8932
 D1EC   037C         IF B%(P, I, 0) > 0 AND P%(D, P1%(D), 0) = 1 OR B%(P, I, 0)
                 < 0 AND P%(D, P1%(D), 0) = -1 THEN PH%(J%, 0) = INT(B%(P, I, 3
                ) / 4 + .5): GOTO 8931
 D27A   037C         PH%(J%, 0) = B%(P, I, 3)
 D27A   037C    8931 PH%(J%, 1) = I: GP% = GP% + PH%(J%, 0): J% = J% + 1
 D298   037C    8932 NEXT
 D2C9   037C         IF J% = 0 THEN 8941
 D2D3   037C         RN = INT(RND(1) * GP%) + 1
 D2D3   037C         FOR I = 0 TO J% - 1
 D30A   037E         IF RN <= PH%(I, 0) THEN PH% = PH%(I, 1): GOTO 8934
 D325   0380         PH%(I + 1, 0) = PH%(I, 0) + PH%(I + 1, 0)
 D325   0380         NEXT: GOTO 8941
 D343   0380    8934 I = PH%: PPH = 1: D0%(P) = D0%(P) + 1
 D346   0380         X0%(P, 0, D0%(P)) = I
 D346   0380         X0%(P, 1, D0%(P)) = 10
 D346   0380         X0%(P, 2, D0%(P)) = 81 + D0%(P)
 D346   0380         B%(P, I, 21) = 1: B3%(P, B1!(P)) = I
 D346   0380         IF B7%(P, B1!(P)) = 1 OR B7%(P, B1!(P)) = 10 THEN B9%(P, 1
                ) = 99: B9%(P, 0) = B1!(P): B7%(P, B1!(P)) = 10
 D43D   0380    8938 P9 = P: W5 = P9: W6 = P9: VV(P9) = B1!(P): VV1(P9) = B1!(P
                )
 D43D   0380         CALL HITTINGLINES(L%(), P%(), P1%(), B7%(), B%(), VV(), VV
                1(), B3%(), B4%(), K9!(), WF!)
 D4C0   0380         CALL FLDDISP (BC%,P,U%,D)
 D4D5   0380         CALL MAINSCREEN (D,P,BC%,U%,MO)
 D4EE   0380         VV(P9)=1:VV1(P9)=9
 D4EE   0380         Q$(0) = B$(P, B3%(P, B1!(P)))
 D4EE   0380         IF B7%(P, B1!(P)) = 1 THEN Q$(0) = P$(P, P1%(D))
 D575   0380         CALL NEWLINES: CALL PBP (M$(P)+" is sending up a pinch hit
                ter"): PPH = 1: GOTO 5052
 D5AB   0384    
 D5AB   0384    8941 IF PR%<>1 THEN CALL PINCHRUNNER (MS%,A1,S4%,I2,P,PR%,BC%,U
                %,D,MO)
 D5EB   0386         IF MS% = 1 THEN MS% = 0: GOTO 5052
 D5FB   0386    
 D5FB   0386    
 D5FB   0386    8971 IF B7%(P, B1!(P)) = 1 THEN BR = 0
 D624   0386         IF B7%(P, B1!(P)) <> 1 THEN BR = B%(P, B3%(P, B1!(P)), 30)
                                                                      PAGE  53
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 D674   0386         CALL RANDNUM(RN)
 D67D   0386         IF S4% = 0 AND (INFPOS% > 0 AND RN <= 5 OR INFPOS% = 0 AND
                 RN <= 5) AND BR > 8 THEN P2 = 4: GOTO 4100
 D6B0   0386    REM: MANAGER PROFILE TO HIT AND RUN
 D6B0   0386         CALL RANDNUM (RN)
 D6B9   0386         IF S4%=0 OR MG%(P,671)<>999 OR B7%(P, B1!(P)) = 1 THEN 894
                5
 D6FE   0386         IF b%(P, B3%(P, B1!(P)), 4) = 0 THEN I7!=0 ELSE I7! = INT(
                (b%(P, B3%(P, B1!(P)), 6)+b%(P, B3%(P, B1!(P)), 7)+b%(P, B3%(P,
                 B1!(P)), 8)*2+b%(P, B3%(P, B1!(P)), 9)*3)/b%(P, B3%(P, B1!(P))
                , 4)*1000+.5)
 D83F   0386         IF b%(P, B3%(P, B1!(P)), 12) = 0 THEN I6!=0 ELSE I6! = INT
                (b%(P, B3%(P, B1!(P)), 4) / b%(P, B3%(P, B1!(P)), 12)+.5)
 D8F1   0386    8949 IF S4%=1 AND O%(0)=0 AND A1<=MG%(P,672) AND A1>=MG%(P,673)
                *-1 AND RN<=MG%(P,674) AND I7!<=MG%(p,872) AND I6!>=MG%(p,866) 
                THEN P2 = 2:GOTO 5067
 D97B   0386         IF S4%=1 AND O%(0)=1 AND A1<=MG%(P,675) AND A1>=MG%(P,676)
                *-1 AND RN<=MG%(P,677) AND I7!<=MG%(p,873) AND I6!>=MG%(p,867) 
                THEN P2 = 2:GOTO 5067
 DA05   0386         IF S4%=5 AND O%(0)=0 AND A1<=MG%(P,678) AND A1>=MG%(P,679)
                *-1 AND RN<=MG%(P,680) AND I7!<=MG%(p,874) AND I6!>=MG%(p,868) 
                THEN P2 = 2:GOTO 5067
 DA8F   0386         IF S4%=5 AND O%(0)=1 AND A1<=MG%(P,681) AND A1>=MG%(P,682)
                *-1 AND RN<=MG%(P,683) AND I7!<=MG%(p,875) AND I6!>=MG%(p,869) 
                THEN P2 = 2:GOTO 5067
 DB19   0386         IF S4%=4 AND O%(0)=0 AND A1<=MG%(P,684) AND A1>=MG%(P,685)
                *-1 AND RN<=MG%(P,686) AND I7!<=MG%(p,876) AND I6!>=MG%(p,870) 
                THEN P2 = 2:GOTO 5067
 DBA3   0386         IF S4%=4 AND O%(0)=1 AND A1<=MG%(P,687) AND A1>=MG%(P,688)
                *-1 AND RN<=MG%(P,689) AND I7!<=MG%(p,877) AND I6!>=MG%(p,871) 
                THEN P2 = 2:GOTO 5067
 DC2D   0386    8945 IF MG%(P,609)<>999 OR B7%(P, B1!(P)) <> 1 THEN 8946
 DC68   0386         IF S4%<>1 AND S4%<>2 AND S4%<>4 THEN 8946
 DC80   0386         CALL RANDNUM (RN)
 DC89   0386         IF S4%=1 AND INNING%<=7 AND MG%(P,610)>=O%(0) AND A1<=MG%(
                P,611) AND A1>=MG%(P,612)*-1 AND RN<=MG%(P,613) THEN 8970
 DCE6   0386         IF S4%=1 AND INNING%>7 AND MG%(P,614)>=O%(0) AND A1<=MG%(P
                ,615) AND A1>=MG%(P,616)*-1 AND RN<=MG%(P,617) THEN 8970
 DD43   0386         IF S4%=2 AND INNING%<=7 AND MG%(P,618)>=O%(0) AND A1<=MG%(
                P,619) AND A1>=MG%(P,620)*-1 AND RN<=MG%(P,621) THEN 8970
 DDA0   0386         IF S4%=2 AND INNING%>7 AND MG%(P,622)>=O%(0) AND A1<=MG%(P
                ,623) AND A1>=MG%(P,624)*-1 AND RN<=MG%(P,625) THEN 8970
 DDFD   0386         IF S4%=4 AND INNING%<=7 AND MG%(P,626)>=O%(0) AND A1<=MG%(
                P,627) AND A1>=MG%(P,628)*-1 AND RN<=MG%(P,629) THEN 8970
 DE5A   0386         IF S4%=4 AND INNING%>7 AND MG%(P,630)>=O%(0) AND A1<=MG%(P
                ,631) AND A1>=MG%(P,632)*-1 AND RN<=MG%(P,633) THEN 8970
 DEB7   0386    8946 IF MG%(P,634)<>999 OR B7%(P, B1!(P))=1 OR O%(0)<>0 THEN 89
                47
 DEFC   0386         IF S4%<>1 AND S4%<>2 AND S4%<>4 THEN 8947
 DF14   0386         IF b%(P, B3%(P, B1!(P)), 4) = 0 THEN I7! = 0: I6!=0: GOTO 
                8948
 DF63   0386         I7! = INT(b%(P, B3%(P, B1!(P)), 6) / b%(P, B3%(P, B1!(P)),
                 4)*1000+.5)
 DF63   0386         I6! = INT((b%(P, B3%(P, B1!(P)), 6)+b%(P, B3%(P, B1!(P)), 
                                                                      PAGE  54
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

                7)+b%(P, B3%(P, B1!(P)), 8)*2+b%(P, B3%(P, B1!(P)), 9)*3)/b%(P,
                 B3%(P, B1!(P)), 4)*1000+.5)
 DF63   0386    8948 CALL RANDNUM (RN)
 E0E0   0386         IF S4%=1 AND INNING%<=7 AND A1<=MG%(P,635) AND A1>=MG%(P,6
                36)*-1 AND I7!<=MG%(P,637) AND I6!<=MG%(P,638) AND P%(D,P1%(D),
                10)<=MG%(P,639) AND RN<=MG%(P,640) THEN 8970
 E195   0386         IF S4%=2 AND INNING%<=7 AND A1<=MG%(P,641) AND A1>=MG%(P,6
                42)*-1 AND I7!<=MG%(P,643) AND I6!<=MG%(P,644) AND P%(D,P1%(D),
                10)<=MG%(P,645) AND RN<=MG%(P,646) THEN 8970
 E24A   0386         IF S4%=4 AND INNING%<=7 AND A1<=MG%(P,647) AND A1>=MG%(P,6
                48)*-1 AND I7!<=MG%(P,649) AND I6!<=MG%(P,650) AND P%(D,P1%(D),
                10)<=MG%(P,651) AND RN<=MG%(P,652) THEN 8970
 E2FF   0386         IF S4%=1 AND INNING%>7 AND A1<=MG%(P,653) AND A1>=MG%(P,65
                4)*-1 AND I7!<=MG%(P,655) AND I6!<=MG%(P,656) AND P%(D,P1%(D),1
                0)<=MG%(P,657) AND RN<=MG%(P,658) THEN 8970
 E3B4   0386         IF S4%=2 AND INNING%>7 AND A1<=MG%(P,659) AND A1>=MG%(P,66
                0)*-1 AND I7!<=MG%(P,661) AND I6!<=MG%(P,662) AND P%(D,P1%(D),1
                0)<=MG%(P,663) AND RN<=MG%(P,664) THEN 8970
 E469   0386         IF S4%=4 AND INNING%>7 AND A1<=MG%(P,665) AND A1>=MG%(P,66
                6)*-1 AND I7!<=MG%(P,667) AND I6!<=MG%(P,668) AND P%(D,P1%(D),1
                0)<=MG%(P,669) AND RN<=MG%(P,670) THEN 8970
 E51E   0386    
 E51E   0386    8947 P2 = 1
 E51E   0386         IF S4% = 1 OR S4% = 5 THEN 8944
 E538   0386         IF S4% = 2 OR S4% = 4 THEN 8950
 E54C   0386    8943 GOTO 8960
 E54C   0386    8944 IF A1 <= -1 AND B%(P, B3%(P, B0%(1, 0)), 13) < 10 OR B0%(1
                , 2) > 1 THEN 8943: REM:CHANGED FROM <10
 E581   0386         IF A1 >= -1 AND S4% = 5 THEN 8943
 E58F   0386         IF A1 < -5 OR B7%(P, B0%(1, 0)) = 1 AND S4% = 1 OR B7%(P, 
                B0%(2, 0)) = 1 AND S4% = 2 THEN 8943
 E5CA   0386         IF A1 < 0 AND INNING% >= 7 THEN 8943
 E5DB   0386         P2 = 3: GOTO 4800
 E5DB   0386    8950 IF B%(P, B3%(P, B0%(2, 0)), 13) < 40 OR B7%(P, B1!(P)) = 1
                 OR O%(0) = 2 THEN 8943
 E63B   0386         IF B0%(2, 2) > 1 THEN 8943
 E645   0386         P2 = 3: GOTO 4800
 E645   0386    8960 IF S4% = 0 OR O%(0) > 0 OR S4% = 7 OR S4% = 6 OR S4% = 3 O
                R S4% = 5 OR U% = 2 OR P = 0 AND INNING% > 7 THEN 8968
 E6A5   0386         IF B7%(P, B1!(P)) = 1 AND S4% = 1 AND O%(0) < 2 OR B7%(P, 
                B1!(P)) = 1 AND S4% = 2 AND O%(0) = 0 OR B7%(P, B1!(P)) = 1 AND
                 S4% = 4 AND O%(0) = 0 THEN 8969
 E741   0386         IF B1!(P) > 2 AND B1!(P) < 6 OR B4%(P, 0, B1!(P)) > 290 AN
                D B7%(P, B1!(P)) <> 1 OR B7%(P, B1!(P)) <> 1 AND B4%(P, 3, B1!(
                P)) > 70 THEN 8968
 E804   0386         IF INNING% > 7 AND A1 = -1 AND O%(0) = 0 AND S4% = 1 THEN 
                8969
 E823   0386    8968 PPH = 0: PR% = 0: GOTO 8980
 E823   0386    8969 IF O%(0) >= 1 AND INNING% >= 7 THEN 8968
 E840   0386    8970 P2 = 4: GOTO 4100
 E840   0386    8980 IF O%(0) = 2 OR B4%(P, 4, B1!(P)) > 100 OR S4% = 0 THEN 50
                64
 E88C   0386         IF S4% = 7 OR S4% = 6 OR S4% = 3 OR S4% = 2 OR A1 < -3 THE
                N 5064
                                                                      PAGE  55
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 E8BE   0386         IF INT(RND(1) * 100) + 1 > 20 THEN 5064
 E8F2   0386         P2 = 2
 E8F2   0386         GOTO 5067
 E8F2   0386    8985 REM:PH FOR PITCHER WITH PROFILE
 E8FB   0386         CALL RANDNUM(RN)
 E904   0386         MOB%=0
 E904   0386         FOR I=1 TO 3
 E910   0386         IF B0%(I, 0)>0 THEN MOB%=MOB%+1
 E91F   0386         NEXT
 E92B   0386         IF p% (P, P1%(P), 11) <> 999 THEN I7! = p%(I, P1%(I), 11):
                GOTO 8986
 E970   0386         IF p%(P, P1%(P), 20) = 0 THEN I7!=0:GOTO 8986
 E99D   0386         I7! = INT((p%(P, P1%(P), 22) / p%(P, P1%(P), 20)*1000+.5))
 E99D   0386    8986 FOR I=0 TO 2
 E9E4   0386         IF INNING% >= MG%(P,591+I*6) AND A1 <= MG%(P,592+I*6)*-1 A
                ND O%(0)<= MG%(P,594+I*6) AND I7!<=MG%(P,595+I*6) AND RN<=MG%(P
                ,596+I*6) AND MOB%>=MG%(P,593+I*6) THEN 8930
 EA89   0386         NEXT
 EA98   0386         GOTO 8905
 EA98   0386    8990 REM:SELECT PH FOR PITCHER
 EA9B   0386         I=P%(D,P1%(D),0)
 EA9B   0386         I1=6
 EA9B   0386         IF I<0 THEN I1=1
 EAC4   0386         FOR I=I1 TO I1+4
 EAD4   0388         IF MG%(P,I1+540)<>-1 AND B%(P,MG%(P,I1+540),21)=0 THEN PH%
                =MG%(P,I1+540):MG%(P,I1+540)=-1:GOTO 8934
 EB12   0388         NEXT
 EB1F   0388         GOTO 8933
 EB1F   0388    8991 REM:PH FOR POS PLAYER CASES
 EB22   0388         CALL RANDNUM (RN)
 EB2B   0388         MOB%=0
 EB2B   0388         FOR I=1 TO 3
 EB38   0388         IF B0%(I, 0)>0 THEN MOB%=MOB%+1
 EB47   0388         NEXT
 EB53   0388         IF b%(P, B3%(P, B1!(P)), 4) = 0 THEN I7! = 0: I6!=0: GOTO 
                8992
 EBA2   0388         I7! = INT(b%(P, B3%(P, B1!(P)), 6) / b%(P, B3%(P, B1!(P)),
                 4)*1000+.5)
 EBA2   0388         I6! = INT((b%(P, B3%(P, B1!(P)), 6)+b%(P, B3%(P, B1!(P)), 
                7)+b%(P, B3%(P, B1!(P)), 8)*2+b%(P, B3%(P, B1!(P)), 9)*3)/b%(P,
                 B3%(P, B1!(P)), 4)*1000+.5)
 EBA2   0388    8992 FOR I=0 TO 2
 ED1C   0388         IF INNING% >= MG%(P,848+I*6) AND A1 <= MG%(P,849+I*6)*-1 A
                ND I6!<= MG%(P,851+I*6) AND I7!<=MG%(P,852+I*6) AND RN<=MG%(P,8
                53+I*6) AND MOB%>=MG%(P,850+I*6) THEN 8909
 EDCC   0388         NEXT
 EDDB   0388         GOTO 8905
 EDDB   0388    
 EDDB   0388    8993 REM:SELECT PH FOR HITTER
 EDDE   0388         FOR I = 0 TO 22
 EDE4   0388         IF B%(P, I, 21) > 0 OR B$(P, I) = "XXX" THEN 8994
 EE14   0388         IF B7%(P, B1!(P)) <> B%(P, I, 22) AND B7%(P, B1!(P)) <> B%
                (P, I, 23) AND B7%(P, B1!(P)) <> B%(P, I, 24) AND B7%(P, B1!(P)
                ) <> B%(P, I, 25) THEN 8994
                                                                      PAGE  56
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 EEC1   0388         GOTO 8995
 EEC1   0388    8994 NEXT
 EED3   0388         GOTO 8935
 EED3   0388    8995 I=P%(D,P1%(D),0)
 EED6   0388         I1=6
 EED6   0388         IF I<0 THEN I1=1
 EEFF   0388         FOR I=I1 TO I1+4
 EF0E   038A         IF MG%(P,I1+540)<>-1 AND B%(P,MG%(P,I1+540),21)=0 THEN I=M
                G%(P,I1+540):MG%(P,I1+540)=-1:GOTO 8916
 EF4C   038A         NEXT
 EF59   038A         GOTO 8935
 EF59   038A    
 EF59   038A    SUB DisplayPCXFile (FileName$, VideoPage%) STATIC
 EF67   038A    
 EF67   038A       L = INSTR(FileName$, ".")   'Append the .PCX extension if it
                 isn't already there
 EF67   038A       IF L = 0 THEN FileName$ = FileName$ + ".PCX"
 EF89   038C    
 EF89   038C       Array$ = SPACE$(68 + 768)   'Set up an array for the header 
                and VGA 256 palette
 EF89   038C       IF NOT OpenPCXFile(FileName$, Array$) THEN EXIT SUB
 EFB5   0392    
 EFB5   0392       CALL WhichPCXScreen(Array$, WhichScreen%)
 EFC2   0394    
 EFC2   0394       CALL HandlePCXPalette(Array$, WhichScreen%)
 EFCF   0394    
 EFCF   0394       'Each of the if statements before the CALL's to Screen state
                ments
 EFCF   0394       'could be removed if you want the screen mode to be set by t
                his routine
 EFCF   0394       'and not by calling SetVideo prior to calling this routine. 
                 What the
 EFCF   0394       'if statements do is attempt not to set the screen mode if i
                t the computer
 EFCF   0394       'is already in that screen mode.
 EFCF   0394       IF WhichScreen = 4 OR WhichScreen = 6 THEN
 EFCF   0394          IF WhichScreen = 4 THEN CALL Screen1(0) ELSE CALL Screen2
                (0)
 F00B   0398          CALL DispPCXC(VideoPage%)
 F015   0398       ELSEIF WhichScreen = 2 THEN
 F018   0398          IF GPDat%(31) <> 3 THEN CALL Screen3(0)
 F046   039A          CALL DispPCXH(VideoPage%)
 F050   039A       ELSEIF WhichScreen = 9 AND GPDat%(31) = 8 THEN
 F053   039A          CALL Screen13(0)
 F081   039C          CALL DispPCXV256(VideoPage%)
 F08B   039C       ELSEIF WhichScreen = 5 THEN
 F08E   039C          IF GPDat%(31) = 8 THEN CALL Screen9(0)
 F0BC   039E          CALL DispPCXVE(VideoPage%)
 F0C6   039E       ELSE 'WhichScreen = 8
 F0C9   039E          'Un-REM this next line if you want the routine to set its
                 own screen
 F0C9   039E          'mode.  Otherwise if the image is VGA, then the machine i
                s likely to
 F0C9   039E          'be set in either VGA or EGA mode already.
                                                                      PAGE  57
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 F0C9   039E          'IF GPDat%(31) = 5 THEN CALL Screen9(0) ELSE CALL Screen1
                2(0)
 F0C9   039E          CALL DispPCXVE(VideoPage%)
 F0D3   039E       END IF
 F0D3   039E      
 F0D3   039E       Array$ = ""     'Empty the Array$.  We're done working with 
                it.
 F0D3   039E    
 F0D3   039E    END SUB
 F0E8   039E    SUB HandlePCXPalette (Array$, WhichScreen) STATIC
 F0F6   039E    
 F0F6   039E      PCXVersion = ASC(MID$(Array$, 2, 1))
 F0F6   039E      IF PCXVersion <> 2 AND PCXVersion <> 5 THEN EXIT SUB
 F11C   03A0    
 F11C   03A0      I = 17
 F11C   03A0      IF WhichScreen = 9 THEN I = 69
 F130   03A0    
 F130   03A0      IF WhichScreen = 8 THEN
 F130   03A0            IF GPDat%(31) = 5 THEN
 F130   03A0              FOR T = 0 TO 15
 F156   03A0            N = 0
 F156   03A0            a = ASC(MID$(Array$, I, 1)) \ 64
 F156   03A0            IF (a AND 1) = 1 THEN N = N + 32
 F188   03A4            IF (a AND 2) = 2 THEN N = N + 4
 F198   03A4            I = I + 1
 F198   03A4            b = ASC(MID$(Array$, I, 1)) \ 64
 F198   03A4            IF (b AND 1) = 1 THEN N = N + 16
 F1C8   03A6            IF (b AND 2) = 2 THEN N = N + 2
 F1D8   03A6            I = I + 1
 F1D8   03A6            c = ASC(MID$(Array$, I, 1)) \ 64
 F1D8   03A6            IF (c AND 1) = 1 THEN N = N + 8
 F208   03A8            IF (c AND 2) = 2 THEN N = N + 1
 F217   03A8            I = I + 1
 F217   03A8            CALL SetPaletteEGA(T, N)
 F228   03AA              NEXT
 F237   03AA            ELSE
 F23A   03AA              FOR T = 0 TO 15
 F240   03AA            CALL SetPaletteEGA(T, T)
 F24D   03AA              NEXT
 F259   03AA              FOR T = 0 TO 15
 F25E   03AA            a = ASC(MID$(Array$, I, 1)) \ 4
 F25E   03AA            I = I + 1
 F25E   03AA            b = ASC(MID$(Array$, I, 1)) \ 4
 F25E   03AA            I = I + 1
 F25E   03AA            c = ASC(MID$(Array$, I, 1)) \ 4
 F25E   03AA            I = I + 1
 F25E   03AA            CALL SetPalTripleVGA(T, a, b, c)
 F2DC   03AA              NEXT
 F2EB   03AA            END IF
 F2EB   03AA      ELSEIF WhichScreen = 5 THEN
 F2EE   03AA            FOR T = 0 TO 15
 F2FE   03AA              N = 0
 F2FE   03AA              a = ASC(MID$(Array$, I, 1)) \ 64
 F2FE   03AA              IF (a AND 1) = 1 THEN N = N + 32
                                                                      PAGE  58
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 F330   03AA              IF (a AND 2) = 2 THEN N = N + 4
 F340   03AA              I = I + 1
 F340   03AA              b = ASC(MID$(Array$, I, 1)) \ 64
 F340   03AA              IF (b AND 1) = 1 THEN N = N + 16
 F370   03AA              IF (b AND 2) = 2 THEN N = N + 2
 F380   03AA              I = I + 1
 F380   03AA              c = ASC(MID$(Array$, I, 1)) \ 64
 F380   03AA              IF (c AND 1) = 1 THEN N = N + 8
 F3B0   03AA              IF (c AND 2) = 2 THEN N = N + 1
 F3BF   03AA              I = I + 1
 F3BF   03AA              CALL SetPaletteEGA(T, N)
 F3D0   03AA            NEXT
 F3DF   03AA      ELSEIF WhichScreen = 9 THEN
 F3E2   03AA            FOR T = 0 TO 255
 F3F2   03AA              a = ASC(MID$(Array$, I, 1)) \ 4
 F3F2   03AA              I = I + 1
 F3F2   03AA              b = ASC(MID$(Array$, I, 1)) \ 4
 F3F2   03AA              I = I + 1
 F3F2   03AA              c = ASC(MID$(Array$, I, 1)) \ 4
 F3F2   03AA              I = I + 1
 F3F2   03AA              CALL SetPalTripleVGA(T, a, b, c)
 F470   03AA            NEXT
 F47F   03AA      END IF
 F47F   03AA     
 F47F   03AA    END SUB
 F487   03AA    
 F487   03AA    SUB WhichPCXScreen (Array$, WhichScreen) STATIC
 F495   03AA    
 F495   03AA      Manufacturer = ASC(MID$(Array$, 1, 1))
 F495   03AA      PCXVersion = ASC(MID$(Array$, 2, 1))
 F495   03AA    
 F495   03AA      Compression = ASC(MID$(Array$, 3, 1))
 F495   03AA      BitsPerPixel = ASC(MID$(Array$, 4, 1))
 F495   03AA    
 F495   03AA      XMin = CVI(MID$(Array$, 5, 2))          'Image locations
 F495   03AA      YMin = CVI(MID$(Array$, 7, 2))
 F495   03AA      XMax = CVI(MID$(Array$, 9, 2))
 F495   03AA      YMax = CVI(MID$(Array$, 11, 2))
 F495   03AA    
 F495   03AA      XSize = CVI(MID$(Array$, 13, 2))        'Monitor Display Size
 F495   03AA      YSize = CVI(MID$(Array$, 15, 2))
 F495   03AA     
 F495   03AA      NumPlanes = ASC(MID$(Array$, 66, 1))    'Number of video plan
                es
 F495   03AA      BytesPerLine = CVI(MID$(Array$, 67, 2)) 'Bytes Per Line
 F495   03AA    
 F495   03AA      'Determine Monitor Needed
 F495   03AA      IF (XMax - XMin + 1) = 320 OR XSize = 320 THEN
 F495   03AA            IF BitsPerPixel = 8 THEN
 F495   03AA              WhichScreen = 9
 F495   03AA            ELSE
 F5E6   03C2              WhichScreen = 4
 F5E6   03C2            END IF
 F5ED   03C2      ELSEIF (XSize = 720) OR (XMax - XMin + 1) = 720 THEN
                                                                      PAGE  59
                                                                      13 Jul 00
                                                                      05:17:57
Offset  Data    Source Line      Microsoft (R) Visual Basic (TM) for MS-DOS (R)

 F5F0   03C2            WhichScreen = 2
 F5F0   03C2      ELSEIF (XSize = 640) OR (XMax - XMin + 1) = 640 THEN
 F60F   03C2            IF (YSize = 200) OR (YMax - YMin + 1) = 200 THEN
 F60F   03C2              WhichScreen = 6
 F60F   03C2            ELSEIF (YSize = 350) OR (YMax - YMin + 1) <= 350 THEN
 F646   03C2              WhichScreen = 5
 F646   03C2            ELSEIF (YSize = 480) OR (YMax - YMin + 1) <= 480 THEN
 F665   03C2              WhichScreen = 8
 F665   03C2            END IF
 F684   03C2      END IF
 F684   03C2    
 F684   03C2      IF WhichScreen = 0 THEN
 F684   03C2            IF NumPlanes > 1 THEN WhichScreen = 8 ELSE WhichScreen 
                = 6
 F6A4   03C2            IF BitsPerPixel = 2 THEN WhichScreen = 4
 F6B2   03C2            IF BitsPerPixel = 8 THEN WhichScreen = 9
 F6C0   03C2      END IF
 F6C0   03C2    
 F6C0   03C2    END SUB
 F6C8   03C2    SUB WEATHER
 F6D6   03C2         CALL SCREEN0(0)
 F6E4   03C2         CALL DRAWBOX (5)
 F6F2   03C2         LOCATE 9, 11
 F6F2   03C2         IF L%(1, 9) = 1 THEN LOCATE , 11: PRINT "TEMPERATURE: 70":
                 LOCATE , 11: PRINT "WEATHER: DOME": LOCATE , 11: PRINT "WIND: 
                NONE": GOTO 8719
 F76C   03C2         LOCATE , 11: PRINT "TEMPERATURE: "; TP%
 F76C   03C2         LOCATE , 11: PRINT "SKY CONDITIONS: "; SC$(SC%)
 F76C   03C2         WS% = INT(RND(1) * 15) + 7
 F76C   03C2         LOCATE , 11: PRINT "WIND: ";WI$
 F76C   03C2         LOCATE , 11: PRINT "PRECIPITATION: "; PC$(PC%)
 F76C   03C2    8719 I$=INKEY$:IF I$="" THEN 8719
 F85A   03C2    END SUB
 F862   03C2    
 F867   03C2    

42481 Bytes Available
 1213 Bytes Free

    0 Warning Error(s)
    0 Severe  Error(s)
